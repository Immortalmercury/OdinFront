[{"C:\\OdinFront\\src\\index.js":"1","C:\\OdinFront\\src\\AppRouter.js":"2","C:\\OdinFront\\src\\serviceWorker.js":"3","C:\\OdinFront\\src\\context\\UserContext.js":"4","C:\\OdinFront\\src\\context\\LayoutContext.js":"5","C:\\OdinFront\\src\\themes\\index.js":"6","C:\\OdinFront\\src\\pages\\login\\Login.js":"7","C:\\OdinFront\\src\\pages\\register\\Register.js":"8","C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\AdminLayout.js":"9","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\StudentLayout.js":"10","C:\\OdinFront\\src\\services\\JWT.jsx":"11","C:\\OdinFront\\src\\services\\API.jsx":"12","C:\\OdinFront\\src\\pages\\error\\Error.js":"13","C:\\OdinFront\\src\\themes\\default.js":"14","C:\\OdinFront\\src\\themes\\purple.js":"15","C:\\OdinFront\\src\\components\\Centered\\index.jsx":"16","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\Sidebar.js":"17","C:\\OdinFront\\src\\pages\\error\\styles.js":"18","C:\\OdinFront\\src\\components\\Buttons\\UploadFileButton.jsx":"19","C:\\OdinFront\\src\\services\\AxiosDefaults.jsx":"20","C:\\OdinFront\\src\\components\\Buttons\\styles.js":"21","C:\\OdinFront\\src\\components\\Logo\\index.jsx":"22","C:\\OdinFront\\src\\components\\Notification\\Notification.js":"23","C:\\OdinFront\\src\\components\\Section\\index.jsx":"24","C:\\OdinFront\\src\\components\\Wrappers\\Wrappers.js":"25","C:\\OdinFront\\src\\components\\Loading\\index.jsx":"26","C:\\OdinFront\\src\\components\\Notification\\styles.js":"27","C:\\OdinFront\\src\\components\\Loading\\styles.js":"28","C:\\OdinFront\\src\\components\\ClosedSection\\index.jsx":"29","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\styles.js":"30","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\styles.js":"31","C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\styles.js":"32","C:\\OdinFront\\src\\layout\\student\\discipline\\DisciplineLayout.js":"33","C:\\OdinFront\\src\\pages\\student\\semester\\Semester.js":"34","C:\\OdinFront\\src\\pages\\register\\styles.js":"35","C:\\OdinFront\\src\\layout\\admin\\DisciplineLayout\\DisciplineGroupLayout.js":"36","C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\Sidebar.js":"37","C:\\OdinFront\\src\\pages\\login\\styles.js":"38","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"39","C:\\OdinFront\\src\\pages\\teacher\\CurrentDisciplines\\CurrentDisciplines.js":"40","C:\\OdinFront\\src\\components\\PageTitle\\PageTitle.js":"41","C:\\OdinFront\\src\\pages\\student\\LabsTimeline\\index.jsx":"42","C:\\OdinFront\\src\\pages\\teacher\\Profile\\index.jsx":"43","C:\\OdinFront\\src\\pages\\teacher\\MyDisciplines\\index.jsx":"44","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineConfigLayout.jsx":"45","C:\\OdinFront\\src\\pages\\teacher\\Groups\\index.jsx":"46","C:\\OdinFront\\src\\pages\\teacher\\Users\\index.jsx":"47","C:\\OdinFront\\src\\pages\\student\\semester\\styles.js":"48","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\ProfileRightBar\\index.jsx":"49","C:\\OdinFront\\src\\pages\\teacher\\AllDisciplines\\index.jsx":"50","C:\\OdinFront\\src\\pages\\student\\DisciplineDifferentialCredit\\index.jsx":"51","C:\\OdinFront\\src\\pages\\student\\DisciplineResources\\index.jsx":"52","C:\\OdinFront\\src\\pages\\student\\DisciplineAbout\\index.jsx":"53","C:\\OdinFront\\src\\pages\\teacher\\Users\\styles.js":"54","C:\\OdinFront\\src\\components\\Header\\Header.js":"55","C:\\OdinFront\\src\\pages\\teacher\\Groups\\styles.js":"56","C:\\OdinFront\\src\\pages\\teacher\\MyDisciplines\\styles.js":"57","C:\\OdinFront\\src\\pages\\teacher\\Profile\\styles.js":"58","C:\\OdinFront\\src\\pages\\teacher\\Users\\CreateInvitationsModal.jsx":"59","C:\\OdinFront\\src\\pages\\teacher\\Groups\\CreateGroupModal.jsx":"60","C:\\OdinFront\\src\\pages\\teacher\\Groups\\ViewModal.jsx":"61","C:\\OdinFront\\src\\components\\MuiTable\\index.jsx":"62","C:\\OdinFront\\src\\components\\SecureOptionSwitcher\\index.jsx":"63","C:\\OdinFront\\src\\components\\SecondsToRusTime\\index.jsx":"64","C:\\OdinFront\\src\\components\\PageTitle\\styles.js":"65","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineGroupsConfig\\index.jsx":"66","C:\\OdinFront\\src\\pages\\teacher\\CurrentDisciplines\\styles.js":"67","C:\\OdinFront\\src\\components\\FileButtons\\UploadFileButton.jsx":"68","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\components\\Dot.js":"69","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\components\\SidebarLink\\styles.js":"70","C:\\OdinFront\\src\\layout\\student\\StudentLayout\\ProfileRightBar\\styles.js":"71","C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\styles.js":"72","C:\\OdinFront\\src\\pages\\student\\LabsTimeline\\LabsTimelineItem.jsx":"73","C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"74","C:\\OdinFront\\src\\pages\\teacher\\AllDisciplines\\styles.js":"75","C:\\OdinFront\\src\\components\\DisabledEditableTextfield.jsx":"76","C:\\OdinFront\\src\\components\\DisabledEditablePassword.jsx":"77","C:\\OdinFront\\src\\pages\\student\\DisciplineResources\\styles.js":"78","C:\\OdinFront\\src\\pages\\teacher\\AllDisciplines\\CreateDisciplineModal.jsx":"79","C:\\OdinFront\\src\\components\\Header\\styles.js":"80","C:\\OdinFront\\src\\components\\HiddenValue\\index.jsx":"81","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineTotal\\index.jsx":"82","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineCourse\\index.jsx":"83","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineResources\\index.jsx":"84","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLabsConfig\\index.jsx":"85","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineMainConfigs\\index.jsx":"86","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineDifferentialCredit\\index.jsx":"87","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineExam\\index.jsx":"88","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineCredit\\index.jsx":"89","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineCourse\\index.jsx":"90","C:\\OdinFront\\src\\components\\Buttons\\DownloadFileButton.jsx":"91","C:\\OdinFront\\src\\components\\SecureOptionSwitcher\\styles.js":"92","C:\\OdinFront\\src\\components\\Buttons\\RequestButton.jsx":"93","C:\\OdinFront\\src\\components\\DateToRusTime\\index.jsx":"94","C:\\OdinFront\\src\\pages\\student\\DisciplineCredit\\index.jsx":"95","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineLabs\\index.jsx":"96","C:\\OdinFront\\src\\pages\\student\\DisciplineExam\\index.jsx":"97","C:\\OdinFront\\src\\pages\\teacher\\Groups\\AddStudentModal.jsx":"98","C:\\OdinFront\\src\\pages\\teacher\\Groups\\CreateInvitationModal.jsx":"99","C:\\OdinFront\\src\\components\\FileButtons\\styles.js":"100","C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\components\\Dot.js":"101","C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\components\\SidebarLink\\styles.js":"102","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineGroupsConfig\\AddGroupModal.jsx":"103","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineTotal\\styles.js":"104","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineMainConfigs\\styles.js":"105","C:\\OdinFront\\src\\pages\\student\\LabResultCard\\index.jsx":"106","C:\\OdinFront\\src\\components\\Timer\\index.jsx":"107","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineResources\\styles.js":"108","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLabsConfig\\styles.js":"109","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineCourse\\styles.js":"110","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineMainConfigs\\AddTeacherModal.jsx":"111","C:\\OdinFront\\src\\components\\FileButtons\\RequestButton.jsx":"112","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLabsConfig\\CreateLabModal.jsx":"113","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineCourse\\CreateThemeModal.jsx":"114","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineLabs\\styles.js":"115","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineGroupsConfig\\styles.js":"116","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineLabs\\CreateLabModal.jsx":"117","C:\\OdinFront\\src\\pages\\student\\LabResultCard\\styles.js":"118","C:\\OdinFront\\src\\components\\AlertDialog\\index.jsx":"119","C:\\OdinFront\\src\\pages\\student\\DisciplineCourse\\index.jsx":"120","C:\\OdinFront\\src\\pages\\student\\DisciplineLabs\\index.jsx":"121","C:\\OdinFront\\src\\pages\\student\\DisciplineCourse\\styles.js":"122","C:\\OdinFront\\src\\pages\\student\\DisciplineLabs\\styles.js":"123","C:\\OdinFront\\src\\components\\ProgressCircle\\index.jsx":"124","C:\\OdinFront\\src\\pages\\student\\CoursesList\\CoursesList.js":"125","C:\\OdinFront\\src\\pages\\student\\CoursesList\\styles.js":"126","C:\\OdinFront\\src\\pages\\student\\CoursePage\\CoursesPage.js":"127","C:\\OdinFront\\src\\pages\\student\\CoursePage\\styles.js":"128","C:\\OdinFront\\src\\pages\\student\\DisciplineEduProgram\\index.jsx":"129","C:\\OdinFront\\src\\pages\\student\\DisciplineEduProgram\\styles.js":"130","C:\\OdinFront\\src\\pages\\student\\LecturePage\\index.jsx":"131","C:\\OdinFront\\src\\pages\\teacher\\AllCourses\\index.jsx":"132","C:\\OdinFront\\src\\pages\\teacher\\AllCourses\\styles.js":"133","C:\\OdinFront\\src\\pages\\teacher\\AllCourses\\CreateModal.jsx":"134","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseConfigLayout.jsx":"135","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\index.jsx":"136","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\styles.js":"137","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\AddDisciplineModal.jsx":"138","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\CreateDisciplineModal.jsx":"139","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseStudentsConfig\\index.jsx":"140","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseStudentsConfig\\styles.js":"141","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseStudentsConfig\\AddStudentModal.jsx":"142","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineEduConfig\\index.jsx":"143","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineEduConfig\\CreateLabModal.jsx":"144","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineEduConfig\\styles.js":"145","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLecturesConfig\\index.jsx":"146","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLecturesConfig\\styles.js":"147","C:\\OdinFront\\src\\components\\Modal\\SimpleModal.jsx":"148","C:\\OdinFront\\src\\components\\Modal\\styles.js":"149","C:\\OdinFront\\src\\components\\Editor\\index.jsx":"150","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLecturesConfig\\EditModal.jsx":"151","C:\\OdinFront\\src\\components\\Modal\\ControlableModal.jsx":"152","C:\\OdinFront\\src\\components\\SecondsPicker\\index.jsx":"153","C:\\OdinFront\\src\\components\\Buttons\\RequestV2Button.jsx":"154","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineTestsConfig\\index.jsx":"155","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineTestsConfig\\styles.js":"156","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineTestsConfig\\EditModal.jsx":"157"},{"size":977,"mtime":1622593886885,"results":"158","hashOfConfig":"159"},{"size":3106,"mtime":1628105004906,"results":"160","hashOfConfig":"159"},{"size":4948,"mtime":1618270616000,"results":"161","hashOfConfig":"159"},{"size":3052,"mtime":1627218104306,"results":"162","hashOfConfig":"159"},{"size":1670,"mtime":1622209896527,"results":"163","hashOfConfig":"159"},{"size":598,"mtime":1622210302476,"results":"164","hashOfConfig":"159"},{"size":9958,"mtime":1628240897917,"results":"165","hashOfConfig":"159"},{"size":20288,"mtime":1628105215578,"results":"166","hashOfConfig":"159"},{"size":2654,"mtime":1628105616072,"results":"167","hashOfConfig":"159"},{"size":2487,"mtime":1628106427915,"results":"168","hashOfConfig":"159"},{"size":3956,"mtime":1627218438778,"results":"169","hashOfConfig":"159"},{"size":5252,"mtime":1628362050179,"results":"170","hashOfConfig":"159"},{"size":1947,"mtime":1628105171996,"results":"171","hashOfConfig":"159"},{"size":2987,"mtime":1622358740876,"results":"172","hashOfConfig":"159"},{"size":3471,"mtime":1623274498154,"results":"173","hashOfConfig":"159"},{"size":1002,"mtime":1623572905034,"results":"174","hashOfConfig":"159"},{"size":10321,"mtime":1627739012678,"results":"175","hashOfConfig":"159"},{"size":1334,"mtime":1618270616000,"results":"176","hashOfConfig":"159"},{"size":3696,"mtime":1623174135095,"results":"177","hashOfConfig":"159"},{"size":1228,"mtime":1627428501151,"results":"178","hashOfConfig":"159"},{"size":1453,"mtime":1628367272944,"results":"179","hashOfConfig":"159"},{"size":1218,"mtime":1623140564428,"results":"180","hashOfConfig":"159"},{"size":3298,"mtime":1622210242945,"results":"181","hashOfConfig":"159"},{"size":4625,"mtime":1628377426632,"results":"182","hashOfConfig":"159"},{"size":3790,"mtime":1622209934016,"results":"183","hashOfConfig":"159"},{"size":1162,"mtime":1623522703722,"results":"184","hashOfConfig":"159"},{"size":1267,"mtime":1623431867275,"results":"185","hashOfConfig":"159"},{"size":763,"mtime":1622358810220,"results":"186","hashOfConfig":"159"},{"size":6592,"mtime":1627227939339,"results":"187","hashOfConfig":"159"},{"size":3523,"mtime":1623431951300,"results":"188","hashOfConfig":"159"},{"size":715,"mtime":1622241295643,"results":"189","hashOfConfig":"159"},{"size":696,"mtime":1622968867761,"results":"190","hashOfConfig":"159"},{"size":7877,"mtime":1627741207756,"results":"191","hashOfConfig":"159"},{"size":3767,"mtime":1627228164454,"results":"192","hashOfConfig":"159"},{"size":4514,"mtime":1623275719017,"results":"193","hashOfConfig":"159"},{"size":5318,"mtime":1627224688240,"results":"194","hashOfConfig":"159"},{"size":5176,"mtime":1627742971228,"results":"195","hashOfConfig":"159"},{"size":3832,"mtime":1623275264514,"results":"196","hashOfConfig":"159"},{"size":4413,"mtime":1622251086945,"results":"197","hashOfConfig":"159"},{"size":3769,"mtime":1627223867189,"results":"198","hashOfConfig":"159"},{"size":429,"mtime":1622211096385,"results":"199","hashOfConfig":"159"},{"size":8820,"mtime":1627220875099,"results":"200","hashOfConfig":"159"},{"size":4309,"mtime":1627223893312,"results":"201","hashOfConfig":"159"},{"size":4811,"mtime":1627223935295,"results":"202","hashOfConfig":"159"},{"size":4205,"mtime":1628104458940,"results":"203","hashOfConfig":"159"},{"size":4663,"mtime":1627223958989,"results":"204","hashOfConfig":"159"},{"size":8918,"mtime":1627830285923,"results":"205","hashOfConfig":"159"},{"size":3162,"mtime":1622274730596,"results":"206","hashOfConfig":"159"},{"size":6102,"mtime":1627411166061,"results":"207","hashOfConfig":"159"},{"size":5311,"mtime":1627754445062,"results":"208","hashOfConfig":"159"},{"size":8511,"mtime":1623599870459,"results":"209","hashOfConfig":"159"},{"size":5676,"mtime":1623555546112,"results":"210","hashOfConfig":"159"},{"size":2196,"mtime":1623617695051,"results":"211","hashOfConfig":"159"},{"size":1430,"mtime":1623070268200,"results":"212","hashOfConfig":"159"},{"size":1458,"mtime":1628106713908,"results":"213","hashOfConfig":"159"},{"size":1245,"mtime":1623325693624,"results":"214","hashOfConfig":"159"},{"size":1271,"mtime":1623603611899,"results":"215","hashOfConfig":"159"},{"size":482,"mtime":1623449181310,"results":"216","hashOfConfig":"159"},{"size":7892,"mtime":1627223919772,"results":"217","hashOfConfig":"159"},{"size":6361,"mtime":1627223968494,"results":"218","hashOfConfig":"159"},{"size":7336,"mtime":1627223949573,"results":"219","hashOfConfig":"159"},{"size":2519,"mtime":1623536770509,"results":"220","hashOfConfig":"159"},{"size":5000,"mtime":1624223846899,"results":"221","hashOfConfig":"159"},{"size":1092,"mtime":1628372927099,"results":"222","hashOfConfig":"159"},{"size":462,"mtime":1618270616000,"results":"223","hashOfConfig":"159"},{"size":8391,"mtime":1627223739203,"results":"224","hashOfConfig":"159"},{"size":3162,"mtime":1622274730596,"results":"225","hashOfConfig":"159"},{"size":5550,"mtime":1623364224794,"results":"226","hashOfConfig":"159"},{"size":862,"mtime":1618270616000,"results":"227","hashOfConfig":"159"},{"size":1412,"mtime":1618270616000,"results":"228","hashOfConfig":"159"},{"size":2292,"mtime":1622163296090,"results":"229","hashOfConfig":"159"},{"size":4027,"mtime":1622483933441,"results":"230","hashOfConfig":"159"},{"size":8101,"mtime":1627741196899,"results":"231","hashOfConfig":"159"},{"size":4411,"mtime":1627221633498,"results":"232","hashOfConfig":"159"},{"size":1271,"mtime":1623603611899,"results":"233","hashOfConfig":"159"},{"size":2872,"mtime":1622174682912,"results":"234","hashOfConfig":"159"},{"size":6299,"mtime":1624213938768,"results":"235","hashOfConfig":"159"},{"size":1090,"mtime":1622521357078,"results":"236","hashOfConfig":"159"},{"size":4799,"mtime":1627223842888,"results":"237","hashOfConfig":"159"},{"size":3896,"mtime":1623334139895,"results":"238","hashOfConfig":"159"},{"size":2560,"mtime":1623281011666,"results":"239","hashOfConfig":"159"},{"size":11756,"mtime":1627224937385,"results":"240","hashOfConfig":"159"},{"size":6051,"mtime":1627223706241,"results":"241","hashOfConfig":"159"},{"size":6883,"mtime":1627223771989,"results":"242","hashOfConfig":"159"},{"size":9082,"mtime":1627223643414,"results":"243","hashOfConfig":"159"},{"size":13465,"mtime":1627223761688,"results":"244","hashOfConfig":"159"},{"size":2235,"mtime":1622970501781,"results":"245","hashOfConfig":"159"},{"size":155,"mtime":1622970324597,"results":"246","hashOfConfig":"159"},{"size":161,"mtime":1622970851234,"results":"247","hashOfConfig":"159"},{"size":5121,"mtime":1623606508361,"results":"248","hashOfConfig":"159"},{"size":3096,"mtime":1623175283292,"results":"249","hashOfConfig":"159"},{"size":1430,"mtime":1623070268200,"results":"250","hashOfConfig":"159"},{"size":4035,"mtime":1628367496157,"results":"251","hashOfConfig":"159"},{"size":625,"mtime":1623568502830,"results":"252","hashOfConfig":"159"},{"size":8487,"mtime":1623599760740,"results":"253","hashOfConfig":"159"},{"size":5546,"mtime":1627224913824,"results":"254","hashOfConfig":"159"},{"size":8638,"mtime":1623601344130,"results":"255","hashOfConfig":"159"},{"size":5064,"mtime":1627223977643,"results":"256","hashOfConfig":"159"},{"size":4886,"mtime":1627223963682,"results":"257","hashOfConfig":"159"},{"size":1553,"mtime":1623362750710,"results":"258","hashOfConfig":"159"},{"size":862,"mtime":1618270616000,"results":"259","hashOfConfig":"159"},{"size":1412,"mtime":1618270616000,"results":"260","hashOfConfig":"159"},{"size":9223,"mtime":1627223824584,"results":"261","hashOfConfig":"159"},{"size":1090,"mtime":1622513430974,"results":"262","hashOfConfig":"159"},{"size":1340,"mtime":1623327922557,"results":"263","hashOfConfig":"159"},{"size":11269,"mtime":1623600146255,"results":"264","hashOfConfig":"159"},{"size":5098,"mtime":1623597464838,"results":"265","hashOfConfig":"159"},{"size":1035,"mtime":1622521511820,"results":"266","hashOfConfig":"159"},{"size":1366,"mtime":1623362391812,"results":"267","hashOfConfig":"159"},{"size":1226,"mtime":1623607039612,"results":"268","hashOfConfig":"159"},{"size":5122,"mtime":1627223753463,"results":"269","hashOfConfig":"159"},{"size":3940,"mtime":1623601765484,"results":"270","hashOfConfig":"159"},{"size":7312,"mtime":1627227027781,"results":"271","hashOfConfig":"159"},{"size":4831,"mtime":1627223697077,"results":"272","hashOfConfig":"159"},{"size":1366,"mtime":1623362391812,"results":"273","hashOfConfig":"159"},{"size":1404,"mtime":1623335605335,"results":"274","hashOfConfig":"159"},{"size":6457,"mtime":1627224878208,"results":"275","hashOfConfig":"159"},{"size":1958,"mtime":1623569162939,"results":"276","hashOfConfig":"159"},{"size":1371,"mtime":1623355256114,"results":"277","hashOfConfig":"159"},{"size":7782,"mtime":1623738110740,"results":"278","hashOfConfig":"159"},{"size":8827,"mtime":1623839808737,"results":"279","hashOfConfig":"159"},{"size":1958,"mtime":1623569162939,"results":"280","hashOfConfig":"159"},{"size":1311,"mtime":1623542364927,"results":"281","hashOfConfig":"159"},{"size":2916,"mtime":1627572782894,"results":"282","hashOfConfig":"159"},{"size":5487,"mtime":1627573711568,"results":"283","hashOfConfig":"159"},{"size":3206,"mtime":1627511364078,"results":"284","hashOfConfig":"159"},{"size":6420,"mtime":1627738678566,"results":"285","hashOfConfig":"159"},{"size":3206,"mtime":1627574139127,"results":"286","hashOfConfig":"159"},{"size":11042,"mtime":1627740908396,"results":"287","hashOfConfig":"159"},{"size":1334,"mtime":1627740622179,"results":"288","hashOfConfig":"159"},{"size":2185,"mtime":1627741277125,"results":"289","hashOfConfig":"159"},{"size":5585,"mtime":1627743175232,"results":"290","hashOfConfig":"159"},{"size":1271,"mtime":1623603611899,"results":"291","hashOfConfig":"159"},{"size":4743,"mtime":1627750224413,"results":"292","hashOfConfig":"159"},{"size":2753,"mtime":1627851362918,"results":"293","hashOfConfig":"159"},{"size":4271,"mtime":1627828707686,"results":"294","hashOfConfig":"159"},{"size":1401,"mtime":1627825494822,"results":"295","hashOfConfig":"159"},{"size":5925,"mtime":1627826042204,"results":"296","hashOfConfig":"159"},{"size":3400,"mtime":1627828897373,"results":"297","hashOfConfig":"159"},{"size":4830,"mtime":1627849894887,"results":"298","hashOfConfig":"159"},{"size":1401,"mtime":1627825494822,"results":"299","hashOfConfig":"159"},{"size":6059,"mtime":1627836727072,"results":"300","hashOfConfig":"159"},{"size":8583,"mtime":1628060723141,"results":"301","hashOfConfig":"159"},{"size":7312,"mtime":1627227027781,"results":"302","hashOfConfig":"159"},{"size":1366,"mtime":1623362391812,"results":"303","hashOfConfig":"159"},{"size":5149,"mtime":1628377289043,"results":"304","hashOfConfig":"159"},{"size":1814,"mtime":1628198650999,"results":"305","hashOfConfig":"159"},{"size":1788,"mtime":1628115158088,"results":"306","hashOfConfig":"159"},{"size":1366,"mtime":1628111495072,"results":"307","hashOfConfig":"159"},{"size":1955,"mtime":1628367702009,"results":"308","hashOfConfig":"159"},{"size":3839,"mtime":1628377745166,"results":"309","hashOfConfig":"159"},{"size":2112,"mtime":1628208814204,"results":"310","hashOfConfig":"159"},{"size":1633,"mtime":1628363820516,"results":"311","hashOfConfig":"159"},{"size":4099,"mtime":1628368048210,"results":"312","hashOfConfig":"159"},{"size":5434,"mtime":1628377453372,"results":"313","hashOfConfig":"159"},{"size":1814,"mtime":1628198650999,"results":"314","hashOfConfig":"159"},{"size":3742,"mtime":1628371015708,"results":"315","hashOfConfig":"159"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},"1ibzef1",{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"318"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"318"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"318"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"318"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"318"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"318"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"318"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"318"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"451","usedDeprecatedRules":"318"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"318"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471","usedDeprecatedRules":"318"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"318"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"318"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"318"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"318"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"504","usedDeprecatedRules":"318"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"318"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"318"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"318"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"318"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"318"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"318"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"318"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"318"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"318"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"318"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"318"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"318"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"318"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"608","usedDeprecatedRules":"318"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"615","usedDeprecatedRules":"318"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"318"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"627","usedDeprecatedRules":"318"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"630","usedDeprecatedRules":"318"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"318"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"318"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"318"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"318"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"318"},"C:\\OdinFront\\src\\index.js",[],["668","669"],"C:\\OdinFront\\src\\AppRouter.js",[],"C:\\OdinFront\\src\\serviceWorker.js",[],"C:\\OdinFront\\src\\context\\UserContext.js",[],"C:\\OdinFront\\src\\context\\LayoutContext.js",[],"C:\\OdinFront\\src\\themes\\index.js",[],"C:\\OdinFront\\src\\pages\\login\\Login.js",[],"C:\\OdinFront\\src\\pages\\register\\Register.js",[],"C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\AdminLayout.js",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\StudentLayout.js",[],"C:\\OdinFront\\src\\services\\JWT.jsx",[],"C:\\OdinFront\\src\\services\\API.jsx",[],"C:\\OdinFront\\src\\pages\\error\\Error.js",[],"C:\\OdinFront\\src\\themes\\default.js",[],"C:\\OdinFront\\src\\themes\\purple.js",["670"],"import { grey } from \"@material-ui/core/colors\";\nimport tinycolor from \"tinycolor2\";\nimport cross from './cross-sign.png';\n\nconst primary = \"#9C27B0\";\nconst secondary = \"#987466\"; //c2eabd\nconst warning = \"#FF9800\";\nconst success = \"#4CAF50\";\nconst info = \"#00ACC1\";\n\nconst lightenRate = 7.5;\nconst darkenRate = 15;\n\nconst defaultTheme = {\n  palette: {\n    primary: {\n      main: primary,\n      light: tinycolor(primary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(primary)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    secondary: {\n      main: secondary,\n      light: tinycolor(secondary)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(secondary)\n        .darken(darkenRate)\n        .toHexString(),\n      contrastText: \"#FFFFFF\",\n    },\n    warning: {\n      main: warning,\n      light: tinycolor(warning)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(warning)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    success: {\n      main: success,\n      light: tinycolor(success)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(success)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    info: {\n      main: info,\n      light: tinycolor(info)\n        .lighten(lightenRate)\n        .toHexString(),\n      dark: tinycolor(info)\n        .darken(darkenRate)\n        .toHexString(),\n    },\n    text: {\n      primary: \"#4A4A4A\",\n      secondary: \"#6E6E6E\",\n      hint: \"#B9B9B9\",\n    },\n    background: {\n      default: \"#F6F7FF\",\n      light: \"#F3F5FF\",\n    },\n  },\n  customShadows: {\n    widget:\n      \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetDark:\n      \"0px 3px 18px 0px #4558A3B3, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n    widgetWide:\n      \"0px 12px 33px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n  },\n  overrides: {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: \"#4A4A4A3A\",\n        // cursor: 'url('+cross+'), auto',\n      },\n    },\n    MuiMenu: {\n      paper: {\n        boxShadow:\n          \"0px 3px 11px 0px #E8EAFC, 0 3px 3px -2px #B2B2B21A, 0 1px 8px 0 #9A9A9A1A\",\n      },\n    },\n    MuiSelect: {\n      icon: {\n        color: \"#B9B9B9\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"#F3F5FF !important\",\n          \"&:focus\": {\n            backgroundColor: \"#F3F5FF\",\n          },\n        },\n      },\n      button: {\n        \"&:hover, &:focus\": {\n          backgroundColor: \"#F3F5FF\",\n        },\n      },\n    },\n    MuiTouchRipple: {\n      child: {\n        backgroundColor: \"white\",\n      },\n    },\n    MuiTableRow: {\n      root: {\n        height: 56,\n      },\n    },\n    MuiTableCell: {\n      root: {\n        borderBottom: \"1px solid rgba(224, 224, 224, .5)\",\n        paddingLeft: 24\n      },\n      head: {\n        fontSize: \"0.95rem\",\n      },\n      body: {\n        fontSize: \"0.95rem\",\n      },\n    },\n    // PrivateSwitchBase: {\n    //   root: {\n    //     marginLeft: 10\n    //   }\n    // },\n    switchRoot: {\n      // marginLeft: \"0\",\n      color: grey[50] ,\n    },\n    switchLabel: {\n      color: grey[900] ,\n      justifyContent: 'space-between',\n    },\n    switchBase: {\n      marginLeft: \"0\",\n      color: grey[50],\n      '&$checked': {\n        color: primary,\n      },\n      '&$checked + $track': {\n      },\n    },\n  },\n};\n\nexport default defaultTheme;\n","C:\\OdinFront\\src\\components\\Centered\\index.jsx",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\Sidebar.js",["671","672","673","674","675"],"/* eslint-disable array-callback-return */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Paper,\n  Drawer,\n  IconButton,\n  List,\n} from \"@material-ui/core\";\nimport {\n  Filter1,\n  Filter2,\n  Filter3,\n  Filter4,\n  Filter5,\n  Filter6,\n  Filter7,\n  Filter8,\n  Filter9,\n  Filter9Plus,\n  ExitToApp,\n  Notifications,\n  LibraryBooks,\n} from \"@material-ui/icons\";\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n// import { useUserDispatch, logoutUser } from \"./../../context/UserContext\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components \nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n\n// context\n// import { useLayoutDispatch } from \"./../../context/LayoutContext\";\nimport { Divider } from \"@material-ui/core\";\n// import Logo from \"./../Logo/index\";\nimport { Avatar } from \"@material-ui/core\";\nimport { Badge } from \"@material-ui/core\";\n// import API from \"../../services/API\";\n// import LoadingPage from \"./../Loading/index\";\n// import Notification from \"./../Notification/Notification\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { logoutUser, useUserDispatch } from \"../../../../context/UserContext\";\nimport { useLayoutDispatch } from \"../../../../context/LayoutContext\";\nimport API from \"../../../../services/API\";\n// import Notification from './../../../../components/Notification/Notification';\nimport Logo from './../../../../components/Logo/index';\nimport LoadingPage from \"../../../../components/Loading\";\nimport Notification from './../../../../components/Notification/Notification';\n\nfunction SemesterIcon(num) {\n  switch (num) {\n    case 1:\n      return <Filter1 />;\n    case 2:\n      return <Filter2 />;\n    case 3:\n      return <Filter3 />;\n    case 4:\n      return <Filter4 />;\n    case 5:\n      return <Filter5 />;\n    case 6:\n      return <Filter6 />;\n    case 7:\n      return <Filter7 />;\n    case 8:\n      return <Filter8 />;\n    case 9:\n      return <Filter9 />;\n    default:\n      return <Filter9Plus />;\n  }\n}\n\nfunction Sidebar({ location, history }) {\n  var classes = useStyles();\n  var userDispatch = useUserDispatch();\n  var layoutDispatch = useLayoutDispatch();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [menu, setMenu] = useState(null);\n\n  const makeMenu = (items) => {\n    let menu = [\n      {\n        id: 0,\n        label: \"Таймлайн\",\n        link: \"/student/timeline\",\n        icon: <TimelineIcon />,\n      },\n      {\n        id: 10,\n        label: \"Курсы\",\n        link: \"/student/courses\",\n        icon: <LibraryBooks />,\n      },\n    ];\n    items.map((el) => {\n      menu.push({\n        id: el,\n        label: el + \" семестр\",\n        link: \"/student/semester/\" + el,\n        icon: SemesterIcon(el),\n      });\n    });\n    setMenu(menu);\n  };\n\n  const getData = async () => {\n    await API.call({\n      method: \"get_sidebar_data\",\n    }).then((result) => {\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        makeMenu(result.data.menu);\n      }\n      setLoading(false);\n      // getNotifications();\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    return () => {\n      setData(false);\n      setLoading(true);\n    };\n  }, []);\n\n  const timer = React.useRef();\n\n  // ! Включает(true)/Выключает(false) получение новых уведомлений\n  // const [timerRuns, setTimerRuns] = useState(false);\n  // const [notifications, setNotifications] = useState(null);\n\n  // const appendNotification = (newValues) => {\n  //   let newData = newValues;\n  //   Object.entries(notifications).map((e) => {\n  //     newData.push(e[1]);\n  //   });\n  //   setNotifications(newData);\n  // };\n\n  // function handleNotificationCall(text) {\n  //   var componentProps = {\n  //     type: \"feedback\",\n  //     message: text,\n  //     variant: \"contained\",\n  //     color: \"primary\",\n  //   };\n  //   sendNotification(componentProps, {\n  //     type: \"info\",\n  //     position: toast.POSITION.TOP_RIGHT,\n  //     progressClassName: classes.progress,\n  //     className: classes.notification,\n  //     autoClose: 5000,\n  //     hideProgressBar: true,\n  //     bodyClassName: classes.notificationBody,\n  //   });\n  // }\n\n  // const getNotifications = async () => {\n  //   await API.call({\n  //     method: \"get_user_notifications\",\n  //   }).then((result) => {\n  //     if (result.success) {\n  //       setNotifications(result.data);\n  //     }\n  //     setTimerRuns(false);\n  //   });\n  // };\n  // const updateNotifications = () => {\n  //   timer.current = window.setTimeout(async () => {\n  //     await API.call({\n  //       method: \"get_new_user_notifications\",\n  //     }).then((result) => {\n  //       if (result.success) {\n  //         if (result.data.length > 0) {\n  //           console.log(\"received Notifications: \" + result.data.length);\n\n  //           result.data.map((el) => {\n  //             handleNotificationCall(el.text);\n  //           });\n  //           appendNotification(result.data);\n  //         } else {\n  //           // console.log(\"No new Notifications, updateTime: \"+new Date().toLocaleString());\n  //         }\n  //       }\n  //     });\n  //     setTimerRuns(true);\n  //   }, 10000);\n  // };\n\n  // useEffect(() => {\n  //   if (!timerRuns) {\n  //     updateNotifications();\n  //   }\n  //   return () => {\n  //     clearTimeout(timer.current);\n  //     setTimerRuns(false);\n  //   };\n  // }, [timerRuns]);\n\n  // function sendNotification(componentProps, options) {\n  //   return toast(\n  //     <Notification\n  //       {...componentProps}\n  //       className={classes.notificationComponent}\n  //     />,\n  //     options,\n  //   );\n  // }\n\n  // function CloseButton({ closeToast, className }) {\n  //   return <CloseIcon className={className} onClick={closeToast} />;\n  // }\n\n  return (\n    <>\n      {/* <ToastContainer\n        className={classes.toastsContainer}\n        closeButton={\n          <CloseButton className={classes.notificationCloseButton} />\n        }\n        closeOnClick={false}\n        progressClassName={classes.notificationProgress}\n      /> */}\n      <Card\n        style={{\n          width: \"240px\",\n          position: \"fixed\",\n          top: 0,\n          zIndex: 1001,\n          height: 138,\n          left: 0,\n        }}\n      >\n        <CardContent\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <Logo type=\"simple\" style={{ width: \"100%\", padding: 0 }} />\n        </CardContent>\n      </Card>\n      <Drawer\n        variant={\"permanent\"}\n        className={classNames(classes.drawer)}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        open={true}\n      >\n        <Paper elevation={0}>\n          {loading ? (\n            <LoadingPage />\n          ) : (\n            <>\n              <List className={classes.sidebarList}>\n                {menu !== null &&\n                  menu.map((link) => (\n                    <SidebarLink\n                      key={link.id}\n                      location={location}\n                      isSidebarOpened={true}\n                      {...link}\n                    />\n                  ))}\n              </List>\n            </>\n          )}\n        </Paper>\n      </Drawer>\n      <Card\n        style={{\n          height: 150,\n          width: 239,\n          marginTop: 15,\n          position: \"fixed\",\n          bottom: 0,\n          left: 0,\n        }}\n      >\n        <Divider />\n        <CardContent\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            width: \"100%\",\n            height: \"100%\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          {!loading && (\n            <>\n              <div\n                style={{\n                  display: \"flex\",\n                  width: \"100%\",\n                  height: \"100%\",\n                  alignItems: \"center\",\n                  justifyContent: \"space-around\",\n                }}\n              >\n                <IconButton\n                  style={{ transform: \"rotate(180deg)\", color: \"red\" }}\n                  className={classes.profile_btn}\n                  onClick={() => logoutUser(userDispatch, history)}\n                >\n                  <ExitToApp />\n                </IconButton>\n                <IconButton\n                  onClick={(e) => layoutDispatch({ type: \"TOGGLE_PROFILE\" })}\n                >\n                  <Avatar\n                    src={data&& data.user&& data.user.photo&& data.user.photo}\n                    style={{ width: 70, height: 70, cursor: \"pointer\" }}\n                    className={classes.profile_btn}\n                  />\n                </IconButton>\n                <IconButton\n                  disabled\n                  // onClick={() =>\n                  //   handleNotificationCall(\n                  //     'Работа \"Лабораторная работа 4\" по предмету \"Новые информационные технологии\" была проверена. Проверил: Зууфина Валентина Максимовна. Оценка: 5',\n                  //   )\n                  // }\n                  color=\"primary\"\n                  className={classes.profile_btn}\n                >\n                  <Badge\n                    // badgeContent={isNotificationsUnread ? notifications.length : null}\n                    // style={{backgroundColor: '#FF9800'}}\n                    // badgeContent={5}\n                    color=\"error\"\n                  >\n                    <Notifications />\n                  </Badge>\n                </IconButton>\n              </div>\n              <Typography variant=\"h6\">\n                {data&&data.user && data.user.s_name + \" \" + data.user.f_name}\n              </Typography>\n            </>\n          )}\n        </CardContent>\n      </Card>\n    </>\n  );\n}\n\nexport default withRouter(Sidebar);\n","C:\\OdinFront\\src\\pages\\error\\styles.js",[],"C:\\OdinFront\\src\\components\\Buttons\\UploadFileButton.jsx",[],"C:\\OdinFront\\src\\services\\AxiosDefaults.jsx",[],"C:\\OdinFront\\src\\components\\Buttons\\styles.js",[],"C:\\OdinFront\\src\\components\\Logo\\index.jsx",[],"C:\\OdinFront\\src\\components\\Notification\\Notification.js",[],"C:\\OdinFront\\src\\components\\Section\\index.jsx",[],"C:\\OdinFront\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\OdinFront\\src\\components\\Loading\\index.jsx",[],"C:\\OdinFront\\src\\components\\Notification\\styles.js",[],"C:\\OdinFront\\src\\components\\Loading\\styles.js",[],"C:\\OdinFront\\src\\components\\ClosedSection\\index.jsx",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\styles.js",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\styles.js",[],"C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\styles.js",[],"C:\\OdinFront\\src\\layout\\student\\discipline\\DisciplineLayout.js",[],"C:\\OdinFront\\src\\pages\\student\\semester\\Semester.js",[],"C:\\OdinFront\\src\\pages\\register\\styles.js",[],"C:\\OdinFront\\src\\layout\\admin\\DisciplineLayout\\DisciplineGroupLayout.js",[],"C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\Sidebar.js",["676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Drawer, IconButton, List } from \"@material-ui/core\";\nimport { Card, CardContent, Typography, Paper } from '@material-ui/core';\n\nimport {\n  NotificationsNone as NotificationsIcon,\n  FormatSize as TypographyIcon,\n  FilterNone as UIElementsIcon,\n  BorderAll as TableIcon,\n  Filter1 as Semester1Icon,\n  Filter2 as Semester2Icon,\n  Filter3 as Semester3Icon,\n  Filter4 as Semester4Icon,\n  Filter5 as Semester5Icon,\n  Filter6 as Semester6Icon,\n  Filter7 as Semester7Icon,\n  Filter8 as Semester8Icon,\n  Filter9 as Semester9Icon,\n  Filter9Plus as SemesterOtherIcon,\n  ExitToApp,\n  Notifications,\n  Group,\n  Dashboard,\n  School,Layers,\n  PermIdentity\n} from \"@material-ui/icons\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\n// import { useUserDispatch, logoutUser } from \"./../../context/UserContext\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\n\n// context\nimport { Divider } from \"@material-ui/core\";\nimport { Avatar } from \"@material-ui/core\";\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport { logoutUser, useUserDispatch, useUserState } from \"../../../../context/UserContext\";\nimport API from \"../../../../services/API\";\nimport { useLayoutDispatch } from \"../../../../context/LayoutContext\";\nimport LoadingPage from './../../../../components/Loading/index';\n\nconst structure = [\n  { id: 6, label: \"Текущие дисциплины\", link: \"/teacher/current\", icon: <Dashboard /> },\n  { id: 7, label: \"Мои дисциплины\", link: \"/teacher/my_disciplines\", icon: <Layers /> },\n  { id: 8, label: \"Группы\", link: \"/teacher/groups\", icon: <Group /> }, \n];\nconst structureAdmin = [\n  { id: 6, label: \"Текущие дисциплины\", link: \"/teacher/current\", icon: <Dashboard /> },\n  { id: 7, label: \"Мои дисциплины\", link: \"/teacher/my_disciplines\", icon: <Layers /> },\n  { id: 8, label: \"Группы\", link: \"/teacher/groups\", icon: <Group /> },\n  { id: 5, type: \"divider\" },\n  { id: 11, type: \"title\", label: \"Администрирование\" },\n  { id: 9, label: \"Пользователи\", link: \"/teacher/users\", icon: <PermIdentity /> },   \n  { id: 12, label: \"Все дисциплины\", link: \"/teacher/all_disciplines\", icon: <ViewListIcon /> },  \n  { id: 12, label: \"Все курсы\", link: \"/teacher/courses/all\", icon: <ViewListIcon /> },  \n];\n\nconst getData = async (setData, setIsLoading) => {\n  setIsLoading(true);\n  await API.call({method: \"get_user_data\",}).then(result => {\n    if (result.success) {\n      console.log(result.data);\n      setData(result.data);\n    }\n    setIsLoading(false);\n  });\n}\n\nfunction Sidebar({ location, currentSemester, history }) {\n  var classes = useStyles();\n  var userDispatch = useUserDispatch();\n  var { role } = useUserState();\n  // const [isLoading, setIsLoading] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    getData(setData,setLoading);\n    return () => {\n      setData(false);\n      setLoading(true);\n    };\n  },[]);\n\n  // global\n  var isSidebarOpened = true;\n  var layoutDispatch = useLayoutDispatch();\n\n  return (<>\n    <Card className={classes.profileCard}>\n        <Divider/>\n      <CardContent className={classes.profileCardContent}>\n        {loading ? (<LoadingPage />) : (<>\n          <div style={{ display: 'flex', width: '40%',height: '100%', alignItems: 'center', justifyContent: 'space-around' }}>\n\n\n            <Avatar src={data.photo} style={{ width: 100, height: 100}}\n              variant=\"rounded\"\n              className={classes.profile_btn2} />\n    \n          </div>\n          <div style={{ display: 'flex',flexDirection: 'column', width: '60%', height: '100%', alignItems: 'center', justifyContent: 'space-around' }}>\n            <Typography variant=\"h6\">\n              {\n                data.s_name + ' ' +\n                data.f_name[0] + '.' +\n                data.fth_name[0] + '.'\n              }\n            </Typography>\n            <Button variant=\"outlined\" color=\"default\" size=\"small\" className={classes.profile_btn2}\n              onClick={e => {history.push('/teacher/profile')}}\n            >Профиль</Button>\n            <Button variant=\"outlined\" color=\"error\" size=\"small\" className={classes.exit_btn}\n              onClick={() => logoutUser(userDispatch,history)}\n            >Выход</Button>\n          </div>\n        </>)}\n      </CardContent>\n        \n        \n    </Card>\n    <Drawer variant={\"permanent\"}\n      className={classNames(classes.drawer)}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n      open={isSidebarOpened}\n    >\n        <List className={classes.sidebarList}>\n        { \n          (role === 'teacher' ? structure:structureAdmin).map(link => (\n            <SidebarLink\n              key={link.id}\n              location={location}\n              isSidebarOpened={isSidebarOpened}\n              {...link}\n            />\n          ))}\n        </List>\n    </Drawer>\n  </>);\n\n}\n\nexport default withRouter(Sidebar);\n","C:\\OdinFront\\src\\pages\\login\\styles.js",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\OdinFront\\src\\pages\\teacher\\CurrentDisciplines\\CurrentDisciplines.js",[],"C:\\OdinFront\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\OdinFront\\src\\pages\\student\\LabsTimeline\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Profile\\index.jsx",["696"],"import { Avatar, Button, Paper } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Centered from \"../../../components/Centered\";\nimport API from \"../../../services/API\";\nimport Header from \"./../../../components/Header/Header\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from \"./styles\";\nimport UploadFileButton from \"../../../components/FileButtons/UploadFileButton\";\nimport LoadingPage from \"./../../../components/Loading/index\";\n\nconst TableItem = ({ name, col }) => {\n  return (\n    <>\n      <div style={{ width: \"100%\", display: \"flex\", marginBottom: 15 }}>\n        <div style={{ width: 150 }}>{name}</div>\n        <div style={{ flexGrow: 1 }}>{col}</div>\n      </div>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  var classes = useStyles();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(false);\n\n  const getData = async () => {\n    // setLoading(true);\n    setError(false);\n    await API.call({\n      method: \"get_full_user_data\",\n    }).then((result) => {\n      if (result.success) {\n        setData(result.data);\n      } else {\n        setError(result.message);\n      }\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    return () => {\n      setData(null);\n      setLoading(true);\n    };\n  }, []);\n\n  return (\n    <>\n      <Header history={props.history} title={\"Мой профиль\"} />\n      {loading ? (\n        <LoadingPage />\n      ) : error ? (\n        <Centered>\n          <Typography color=\"textSecondary\">{error}</Typography>\n        </Centered>\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            padding: 20,\n            alignItems: \"flex-start\",\n            justifyContent: \"flex-start\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              width: 300,\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"space-around\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Avatar\n              src={data.photo}\n              style={{ width: 250, height: 250 }}\n              variant=\"rounded\"\n              className={classes.profile_btn2}\n            />\n            <UploadFileButton\n              data={{\n                method: \"upload_avatar\",\n              }}\n              label={\"Изменить фото\"}\n              color=\"primary\"\n              variant={\"outlined\"}\n              buttonType={\"Button\"}\n              successCallback={() => getData()}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              width: \"60%\",\n              height: \"100%\",\n              alignItems: \"center\",\n              justifyContent: \"space-around\",\n            }}\n          >\n            <div variant=\"h3\" style={{ marginBottom: 15 }}></div>\n            <TableItem\n              name={<Typography variant=\"h6\">ФИО :</Typography>}\n              col={\n                <Typography variant=\"h6\">\n                  {data.s_name + \" \" + data.f_name + \" \" + data.fth_name}\n                </Typography>\n              }\n            />\n            <TableItem\n              name={<Typography variant=\"h6\">Email :</Typography>}\n              col={<Typography variant=\"h6\">{data.email}</Typography>}\n            />\n            <TableItem\n              name={<Typography variant=\"h6\">Роль :</Typography>}\n              col={\n                <Typography variant=\"h6\">\n                  {data.role === 3 ? \"Администратор\" : \"Преподаватель\"}\n                </Typography>\n              }\n            />\n            <TableItem\n              name={<Typography variant=\"h6\">Логин :</Typography>}\n              col={<Typography variant=\"h6\">{data.login}</Typography>}\n            />\n            <TableItem\n              name={<Typography variant=\"h6\">Пароль :</Typography>}\n              col={\n                <Button variant=\"outlined\" color=\"primary\" size=\"small\">\n                  Изменить\n                </Button>\n              }\n            />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\OdinFront\\src\\pages\\teacher\\MyDisciplines\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineConfigLayout.jsx",["697"],"import React, { useState, useEffect } from \"react\";\nimport API from \"../../../services/API\";\nimport LoadingPage from '../../../components/Loading/index';\nimport Header from '../../../components/Header/Header';\nimport { AppBar, Paper } from '@material-ui/core';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport DisciplineMainConfigs from \"./DisciplineMainConfigs\";\nimport DisciplineGroupsConfig from './DisciplineGroupsConfig/index';\nimport DisciplineResources from \"./DisciplineResources\";\nimport DisciplineLabsConfig from \"./DisciplineLabsConfig\";\nimport DisciplineCourse from \"./DisciplineCourse\";\nimport DisciplineEduConfig from './DisciplineEduConfig/index';\nimport DisciplineLecturesConfig from './DisciplineLecturesConfig/index';\nimport DisciplineTestsConfig from './DisciplineTestsConfig/index';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (children)}\n    </div>\n  );\n}\n\nfunction tabProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst getData = async (id_discipline,setData,setLoading) => {\n  await API.call({\n    method: \"discipline_data\",\n    discipline: id_discipline,\n  }).then(result => {\n    if (result.success) {\n      console.log(result.data);\n      setData(result.data);\n    }\n    setLoading(false);\n  });\n}\n\nexport default function DisciplineConfigLayout(props) {\n  const [tab, setTab] = useState('edu');\n  const [data, setData] = useState(null);\n  const id_discipline = props.match.params.id_discipline;\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n      getData(id_discipline,setData,setLoading);\n    return () => {\n      setData(null);\n      setLoading(true);\n    };\n  }, [id_discipline]);\n\n  const updateExamForms = (forms) => {\n    setData({...data, exam_forms:forms});\n  }\n\n  return (\n    <>\n      <Header history={props.history} title={loading&&!data ? 'Загрузка' : data.description+\" (Конфигурации)\"} />\n      {loading ? (<LoadingPage />) : (<>\n        \n        <Paper style={{marginBottom:10}}>\n          <AppBar position=\"static\" color=\"transparent\">\n            <Tabs\n              value={tab}\n              onChange={(e, newValue) => {\n                setTab(newValue);\n              }}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              aria-label=\"scrollable auto tabs example\"\n            >\n              {/* <Tab value={'labs'} label=\"Практические\" {...tabProps(0)} /> */}\n              <Tab value={'edu'} label=\"Учебная программа\" {...tabProps(1)} />\n              <Tab value={'lectures'} label=\"Лекции\" {...tabProps(2)} />\n              <Tab value={'tests'} label=\"Тесты\" {...tabProps(2)} />\n              <Tab value={'teachers'} label=\"Преподаватели\" {...tabProps(6)} />\n              {/* <Tab value={'groups'} label=\"Группы\" {...tabProps(7)} /> */}\n              <Tab value={'resources'} label=\"Ресурсы\" {...tabProps(5)} />\n            </Tabs>\n          </AppBar>\n        </Paper>\n          <TabPanel value={tab} index={'edu'}>          <DisciplineEduConfig {...props}/></TabPanel>\n          <TabPanel value={tab} index={'lectures'}>     <DisciplineLecturesConfig {...props}/></TabPanel>\n          <TabPanel value={tab} index={'tests'}>        <DisciplineTestsConfig {...props}/></TabPanel>\n          <TabPanel value={tab} index={'groups'}>       <DisciplineGroupsConfig {...props}/></TabPanel>\n          <TabPanel value={tab} index={'teachers'}>     <DisciplineMainConfigs {...props} updateExamForms={ updateExamForms }/></TabPanel>\n          <TabPanel value={tab} index={'labs'}>         <DisciplineLabsConfig {...props}/></TabPanel>\n          <TabPanel value={tab} index={'resources'}>    <DisciplineResources {...props}/></TabPanel>\n      </>)}\n    </>\n  );\n}","C:\\OdinFront\\src\\pages\\teacher\\Groups\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Users\\index.jsx",["698"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, AppBar, Paper, Tab, Tabs } from \"@material-ui/core\";\nimport LoadingPage from \"../../../components/Loading/index\";\nimport Header from \"../../../components/Header/Header\";\nimport { Delete } from \"@material-ui/icons\";\nimport API from \"../../../services/API\";\nimport useStyles from \"./styles\";\nimport SecondsToRusTime from \"./../../../components/SecondsToRusTime/index\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport CreateInvitationsModal from \"./CreateInvitationsModal\";\nimport MuiTable from \"./../../../components/MuiTable/index\";\nimport HiddenValue from \"../../../components/HiddenValue\";\nimport SecureOptionSwitcher from \"../../../components/SecureOptionSwitcher\";\n\nconst monthA = \" января , февраля , марта , апреля , мая , июня , июля , августа , сентября , октября , ноября , декабря \".split(\n  \",\",\n);\n\nconst convertData = (tab, data, classes, deleteRequest, passwordForDelete, deleteAllowed) => {\n  let newData = [];\n  if (data !== null)\n    for (let index = 0; index < data.length; index++) {\n      const el = data[index];\n      if (tab === \"invitations\") {\n        let created = new Date(el.created_at);\n        let past_time = (new Date().getTime() - created.getTime()) / 1000;\n        newData.push([\n          el.login,\n          el.role === 91\n            ? \"Студента \" + (el.id_group ? el.id_group : \" без группы\")\n            : el.role === 92\n            ? \"Преподавателя\"\n            : el.role === 93\n            ? \"Администратора\"\n            : \"Не определено\",\n          !el.created_at ? (\n            \"Не определен\"\n          ) : (el.role === 91 && past_time > 60 * 60 * 24 * 7) ||\n            (el.role === 92 && past_time > 60 * 60 * 24 * 4) ||\n            (el.role === 93 && past_time > 60 * 60 * 24 * 1) ? (\n            <span style={{ color: \"red\" }}>Истек</span>\n          ) : (\n            <SecondsToRusTime\n              time={60 * 60 * 24 * (7 - 4 * (el.role - 91)) - past_time}\n            />\n          ),\n          <div style={{ display: \"flex\" }}>\n            <IconButton\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.B2}\n              onClick={() => {\n                deleteRequest(\"delete_invitation\", el.login);\n              }}\n            >\n              <Delete />\n            </IconButton>\n          </div>,\n        ]);\n      } else {\n        var last_login =\n          -(new Date(el.last_login) - new Date()) / 1000 - 60 * 60 * 3;\n        var tempFields = [];\n        tempFields.push(\n          el.s_name + \" \" + el.f_name + (el.fth_name ? \" \" + el.fth_name : \"\"),\n        );\n        if (tab === \"students\") tempFields.push(el.id_group);\n        newData.push([\n          ...tempFields,\n          <HiddenValue label=\"Email\" text={el.email} />,\n          el.banned ? (\n            <span style={{ color: \"red\" }}>\n              <FiberManualRecordIcon style={{ height: 12 }} />\n              Заблокирован\n            </span>\n          ) : (\n            <span style={{ color: \"green\" }}>\n              <FiberManualRecordIcon style={{ height: 12 }} />\n              Нет\n            </span>\n          ),\n          !el.last_login ? (\n            \"Никогда\"\n          ) : last_login < 60 ? (\n            <span style={{ color: \"green\" }}>\n              <FiberManualRecordIcon style={{ height: 12 }} />\n              Онлайн\n            </span>\n          ) : (\n            <>\n              <SecondsToRusTime time={last_login} />\n              {\" назад\"}\n            </>\n          ),\n          passwordForDelete&&deleteAllowed ? (\n            <div style={{ display: \"flex\" }}>\n              <IconButton\n              variant=\"outlined\"\n              color=\"secondary\"\n              className={classes.B2}\n              onClick={() => {\n                deleteRequest(\"delete_user\", el.login,passwordForDelete);\n              }}\n            >\n              <Delete />\n            </IconButton>\n            </div>\n          ) : (\n            \"\"\n          ),\n        ]);\n      }\n    }\n  return newData;\n};\n\nconst columns = (tab) => {\n  if (tab === \"invitations\")\n    return [\"Код приглашения\", \"В качестве\", \"Срок действия\", \"Удаление\"];\n  var first = [\"ФИО\"];\n  if (tab === \"students\") {\n    first.push(\"Группа\");\n  }\n  return [...first, \"Email\", \"Блокировка\", \"Последняя активность\", \"Действия\"];\n};\n\nconst titles = (tab) => {\n  if (tab === \"students\") return \"Студенты\";\n  if (tab === \"studentsNoGroup\") return \"Студенты вне групп\";\n  if (tab === \"teachers\") return \"Преподаватели\";\n  if (tab === \"admins\") return \"Администраторы\";\n  if (tab === \"invitations\") return \"Приглашения\";\n};\n\nconst Users = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [tab, setTab] = useState(\"students\");\n  const [updating, setUpdating] = useState(false);\n  const [passwordForDelete,setPasswordForDelete] = useState(\"\");\n  const [deleteAllowed,setDeleteAllowed] = useState(\"\");\n\n  const appendData = (newValues) => {\n    let newData = data;\n    Object.entries(newValues).map((e) => {\n      newData.push(e[1]);\n    });\n    setData(newData);\n    setUpdating(true);\n  };\n\n  const deleteRequest = async (method, login, password) => {\n    await API.call({ method, login, password }).then((result) => {\n      if (result.success) {\n        (async () => {\n          await API.call({ method: \"get_users\", tab }).then((result) => {\n            if (result.success) setData(result.data);\n            setLoading(false);\n          });\n        })();\n      }\n      setUpdating(true);\n    });\n  };\n\n  useEffect(() => {\n    setUpdating(false);\n    return () => {\n      setUpdating(false);\n    };\n  }, [updating]);\n\n  useEffect(() => {\n    (async () => {\n      await API.call({ method: \"get_users\", tab }).then((result) => {\n        if (result.success) setData(result.data);\n        setLoading(false);\n      });\n    })();\n    return () => {\n      setData(false);\n      setLoading(true);\n    };\n  }, [tab]);\n\n  return (\n    <>\n      <Header history={props.history} title={\"Пользователи\"} />\n      <Paper>\n        <AppBar position=\"static\" color=\"transparent\">\n          <Tabs\n            value={tab}\n            onChange={(e, newValue) => setTab(newValue)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"auto\"\n          >\n            <Tab value={\"students\"} label=\"Студенты\" />\n            <Tab value={\"studentsNoGroup\"} label=\"Студенты вне групп\" />\n            <Tab value={\"teachers\"} label=\"Преподаватели\" />\n            <Tab value={\"admins\"} label=\"Администраторы\" />\n            <Tab value={\"invitations\"} label=\"Приглашения\" />\n          </Tabs>\n        </AppBar>\n      </Paper>\n\n      <div style={{ paddingTop: 10 }}>\n        <SecureOptionSwitcher\n          hidden={tab === \"invitations\" ? true : false}\n          label={\"Удаление пользователей\"}\n          passwordValue={passwordForDelete}\n          setPasswordValue={setPasswordForDelete}\n          allowed={deleteAllowed}\n          setAllowed={setDeleteAllowed}\n        />\n      </div>\n\n      <Grid container spacing={4} style={{ paddingTop: 10, paddingBottom: 100 }}>\n        <Grid item xs={12}>\n          {loading ? (\n            <LoadingPage />\n          ) : (\n            <MuiTable\n              title={titles(tab)}\n              data={data && convertData(tab, data, classes, deleteRequest, passwordForDelete, deleteAllowed)}\n              columns={columns(tab)}\n              selectableRowsHideCheckboxes={\n                tab === \"invitations\" ? false : true\n              }\n              onRowsDelete={async (currentRowsSelected) => {\n                let deleteLogins = [];\n                currentRowsSelected.data.map((el) => {\n                  deleteLogins.push(data[el.dataIndex].login);\n                });\n                return await API.call({\n                  method: \"delete_invitations\",\n                  deleteLogins,\n                }).then((result) => {\n                  return result.success;\n                });\n              }}\n            />\n          )}\n        </Grid>\n      </Grid>\n\n      {tab === \"invitations\" && !loading && (\n        <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n          <CreateInvitationsModal appendDataCallback={appendData} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Users;\n","C:\\OdinFront\\src\\pages\\student\\semester\\styles.js",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\ProfileRightBar\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\AllDisciplines\\index.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineDifferentialCredit\\index.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineResources\\index.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineAbout\\index.jsx",["699","700","701"],"import { Tooltip } from '@material-ui/core';\nimport { Typography, IconButton } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\nimport { Edit, Email } from '@material-ui/icons';\nimport React, { useState, useEffect } from 'react';\nimport Centered from '../../../components/Centered';\nimport Section from './../../../components/Section/index';\nimport { Button } from '@material-ui/core';\n\nconst DisciplineAbout = (props) => {\n  const [update, setUpdate] = useState(null);\n  const [data, setData] = useState(null);\n\n  return (\n    <>\n      <Section\n        requestData={{\n          method: 'get_teachers',\n          discipline: props.match.params.id_discipline,\n        }}\n        setData={setData}\n        update={update}\n        setUpdate={setUpdate}\n        debug\n      >\n        {data && (<>\n          <Centered style={{minHeight:400,alignItems:\"flex-start\",padding:50,flexDirection:\"row\", flexWrap:\"wrap\",justifyItems:'flex-start'}}>\n            {data.map((el) =>\n              <div style={{display:'flex',alignItems:'center',marginBottom:40,}}>\n                <Avatar src={el.photo} style={{ margin: 10, marginLeft:40, width: 150, height: 150 }} />\n                <div style={{display:'flex',flexDirection:\"column\",alignItems:'center', marginLeft:0, justifyItems:'center',minWidth: 350}}>\n                <Typography variant=\"h4\" style={{marginBottom: 20}}>\n                  {el.s_name +\n                  \" \" +\n                  (el.f_name + \" \") +\n                  (el.fth_name!==null ? el.fth_name:'')}\n                </Typography>\n                <Tooltip arrow position=\"top\" title=\"Написать по E-mail\">\n                  <Button\n                    color={\"primary\"}\n                    variant=\"contained\"\n                    startIcon={<Email />}\n                    onClick={() => {\n                      window.location.href = \"mailto:\"+el.email;\n                    }}\n                  >\n                  Отправить Email\n                </Button>\n                </Tooltip>\n                </div>\n              </div>\n            )}\n          </Centered>\n       </>)} \n      </Section>\n    </>\n  );\n};\n\nexport default DisciplineAbout;\n","C:\\OdinFront\\src\\pages\\teacher\\Users\\styles.js",[],"C:\\OdinFront\\src\\components\\Header\\Header.js",["702"],"import React from \"react\";\nimport { AppBar, Toolbar, IconButton, Button,} from \"@material-ui/core\";\nimport { ArrowBack } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport { Badge, Typography } from \"./../Wrappers/Wrappers\";\nimport { Helmet } from 'react-helmet';\n\nexport default function Header(props) {\n  var classes = useStyles();\n\n  return (<>\n    {props.title !== 'Загрузка' && (<Helmet title={props.title} />)}\n    <AppBar position=\"fixed\" color={\"primary\"} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        <IconButton\n          color=\"inherit\"\n          edge=\"start\"\n          onClick={() => props.history.goBack()}\n          className={classNames(\n            classes.headerMenuButtonSandwich,\n            classes.headerMenuButtonCollapse,\n          )}\n        >\n          <ArrowBack\n            classes={{\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\n            }}\n          />\n        </IconButton>\n        <Typography variant=\"h6\" weight=\"medium\" className={classNames(classes.logotype, classes.grow)}>\n          {props.title}\n          {props.badges &&\n            props.badges.map((item) => (\n              <Badge color=\"secondary\" badgeContent={item} max={9999999999} />\n            ))}\n        </Typography>\n        {props.button && props.button}\n      </Toolbar>\n    </AppBar>\n  </>);\n}\n","C:\\OdinFront\\src\\pages\\teacher\\Groups\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\MyDisciplines\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\Profile\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\Users\\CreateInvitationsModal.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Groups\\CreateGroupModal.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Groups\\ViewModal.jsx",[],"C:\\OdinFront\\src\\components\\MuiTable\\index.jsx",[],"C:\\OdinFront\\src\\components\\SecureOptionSwitcher\\index.jsx",["703","704","705","706"],"import React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  TextField,\n  Switch,\n  InputAdornment,\n} from \"@material-ui/core\";\nimport { Add, Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport API from \"../../services/API\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport MuiTable from \"../MuiTable\";\nimport { FormControlLabel } from \"@material-ui/core\";\n\nconst SecureOptionSwitcher = ({\n  passwordValue,\n  setPasswordValue,\n  label,\n  hidden,\n  allowed,\n  setAllowed,\n}) => {\n  const classes = useStyles();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [showPasswordValue, setShowPasswordValue] = useState(false);\n\n  const checkPassword = async () => {\n    setLoading(true);\n    await API.call({\n      method: \"check_password\",\n      password: passwordValue,\n    }).then((result) => {\n      setLoading(false);\n      if (result.success) {\n        setModalOpen(false);\n        setAllowed(true);\n      } else {\n        setError(result.message);\n      }\n    });\n  };\n\n  return (\n    <>\n      {!hidden && (\n        <FormControlLabel\n          value=\"start\"\n          control={\n            <Switch\n              color=\"primary\"\n              checked={allowed}\n              onChange={() => {\n                if (passwordValue === \"\" && !allowed) {\n                  setModalOpen(true);\n                } else {\n                  setPasswordValue(\"\");\n                  setAllowed(false);\n                }\n              }}\n            />\n          }\n          label={label}\n          labelPlacement=\"start\"\n        />\n      )}\n\n      {modalOpen && (\n        <Dialog open={modalOpen} fullWidth={true} maxWidth={\"xs\"}>\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{\" Подтверждение паролем \"}</Typography>\n            {!loading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setModalOpen(false);\n                  setAllowed(false);\n                  setPasswordValue(\"\");\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {loading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : (\n            <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <TextField\n                label=\"Пароль\"\n                variant=\"outlined\"\n                autoFocus\n                onKeyDown={(e) => {\n                  if (\n                    (e.key !== undefined && e.key === 13) ||\n                    (e.keyCode !== undefined && e.keyCode === 13)\n                  ) {\n                    checkPassword();\n                  }\n                }}\n                onChange={(e) => {\n                  setPasswordValue(e.target.value);\n                  setError(false);\n                }}\n                onClick={(e) => {\n                  if (error) setError(false);\n                }}\n                type={showPasswordValue ? \"text\" : \"password\"}\n                value={passwordValue}\n                fullWidth\n                error={error ? true : false}\n                helperText={error}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={() => setShowPasswordValue(!showPasswordValue)}\n                        onMouseDown={(event) => event.preventDefault()}\n                      >\n                        {showPasswordValue ? <VisibilityOff /> : <Visibility />}\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n              />\n\n              <Button\n                onClick={() => {\n                  checkPassword();\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                style={{ margin: \"15px 0px\" }}\n              >\n                Включить\n              </Button>\n            </DialogContent>\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default SecureOptionSwitcher;\n","C:\\OdinFront\\src\\components\\SecondsToRusTime\\index.jsx",[],"C:\\OdinFront\\src\\components\\PageTitle\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineGroupsConfig\\index.jsx",["707","708","709","710","711","712","713","714","715","716","717","718","719"],"import {\n  Avatar,\n  CircularProgress,\n  IconButton,\n  Paper,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Switch from \"@material-ui/core/Switch\";\nimport LoadingPage from \"../../../../components/Loading\";\nimport API from \"../../../../services/API\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport useStyles from \"./styles\";\nimport { Delete } from \"@material-ui/icons\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddGroupModal from \"./AddGroupModal\";\nimport ForwardIcon from \"@material-ui/icons/Forward\";\n\nconst DisciplineGroupsConfig = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const id_discipline = props.match.params.id_discipline;\n  const [loading, setLoading] = useState(false);\n  const [removeGroupProgress, setRemoveGroupProgress] = useState(false);\n  const [removeGroupId, setRemoveGroupId] = useState(false);\n\n  const appendGroup = (newValues) => {\n    let newData = newValues;\n\n    Object.entries(data.students).map((e) => {\n      newData.push(e[1]);\n    });\n    setData({ ...data, students: newData });\n  };\n\n  const appendTeacher = (newValues) => {\n    let newData = newValues;\n    Object.entries(data.teachers_data).map((e) => {\n      newData.push(e[1]);\n    });\n    setData({ ...data, teachers_data: newData });\n  };\n\n  const removeGroup = async (group) => {\n    setRemoveGroupProgress(true);\n    setRemoveGroupId(group);\n    await API.call({\n      method: \"remove_group_from_discipline\",\n      group,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        (async () => {\n          await loadData(false);\n        })();\n      } else {\n      }\n    });\n  };\n\n  const loadData = async (reload = true) => {\n    if (reload) setLoading(true);\n    await API.call({\n      method: \"discipline_data\",\n      discipline: id_discipline,\n    }).then((result) => {\n      setLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n      } else {\n        // setError(result.message);\n      }\n      setRemoveGroupId(false);\n      setRemoveGroupProgress(false);\n    });\n  };\n\n  useEffect(() => {\n    loadData(true);\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <LoadingPage />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={3}\n            style={{ paddingTop: 10, paddingBottom: 100 }}\n          >\n            <Grid item xs={12}>\n              <MuiTable\n                title={\n                  <div disableTypography className={classes.modalTitle}>\n                    <Typography variant=\"h6\">\n                      {\"Список групп, изучающих дисциплину\"}\n                    </Typography>\n                  </div>\n                }\n                viewColumns={false}\n                search={false}\n                columns={[\n                  \"Группа\",\n                  \"Год поступления\",\n                  \"Студентов\",\n                  \"Дисциплина изучается на\",\n                  \"Действия\",\n                ]}\n                data={\n                  !data\n                    ? []\n                    : (() => {\n                        let newData = [];\n                        if (data.students !== null)\n                          for (\n                            let index = 0;\n                            index < data.students.length;\n                            index++\n                          ) {\n                            const el = data.students[index].group;\n                            const stud = data.students[index];\n                            let course =\n                              data.students[index].edu_year - el.admission_year;\n                            newData.push([\n                              el.id_group,\n                              el.admission_year,\n                              el.students_count,\n                              <div style={{ display: \"flex\" }}>\n                                <Typography color=\"textPrimary\">\n                                  {\"На \" + course + \" курсе\"}\n                                </Typography>\n                                <Typography\n                                  color=\"textSecondary\"\n                                  style={{ marginLeft: 5 }}\n                                >\n                                  {\"(\" +\n                                    stud.edu_year +\n                                    \"-\" +\n                                    (stud.edu_year + 1) +\n                                    \" уч.год, \" +\n                                    stud.semester +\n                                    \" семестр)\"}\n                                </Typography>\n                              </div>,\n\n                              <div style={{ display: \"flex\" }}>\n                                <Tooltip\n                                  title=\"Перейти к результатам группы\"\n                                  placement=\"top\"\n                                  arrow\n                                >\n                                  <IconButton\n                                    variant=\"outlined\"\n                                    // color=\"primary\"\n                                    className={classes.B4}\n                                    disabled={removeGroupProgress}\n                                    onClick={() => {\n                                      props.history.push(\n                                        \"/teacher/discipline/\" +\n                                          id_discipline +\n                                          \"/group/\" +\n                                          el.id_group,\n                                      );\n                                    }}\n                                  >\n                                    <ForwardIcon />\n                                  </IconButton>\n                                </Tooltip>\n                                <Tooltip\n                                  title=\"Исключить из дисциплины\"\n                                  placement=\"top\"\n                                  arrow\n                                >\n                                  <IconButton\n                                    variant=\"outlined\"\n                                    className={classes.B2}\n                                    style={{ marginLeft: 10 }}\n                                    disabled={el.self || removeGroupProgress}\n                                    onClick={() => {\n                                      removeGroup(el.id_group);\n                                    }}\n                                  >\n                                    {removeGroupProgress &&\n                                    removeGroupId === el.id_group ? (\n                                      <CircularProgress\n                                        color=\"primary\"\n                                        size={20}\n                                      />\n                                    ) : (\n                                      <RemoveCircleIcon />\n                                    )}\n                                  </IconButton>\n                                </Tooltip>\n                              </div>,\n                            ]);\n                          }\n                        return newData;\n                      })()\n                }\n              />\n            </Grid>\n          </Grid>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n            {data && (\n              <AddGroupModal\n                discipline={data.id_discipline}\n                appendDataCallback={appendGroup}\n              />\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DisciplineGroupsConfig;\n","C:\\OdinFront\\src\\pages\\teacher\\CurrentDisciplines\\styles.js",[],"C:\\OdinFront\\src\\components\\FileButtons\\UploadFileButton.jsx",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\components\\Dot.js",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\OdinFront\\src\\layout\\student\\StudentLayout\\ProfileRightBar\\styles.js",[],"C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\styles.js",["720"],"import { makeStyles } from \"@material-ui/styles\";\nimport { red,common, grey } from '@material-ui/core/colors';\n\nconst drawerWidth = 320;\nconst backgroundClr = '#2C2C2C';\nconst textColor = grey[300];\nconst profileHeight = 150;\n\nexport default makeStyles(theme => ({\n  scrollbars: {\n    '&::-webkit-scrollbar': {\n      width: 24, /* ширина для вертикального скролла */\n      height: 8, /* высота для горизонтального скролла */\n      backgroundColor: '#143861',\n    },\n\n    /* ползунок скроллбара */\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: '#843465',\n      borderRadius: '9em',\n      boxShadow: 'inset 1px 1px 10px #f3faf7',\n    },\n\n    '&::-webkit-scrollbar-thumb:hover': {\n      backgroundColor: '#253861',\n    },\n\n    /* Стрелки */\n\n    '&::-webkit-scrollbar-button:vertical:start:decrement': {\n      background: 'linear-gradient(120deg, #02141a 40%, rgba(0, 0, 0, 0) 41%), linear-gradient(240deg, #02141a 40%, rgba(0, 0, 0, 0) 41%), linear-gradient(0deg, #02141a 30%, rgba(0, 0, 0, 0) 31%)',\n      backgroundColor: '#f6f8f4',\n    },\n\n    '&::-webkit-scrollbar-button:vertical:end:increment': {\n      background:\n        'linear-gradient(300deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),' +\n        'linear-gradient(60deg, #02141a 40%, rgba(0, 0, 0, 0) 41%),' +\n        'linear-gradient(180deg, #02141a 30%, rgba(0, 0, 0, 0) 31%)',\n      backgroundColor: '#f6f8f4',\n    },\n\n    '&::-webkit-scrollbar-button:horizontal:start:decrement': {\n      background: 'linear-gradient(30deg, #02141a 40%, rgba(0, 0, 0, 0) 41%), linear-gradient(150deg, #02141a 40%, rgba(0, 0, 0, 0) 41%), linear-gradient(270deg, #02141a 30%, rgba(0, 0, 0, 0) 31%)',\n      backgroundColor: '#f6f8f4',\n    },\n\n    '&::-webkit-scrollbar-button:horizontal:end:increment': {\n      background: 'linear - gradient(210deg, #02141a 40 %, rgba(0, 0, 0, 0) 41 %), linear - gradient(330deg, #02141a 40 %, rgba(0, 0, 0, 0) 41 %), linear - gradient(90deg, #02141a 30 %, rgba(0, 0, 0, 0) 31 %)',\n      backgroundColor: '#f6f8f4',\n    },\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36,\n  },\n  profile_btn: {\n    cursor: 'poiner',\n  },\n  profile_btn2: {\n    cursor: 'poiner',\n    borderColor: grey[500],\n      color: grey[500],\n    '&:hover': {\n      borderColor: grey[100],\n      color: grey[100],\n    }\n  },\n  exit_btn: {\n    cursor: 'poiner',\n    borderColor: red[700],\n    color: red[700],\n    '&:hover': {\n      borderColor: red[300],\n      color: red[300],\n    }\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    zIndex: 1000,\n    backgroundColor: backgroundClr,\n  },\n  profileCard: {\n    height: profileHeight,\n    width: 320,\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    backgroundColor: backgroundClr,\n    borderRadius: 0,\n  },\n  profileCardContent: {\n    display: 'flex',\n    // flexDirection: 'column',\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 0,\n    color: textColor,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    justifyContent: 'space-between',\n    marginTop: profileHeight,\n    maxHeight: 'calc(100vh - '+profileHeight+'px)',\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    backgroundColor: backgroundClr,\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"lg\")]: {\n      display: \"none\",\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  sidebarList: {\n    // marginTop: theme.spacing(6),\n    backgroundColor: backgroundClr,\n    color: textColor,\n    marginRight: 0,\n  }, \n  mobileBackButton: {\n    marginTop: theme.spacing(0.5),\n    marginLeft: 18,\n    [theme.breakpoints.only(\"sm\")]: {\n      marginTop: theme.spacing(0.625),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n","C:\\OdinFront\\src\\pages\\student\\LabsTimeline\\LabsTimelineItem.jsx",[],"C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\OdinFront\\src\\pages\\teacher\\AllDisciplines\\styles.js",[],"C:\\OdinFront\\src\\components\\DisabledEditableTextfield.jsx",[],"C:\\OdinFront\\src\\components\\DisabledEditablePassword.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineResources\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\AllDisciplines\\CreateDisciplineModal.jsx",["721","722","723","724"],"/* eslint-disable array-callback-return */\nimport React, { useState } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Fab,\n  Tooltip,\n  TextField,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport API from \"../../../services/API\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport MuiTable from \"../../../components/MuiTable\";\n\nconst convertData = (data) => {\n  let newData = [];\n  if (data !== null)\n    // console.log(data);\n    for (let index = 0; index < data.length; index++) {\n      const el = data[index];\n      newData.push([\n        el.login,\n        el.role === 91\n          ? \"Студента \" + el.id_group\n          : el.role === 92\n          ? \"Преподавателя\"\n          : el.role === 93\n          ? \"Администратора\"\n          : \"Не определено\",\n      ]);\n    }\n  return newData;\n};\n\nconst CreateDisciplineModal = ({ setRerender }) => {\n  const [invitationModal, setInvitationModal] = useState(false);\n  const [invitationsCount, setInvitationsCount] = useState(0);\n  const [group, setGroup] = useState(\"\");\n  const [admissionYear, setAdmissionYear] = useState(new Date().getFullYear());\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n\n  const createGroup = async () => {\n    setIsLoading(true);\n    setError(false);\n    await API.call({\n      method: \"create_discipline\",\n      description: group,\n    }).then((result) => {\n      setIsLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        // if (invitationsCount === 0) {\n          setInvitationModal(false);\n          setRerender(true);\n          setData(false);\n        // }\n      } else {\n        setError(result.message);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Создать группу\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setInvitationModal(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {invitationModal && (\n        <Dialog\n          open={invitationModal}\n          fullWidth={true}\n          maxWidth={!data ? \"xs\" : \"sm\"}\n        >\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{\" Создание дисциплины \"}</Typography>\n            {!isLoading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setInvitationModal(false);\n                  setRerender(true);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {isLoading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : data ? (\n            <MuiTable\n              title={[\n                \"Пожалуйста распечатайте или при печати сохраните как PDF\",\n              ]}\n              data={convertData(data)}\n              columns={[\"Приглашение\", \"В качестве\"]}\n              filter={true}\n              print={true}\n              noMatch=\"Приглашений нет\"\n            />\n          ) : (\n            <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {error ? (\n                <Typography color=\"error\" className={classes.errorMessage}>\n                  {error}\n                </Typography>\n              ) : null}\n              <TextField\n                label=\"Название дисциплины\"\n                type=\"text\"\n                variant=\"outlined\"\n                value={group}\n                onChange={(e) => setGroup(e.target.value)}\n              />\n              <Button\n                onClick={() => createGroup()}\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                style={{ margin: \"15px 0px\" }}\n              >\n                Создать\n              </Button>\n            </DialogContent>\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default CreateDisciplineModal;\n","C:\\OdinFront\\src\\components\\Header\\styles.js",[],"C:\\OdinFront\\src\\components\\HiddenValue\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineTotal\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineCourse\\index.jsx",["725"],"import React, { useEffect, useState } from \"react\";\nimport { Avatar } from \"@material-ui/core\";\nimport { Check, Close, Delete, RotateLeft } from \"@material-ui/icons\";\nimport useStyles from \"./styles\";\nimport CreateThemeModal from \"./CreateThemeModal\";\nimport API from \"../../../../services/API\";\nimport RequestButton from './../../../../components/FileButtons/RequestButton';\nimport LoadingPage from './../../../../components/Loading/index';\nimport SecureOptionSwitcher from \"../../../../components/SecureOptionSwitcher\";\nimport MuiTable from \"../../../../components/MuiTable\"; \nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nconst DisciplineCourse = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [passwordForDelete, setPasswordForDelete] = useState(\"\");\n  const [deleteAllowed, setDeleteAllowed] = useState(false);\n  const [rerender, setRerender] = useState(false);\n  const classes = useStyles();\n  const id_discipline = props.match.params.id_discipline;\n\n  const getData = async () => {\n    // setLoading(true);\n    await API.call({\n      method: \"get_themes\",\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        setData(result.data);\n      }\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    getData(setData, setLoading);\n    return () => {\n      setData(null);\n      // setLoading(true);\n      setRerender(false);\n    };\n  }, [rerender]);\n\n  const convertData = () => {\n    let newData = [];\n    if (data !== null)\n      for (let index = 0; index < data.length; index++) {\n        const el = data[index];\n\n        newData.push([\n          el.description,\n          el.id_student !== null ? (\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <Avatar\n                sizes={50}\n                src={el.student.photo}\n                style={{ marginRight: 10 }}\n              />\n              {el.student.s_name +\n                \" \" +\n                (el.student.f_name && el.student.f_name[0] + \".\") +\n                (el.student.fth_name && el.student.fth_name[0] + \".\")}\n            </div>\n          ) : (\n            \"Отсутствует\"\n          ),\n          el.id_student !== null && (el.confirmed === -1 ? (\n            <span style={{ color: \"red\" }}>\n              <FiberManualRecordIcon style={{ height: 12 }} />\n              Отклонена\n            </span>\n          ) : el.confirmed === 1 ? (\n            <span style={{ color: \"green\" }}>\n              <FiberManualRecordIcon style={{ height: 12 }} />\n              Подтверждена\n            </span>\n          ):(\n            <span style={{ color: \"orange\" }}>\n              <FiberManualRecordIcon style={{ height: 12 }} />\n              На рассмотрении\n            </span>\n          )),\n          <div style={{ display: \"flex\" }}>\n            {el.confirmed === 0 ? (<>\n              <RequestButton\n                color=\"primary\"\n                className={classes.B5}\n                buttonType={\"IconButton\"}\n                icon={<Check/>}\n                label=\"Подтвердить\"\n                style={{ marginLeft: 10 }}\n                requestData={{\n                  method: \"confirm_theme\",\n                  theme: el.id_theme,\n                }}\n                onSuccess={()=>getData()}\n                \n              />\n              <RequestButton\n                className={classes.B3}\n                color=\"secondary\"\n                buttonType={\"IconButton\"}\n                icon={<Close/>}\n                label=\"Отклонить\"\n                style={{ marginLeft: 10 }}\n                requestData={{\n                  method: \"decline_theme\",\n                  theme: el.id_theme,\n                }}\n                onSuccess={()=>getData()}\n                \n              />\n            </>):(<RequestButton\n                color=\"primary\"\n                className={classes.B4}\n                buttonType={\"IconButton\"}\n                icon={<RotateLeft/>}\n                label=\"Отменить решение\"\n                style={{ marginLeft: 10 }}\n                requestData={{\n                  method: \"reset_theme\",\n                  theme: el.id_theme,\n                }}\n                onSuccess={()=>getData()}\n                \n              />)}\n            {passwordForDelete && deleteAllowed && (\n              <RequestButton\n              className={classes.B2}\n              color=\"primary\"\n              buttonType={\"IconButton\"}\n              icon={<Delete/>}\n              label=\"Удалить\"\n              style={{ marginLeft: 10 }}\n              requestData={{\n                method: \"delete_theme\",\n                theme: el.id_theme,\n              }}\n              onSuccess={()=>getData()}\n              \n            />)}\n            \n              \n            \n          </div>,\n        ]);\n      }\n    return newData;\n  };\n\n  return (\n    <>\n      {loading ? (\n        <LoadingPage />\n      ) : (\n        <>\n          <div style={{ paddingBottom: 10 }}>\n            <SecureOptionSwitcher\n              label={\"Удаление тем\"}\n              passwordValue={passwordForDelete}\n              setPasswordValue={setPasswordForDelete}\n              allowed={deleteAllowed}\n              setAllowed={setDeleteAllowed}\n            />\n          </div>\n          <MuiTable \n            title={\"Список тем\"}\n            columns={[\"Название\", \"Студент\", \"Статус\", \"Действия\"]}\n            data={!loading && data ? convertData() : []}\n            />\n            <div style={{ paddingBottom: 100 }}></div>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n                <CreateThemeModal setRerender={()=>getData()} discipline={ id_discipline}/>\n          </div>\n        </div>\n          </>\n      )}\n\n    </>\n  );\n};\n\nexport default DisciplineCourse;\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineResources\\index.jsx",["726","727","728"],"import React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Tooltip } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport API from \"../../../../services/API\";\nimport LoadingPage from \"../../../../components/Loading\";\nimport { Add, Archive, Delete, Description, GetApp } from \"@material-ui/icons\";\nimport useStyles from \"./styles\";\nimport UploadFileButton from \"../../../../components/FileButtons/UploadFileButton\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst monthA = \" января , февраля , марта , апреля , мая , июня , июля , августа , сентября , октября , ноября , декабря \".split(\n  \",\",\n);\nconst convertData = (data, classes, discipline, setRerender) => {};\n\nconst getFile = async (id_resource, filename) => {\n  await API.filecall(\n    {\n      method: \"get_resource\",\n      resource: id_resource,\n    },\n    filename,\n  ).then((result) => {\n    if (!result.success) {\n      alert(\"Ошибка загрузки! Откройте консоль!\");\n    }\n  });\n};\n\n\n\nconst DisciplineResources = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const id_discipline = props.match.params.id_discipline;\n  const [loading, setLoading] = useState(true);\n  const [rerender, setRerender] = useState(false);\n  const [progress, setProgress] = useState(false);\n  const [progressId, setProgressId] = useState(false);\n\n  const removeFile = async (id_resource) => {\n    setProgress(true);\n    setProgressId(id_resource);\n    await API.call({\n      method: \"delete_resource_from_discipline\",\n      resource: id_resource,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        getData();\n      }\n    });\n  };\n\n  const getData = async () => {\n    await API.call({\n      method: \"get_discipline_resources\",\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        setData(result.data);\n      }\n      setLoading(false);\n      setProgress(false);\n      setProgressId(false);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    return () => {\n      setData(null);\n      setLoading(true);\n      setRerender(false);\n    };\n  }, [rerender]);\n\n  return (\n    <>\n      {loading ? (\n        <LoadingPage />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={4}\n            style={{ paddingTop: 10, paddingBottom: 100 }}\n          >\n            <Grid item xs={12}>\n              <MuiTable\n                title=\"Список ресурсов\"\n                data={\n                  loading || !data\n                    ? []\n                    : (() => {\n                        let newData = [];\n                        if (data !== null)\n                          for (let index = 0; index < data.length; index++) {\n                            const el = data[index];\n                            let type = null;\n                            switch (el.type) {\n                              case 1:\n                                type = <Archive />;\n                                break;\n\n                              case 2:\n                                type = <Description />;\n                                break;\n\n                              default:\n                                type = el.type;\n                                break;\n                            }\n\n                            if (el.updated_at === null)\n                              el.updated_at = el.created_at;\n                            el.updated_at = new Date(el.updated_at);\n\n                            newData.push([\n                              type,\n                              el.description,\n                              el.updated_at.getDate() +\n                                monthA[el.updated_at.getMonth()] +\n                                el.updated_at.getFullYear() +\n                                \" \" +\n                                el.updated_at.getHours() +\n                                \":\" +\n                                el.updated_at.getMinutes(),\n                              <div style={{ display: \"flex\" }}>\n                                <IconButton\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={() => {\n                                    getFile(el.id_resource, el.description);\n                                  }}\n                                  disabled={progress}\n                                >\n                                  <GetApp />\n                                </IconButton>\n                                <IconButton\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  className={classes.B2}\n                                  onClick={() => {\n                                    removeFile(el.id_resource);\n                                  }}\n                                  disabled={progress}\n                                >\n                                  {progress &&\n                                  progressId === el.id_resource ? (\n                                    <CircularProgress\n                                      color=\"primary\"\n                                      size={20}\n                                    />\n                                  ) : (\n                                    <Tooltip\n                                      title=\"Удалить\"\n                                      placement=\"top\"\n                                      arrow\n                                    >\n                                      <Delete />\n                                    </Tooltip>\n                                  )}\n                                </IconButton>\n                              </div>,\n                            ]);\n                          }\n                        return newData;\n                      })()\n                }\n                columns={[\"Тип\", \"Название\", \"Загружено\", \"Действия\"]}\n                noMatch={\"Нет ресурсов\"}\n              />\n            </Grid>\n          </Grid>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n            <UploadFileButton\n              color=\"primary\"\n                buttonType=\"Fab\"\n                label=\"Загрузить новый файл\"\n              icon={<Add />}\n              data={{\n                method: \"upload_resource\",\n                discipline: id_discipline,\n              }}\n              successCallback={getData}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DisciplineResources;\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLabsConfig\\index.jsx",["729","730","731","732","733","734"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Tooltip } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport API from \"../../../../services/API\";\nimport LoadingPage from \"../../../../components/Loading\";\nimport { Add, Archive, Delete, Description, GetApp } from \"@material-ui/icons\";\nimport useStyles from \"./styles\";\nimport UploadFileButton from \"../../../../components/FileButtons/UploadFileButton\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport AlertDialog from \"../../../../components/AlertDialog\";\nimport { Typography } from \"@material-ui/core\";\nimport CreateLabModal from \"./CreateLabModal\";\n\nconst monthA = \" января , февраля , марта , апреля , мая , июня , июля , августа , сентября , октября , ноября , декабря \".split(\n  \",\",\n);\nconst convertData = (data, classes, discipline, setRerender) => {};\n\nconst DisciplineLabsConfig = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const id_discipline = props.match.params.id_discipline;\n  const [loading, setLoading] = useState(true);\n  const [progress, setProgress] = useState(false);\n  const [progressId, setProgressId] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [alertDescription, setAlertDescription] = useState(null);\n\n  const removeFile = async (id_lab) => {\n    setProgress(true);\n    setProgressId(id_lab);\n    await API.call({\n      method: \"check_lab_data\",\n      lab: id_lab,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        if (result.status === \"DATA_EXISTS\") {\n          let message = <>{result.data.map(el => \n            <Typography>{el}</Typography>\n          )}</>;\n          // console.log(message);\n          setAlertDescription(message);\n          setOpen(true);\n        } else if (result.status === \"DATA_NOT_EXISTS\") {\n          agreedRemoving();\n        }\n      } else {\n        setProgress(false);\n        setProgressId(false);\n      }\n    });\n  };\n\n  const agreedRemoving = async () => {\n    await API.call({\n      method: \"delete_lab\",\n      lab: progressId,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        getData();\n      } else {\n        setProgress(false);\n        setProgressId(false);\n      }\n    });\n  };\n\n  const getFile = async (lab, filename) => {\n    await API.filecall(\n      {\n        method: \"get_lab_file\",\n        lab: lab,\n      },\n      filename,\n    ).then((result) => {\n      if (!result.success) {\n        alert(\"Ошибка загрузки! Откройте консоль!\");\n      }\n    });\n  };\n\n  const getData = async () => {\n    await API.call({\n      method: \"get_discipline_labs\",\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        setData(result.data);\n      }\n      setLoading(false);\n      setProgress(false);\n      setProgressId(false);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    return () => {\n      setData(null);\n      setLoading(true);\n    };\n  }, []);\n\n\n  return (\n    <>\n      <AlertDialog\n        open={open}\n        setOpen={setOpen}\n        question={\"Удалить лабораторную вместе со всеми данными?\"}\n        description={alertDescription}\n        successCallback={agreedRemoving}\n        failCallback={() => {\n          setProgress(false);\n          setProgressId(false);\n        }}\n      />\n      {loading ? (\n        <LoadingPage />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={4}\n            style={{ paddingTop: 10, paddingBottom: 100 }}\n          >\n            <Grid item xs={12}>\n              <MuiTable\n                title=\"Список ресурсов\"\n                columns={[\n                  \"№,ID\",\n                  \"Название (Комментарий)\",\n                  \"Последнее обновление\",\n                  \"Файл задания\",\n                  \"Действия\",\n                ]}\n                noMatch={\"Нет ресурсов\"}\n                data={\n                  loading || !data\n                    ? []\n                    : (() => {\n                        let newData = [];\n                        if (data !== null)\n                          for (let index = 0; index < data.length; index++) {\n                            const el = data[index];\n                            if (el.updated_at === null)\n                              el.updated_at = el.created_at;\n                            el.updated_at = new Date(el.updated_at);\n\n                            newData.push([\n                              index + 1 + \" (ID\" + el.id_lab + \")\",\n                              <>\n                                {el.description}\n                                {el.comment && (\n                                  <>\n                                    <br />\n                                    {\"(\" + el.comment + \")\"}\n                                  </>\n                                )}\n                              </>,\n                              el.updated_at.getDate() +\n                                monthA[el.updated_at.getMonth()] +\n                                el.updated_at.getFullYear() +\n                                \" \" +\n                                el.updated_at.getHours() +\n                                \":\" +\n                                el.updated_at.getMinutes(),\n                              <div style={{ display: \"flex\" }}>\n                                <UploadFileButton\n                                  data={{\n                                    method: \"upload_lab_file\",\n                                    lab: el.id_lab,\n                                  }}\n                                  label={\n                                    (el.file === null\n                                      ? \"Загрузить\"\n                                      : \"Обновить\") + \" файл задания\"\n                                  }\n                                  buttonType={\"IconButton\"}\n                                  successCallback={getData}\n                                  disabled={progress}\n                                />\n                                {el.file !== null && (\n                                  <IconButton\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => {\n                                      getFile(\n                                        el.id_lab,\n                                        el.description +\n                                          \".\" +\n                                          el.file.split(\".\")[1],\n                                      );\n                                    }}\n                                    disabled={progress}\n                                  >\n                                    <GetApp />\n                                  </IconButton>\n                                )}\n                              </div>,\n                              <div style={{ display: \"flex\" }}>\n                                <IconButton\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  className={classes.B2}\n                                  onClick={() => {\n                                    removeFile(el.id_lab);\n                                  }}\n                                  disabled={progress}\n                                >\n                                  {progress && progressId === el.id_lab ? (\n                                    <CircularProgress\n                                      color=\"primary\"\n                                      size={20}\n                                    />\n                                  ) : (\n                                    <Tooltip\n                                      title=\"Удалить\"\n                                      placement=\"top\"\n                                      arrow\n                                    >\n                                      <Delete />\n                                    </Tooltip>\n                                  )}\n                                </IconButton>\n                              </div>,\n                            ]);\n                          }\n                        return newData;\n                      })()\n                }\n              />\n            </Grid>\n          </Grid>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n            <CreateLabModal\n              appendDataCallback={getData}\n              discipline={id_discipline}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DisciplineLabsConfig;\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineMainConfigs\\index.jsx",["735","736","737"],"import {\n  Avatar,\n  Button,\n  CircularProgress,\n  IconButton,\n  Paper,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Switch from \"@material-ui/core/Switch\";\nimport LoadingPage from \"../../../../components/Loading\";\nimport API from \"../../../../services/API\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport useStyles from \"./styles\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport AddTeacherModal from \"./AddTeacherModal\";\n\nconst switcherParams = {\n  style: {\n    margin: \"10px 0px 0px\",\n    width: \"100%\",\n    justifyContent: \"space-between\",\n  },\n  labelPlacement: \"start\",\n};\n\nconst DisciplineMainConfigs = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const id_discipline = props.match.params.id_discipline;\n  const [loading, setLoading] = useState(false);\n  const [removeTeacherProgress, setRemoveTeacherProgress] = useState(false);\n  const [removeTeacherId, setRemoveTeacherId] = useState(false);\n  const [switchers, setSwitchers] = useState({\n    course: true,\n    exam: true,\n    credit: true,\n    difCredit: true,\n  });\n  const [switchersEdit, setSwitchersEdit] = useState(false);\n  const [switchersProgress, setSwitchersProgress] = useState(false);\n\n  const updateSwitchers = async () => {\n    setSwitchersEdit(false);\n    setSwitchersProgress(true);\n    await API.call({\n      method: \"set_discipline_exam_forms\",\n      switchers,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        let newData = [];\n        if (result.data !== undefined) {\n          newData = result.data;\n        }\n        setData({ ...data, exam_forms: newData });\n        if (props.updateExamForms !== undefined)\n          props.updateExamForms(newData);\n      } else {\n        setSwitchers({\n          course: data.exam_forms.indexOf(\"Курсовая работа\") !== -1,\n          exam: data.exam_forms.indexOf(\"Экзамен\") !== -1,\n          credit: data.exam_forms.indexOf(\"Зачет\") !== -1,\n          difCredit: data.exam_forms.indexOf(\"Диф. зачет\") !== -1,\n        });\n      }\n      setSwitchersProgress(false);\n    });\n  }\n\n  const appendTeacher = (newValues) => {\n    let newData = newValues;\n    Object.entries(data.teachers_data).map((e) => {\n      newData.push(e[1]);\n    });\n    setData({ ...data, teachers_data: newData });\n  };\n\n  const removeTeacher = async (teacher) => {\n    setRemoveTeacherProgress(true);\n    setRemoveTeacherId(teacher);\n    await API.call({\n      method: \"remove_teacher_from_discipline\",\n      teacher,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        (async () => {\n          await loadData(false);\n        })();\n      } else {\n      }\n    });\n  };\n\n  const loadData = async (reload = true) => {\n    if (reload) setLoading(true);\n    await API.call({\n      method: \"discipline_data\",\n      discipline: id_discipline,\n    }).then((result) => {\n      setLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        setSwitchers({\n          course: result.data.exam_forms.indexOf(\"Курсовая работа\") !== -1,\n          exam: result.data.exam_forms.indexOf(\"Экзамен\") !== -1,\n          credit: result.data.exam_forms.indexOf(\"Зачет\") !== -1,\n          difCredit: result.data.exam_forms.indexOf(\"Диф. зачет\") !== -1,\n        });\n      } else {\n        // setError(result.message);\n      }\n      setRemoveTeacherId(false);\n      setRemoveTeacherProgress(false);\n    });\n  };\n\n  useEffect(() => {\n    loadData(true);\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <LoadingPage />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={3}\n            style={{ paddingTop: 10, paddingBottom: 100 }}\n          >\n            <Grid item>\n              <Paper elevation={3} style={{ padding: 20, width: 250 }}>\n                <Typography variant=\"h5\" style={{ paddingBottom: 10 }}>\n                  Формы экзамена\n                </Typography>\n                <FormControl\n                  component=\"fieldset\"\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <FormGroup>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"primary\"\n                          checked={switchers.course}\n                          disabled={!switchersEdit}\n                          onChange={() => {\n                            setSwitchers({\n                              ...switchers,\n                              course: !switchers.course,\n                            });\n                          }}\n                        />\n                      }\n                      label=\"Курсовая работа\"\n                      {...switcherParams}\n                    />\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"primary\"\n                          checked={switchers.exam}\n                          disabled={!switchersEdit}\n                          onChange={() => {\n                            setSwitchers({\n                              ...switchers,\n                              exam: !switchers.exam,\n                            });\n                          }}\n                        />\n                      }\n                      label=\"Экзамен\"\n                      {...switcherParams}\n                    />\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"primary\"\n                          checked={switchers.credit}\n                          disabled={!switchersEdit}\n                          onChange={() => {\n                            setSwitchers({\n                              ...switchers,\n                              credit: !switchers.credit,\n                            });\n                          }}\n                        />\n                      }\n                      label=\"Зачет\"\n                      {...switcherParams}\n                    />\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"primary\"\n                          checked={switchers.difCredit}\n                          disabled={!switchersEdit}\n                          onChange={() => {\n                            setSwitchers({\n                              ...switchers,\n                              difCredit: !switchers.difCredit,\n                            });\n                          }}\n                        />\n                      }\n                      label=\"Диф. зачет\"\n                      {...switcherParams}\n                    />\n                  </FormGroup>\n                  {!switchersEdit&&!switchersProgress ? (\n                    <Button\n                      fullWidth\n                      size=\"small\"\n                      color=\"primary\"\n                      variant=\"outlined\"\n                      style={{ marginTop: 10 }}\n                      onClick={() => {\n                        setSwitchersEdit(true);\n                      }}\n                    >\n                      Редактировать\n                    </Button>\n                  ) : (\n                    <>\n                      <Button\n                        fullWidth\n                        size=\"small\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        style={{ marginTop: 10 }}\n                        onClick={() => {\n                          updateSwitchers();\n                        }}\n                        disabled={switchersProgress}\n                      >\n                        {switchersProgress ? (\n                          <CircularProgress color=\"primary\" size={20} />\n                        ) : (\n                          \"Сохранить\"\n                        )}\n                      </Button>\n                      <Button\n                        fullWidth\n                        size=\"small\"\n                        color=\"primary\"\n                        style={{ marginTop: 5 }}\n                        onClick={() => {\n                          setSwitchersEdit(false);\n                          setSwitchers({\n                            course: data.exam_forms.indexOf(\"Курсовая работа\") !== -1,\n                            exam: data.exam_forms.indexOf(\"Экзамен\") !== -1,\n                            credit: data.exam_forms.indexOf(\"Зачет\") !== -1,\n                            difCredit: data.exam_forms.indexOf(\"Диф. зачет\") !== -1,\n                          });\n                        }}\n                        disabled={switchersProgress}\n                      >\n                        Отмена\n                      </Button>\n                    </>\n                  )}\n                </FormControl>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              style={{\n                width: \"calc(100% - 275px)\",\n              }}\n            >\n              <MuiTable\n                className={classes.tableToolbarRoot}\n                title={\n                  <div disableTypography className={classes.modalTitle}>\n                    <Typography variant=\"h6\">\n                      {\"Список преподавателей\"}\n                    </Typography>\n                  </div>\n                }\n                viewColumns={false}\n                search={false}\n                columns={[\"ФИО\", \"Исключить\"]}\n                data={\n                  !data\n                    ? []\n                    : (() => {\n                        let newData = [];\n                        if (data.teachers_data !== null)\n                          for (\n                            let index = 0;\n                            index < data.teachers_data.length;\n                            index++\n                          ) {\n                            const el = data.teachers_data[index];\n                            newData.push([\n                              <div\n                                style={{\n                                  display: \"flex\",\n                                  alignItems: \"center\",\n                                  margin: 10,\n                                }}\n                              >\n                                <Avatar\n                                  sizes={50}\n                                  src={el.photo}\n                                  style={{ marginRight: 20 }}\n                                />\n                                {el.s_name +\n                                  \" \" +\n                                  (el.f_name + \" \") +\n                                  (el.fth_name !== null ? el.fth_name : \" \")}\n                              </div>,\n                              <div style={{ display: \"flex\" }}>\n                                <IconButton\n                                  variant=\"outlined\"\n                                  className={classes.B2}\n                                  style={{ marginLeft: 10 }}\n                                  disabled={el.self || removeTeacherProgress}\n                                  onClick={() => {\n                                    removeTeacher(el.id_user);\n                                  }}\n                                >\n                                  {removeTeacherProgress &&\n                                  removeTeacherId === el.id_user ? (\n                                    <CircularProgress\n                                      color=\"primary\"\n                                      size={20}\n                                    />\n                                  ) : (\n                                    <Tooltip\n                                      title=\"Исключить из дисциплины\"\n                                      placement=\"top\"\n                                      arrow\n                                    >\n                                      <RemoveCircleIcon />\n                                    </Tooltip>\n                                  )}\n                                </IconButton>\n                              </div>,\n                            ]);\n                          }\n                        return newData;\n                      })()\n                }\n              />\n            </Grid>\n          </Grid>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n            {data && (\n              <AddTeacherModal\n                discipline={data.id_discipline}\n                appendDataCallback={appendTeacher}\n              />\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DisciplineMainConfigs;\n","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineDifferentialCredit\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineExam\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineCredit\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineCourse\\index.jsx",["738","739","740","741","742","743"],"import React, { useEffect, useState } from \"react\";\n// import Header from \"../../components/Header/Header\";\n// import LoadingPage from \"../../components/Loading\";\n// import MuiTable from \"../../components/MuiTable\";\n// import API from \"../../services/API\";\n// import { Avatar } from \"@material-ui/core\";\n// import { Check, Close, Delete } from \"@material-ui/icons\";\n// import useStyles from \"./styles\";\n// import SecureOptionSwitcher from \"../../../components/SecureOptionSwitcher\";\n// import RequestButton from '../../../components/FileButtons/RequestButton';\n// import CreateThemeModal from \"./CreateThemeModal\";\n\nconst DisciplineCourse = (props) => {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState(null);\n  const [passwordForDelete, setPasswordForDelete] = useState(\"\");\n  const [deleteAllowed, setDeleteAllowed] = useState(false);\n  const [rerender, setRerender] = useState(false);\n  // const classes = useStyles();\n\n  // const getData = async () => {\n  //   setLoading(true);\n  //   await API.call({\n  //     method: \"all_disciplines\",\n  //   }).then((result) => {\n  //     if (result.success) {\n  //       setData(result.data);\n  //     }\n  //     setLoading(false);\n  //   });\n  // };\n\n  useEffect(() => {\n    // getData(setData, setLoading);\n    return () => {\n      setData(null);\n      setLoading(true);\n      setRerender(false);\n    };\n  }, [rerender]);\n\n  // const convertData = () => {\n  //   let newData = [];\n  //   if (data !== null)\n  //     for (let index = 0; index < data.length; index++) {\n  //       const el = data[index];\n\n  //       newData.push([\n  //         el.description,\n  //         el.id_student !== null ? (\n  //           <div style={{ display: \"flex\", alignItems: \"center\" }}>\n  //             <Avatar\n  //               sizes={50}\n  //               src={el.student.photo}\n  //               style={{ marginRight: 10 }}\n  //             />\n  //             {el.student.s_name +\n  //               \" \" +\n  //               (el.student.f_name && el.student.f_name[0] + \".\") +\n  //               (el.student.fth_name && el.student.fth_name[0] + \".\")}\n  //           </div>\n  //         ) : (\n  //           \"Отсутствует\"\n  //         ),\n  //         <div style={{ display: \"flex\" }}>\n  //           {el.confirmed === 0 (<>\n  //             <RequestButton\n  //               color=\"primary\"\n  //               className={classes.B5}\n  //               buttonType={\"IconButton\"}\n  //               icon={<Check/>}\n  //               label=\"Подтвердить\"\n  //               style={{ marginLeft: 10 }}\n  //               requestData={{\n  //                 method: \"confirm_theme\",\n  //                 theme: el.id_theme,\n  //               }}\n  //               onSuccess={setRerender(true)}\n                \n  //             />\n  //             <RequestButton\n  //               className={classes.B3}\n  //               color=\"secondary\"\n  //               buttonType={\"IconButton\"}\n  //               icon={<Close/>}\n  //               label=\"Отклонить\"\n  //               style={{ marginLeft: 10 }}\n  //               requestData={{\n  //                 method: \"decline_theme\",\n  //                 theme: el.id_theme,\n  //               }}\n  //               onSuccess={setRerender(true)}\n                \n  //             />\n  //           </>)}\n  //           {passwordForDelete && deleteAllowed && (\n  //             <RequestButton\n  //             className={classes.B2}\n  //             color=\"secondary\"\n  //             buttonType={\"IconButton\"}\n  //             icon={<Delete/>}\n  //             label=\"Удалить\"\n  //             style={{ marginLeft: 10 }}\n  //             requestData={{\n  //               method: \"delete_theme\",\n  //               theme: el.id_theme,\n  //             }}\n  //             onSuccess={setRerender(true)}\n              \n  //           />)}\n            \n              \n            \n  //         </div>,\n  //       ]);\n  //     }\n  //   return newData;\n  // };\n\n  return (\n    <>\n      {/* <Header history={props.history} title={\"Мои дисциплины\"} />\n      {loading ? (\n        <LoadingPage />\n      ) : (\n        <>\n          <div style={{ paddingBottom: 10 }}>\n            <SecureOptionSwitcher\n              label={\"Удаление тем\"}\n              passwordValue={passwordForDelete}\n              setPasswordValue={setPasswordForDelete}\n              allowed={deleteAllowed}\n              setAllowed={setDeleteAllowed}\n            />\n          </div>\n          <MuiTable \n            title={\"Список тем\"}\n            columns={[\"Название\", \"Студент\", \"Действия\"]}\n            data={!loading && data ? convertData() : []}\n            />\n            <div style={{ paddingBottom: 100 }}></div>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n            <CreateThemeModal setRerender={setRerender} />\n          </div>\n        </div>\n          </>\n      )} */}\n\n    </>\n  );\n};\n\nexport default DisciplineCourse;\n","C:\\OdinFront\\src\\components\\Buttons\\DownloadFileButton.jsx",[],"C:\\OdinFront\\src\\components\\SecureOptionSwitcher\\styles.js",[],"C:\\OdinFront\\src\\components\\Buttons\\RequestButton.jsx",["744","745","746","747"],"C:\\OdinFront\\src\\components\\DateToRusTime\\index.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineCredit\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineLabs\\index.jsx",["748","749","750","751","752","753","754","755","756","757","758"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Tooltip } from \"@material-ui/core\";\nimport API from \"../../../../services/API\";\nimport { Add, Archive, Delete, Description, GetApp } from \"@material-ui/icons\";\nimport useStyles from \"./styles\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport CreateLabModal from \"./CreateLabModal\";\nimport DateToRusTime from './../../../../components/DateToRusTime/index';\nimport LoadingPage from './../../../../components/Loading/index';\nimport MuiTable from \"../../../../components/MuiTable\";\n\nconst monthA = \" января , февраля , марта , апреля , мая , июня , июля , августа , сентября , октября , ноября , декабря \".split(\n  \",\",\n);\n\nconst DisciplineLabs = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const id_discipline = props.match.params.id_discipline;\n  const [loading, setLoading] = useState(true);\n  const [progress, setProgress] = useState(false);\n  const [progressId, setProgressId] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [alertDescription, setAlertDescription] = useState(null);\n  const id_group = props.match.params.id_group;\n\n  const removeFile = async (lab,group) => {\n    setProgress(true);\n    setProgressId(lab);\n    await API.call({\n      method: \"delete_config\",\n      group: id_group,\n      lab\n    }).then((result) => {\n      if (result.success) {\n        getData();\n      } else {\n        setProgress(false);\n        setProgressId(false);\n      }\n    });\n  };\n\n\n\n \n\n  const getData = async () => {\n    await API.call({\n      method: \"get_config\",\n      discipline: id_discipline,\n      group: id_group,\n    }).then((result) => {\n      if (result.success) {\n        setData(result.data);\n      }\n      setLoading(false);\n      setProgress(false);\n      setProgressId(false);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    return () => {\n      setData(null);\n      setLoading(true);\n    };\n  }, []);\n\n\n  return (\n    <>\n      {loading ? (\n        <LoadingPage />\n      ) : (\n        <>\n          <Grid\n            container\n            spacing={4}\n            style={{ paddingTop: 10, paddingBottom: 100 }}\n          >\n            <Grid item xs={12}>\n              <MuiTable\n                title=\"Список ресурсов\"\n                columns={[\n                  \"№,ID\",\n                  \"Название (Комментарий)\",\n                  \"Доступно после\",\n                  \"Дедлайн\",\n                  \"Действия\",\n                ]}\n                noMatch={\"Нет лабораторных\"}\n                data={\n                  loading || !data\n                    ? []\n                    : (() => {\n                        let newData = [];\n                        if (data !== null)\n                          for (let index = 0; index < data.length; index++) {\n                            const el = data[index];\n                            newData.push([\n                              index + 1 + \" (ID\" + el.lab.id_lab + \")\",\n                              <>\n                                {el.lab.description}\n                                {el.lab.comment && (\n                                  <>\n                                    <br />\n                                    {\"(\" + el.lab.comment + \")\"}\n                                  </>\n                                )}\n                              </>,\n                              <DateToRusTime time={ el.config.allowed_after }/>,\n                              <DateToRusTime time={ el.config.deadline }/>,\n                              <div style={{ display: \"flex\" }}>\n                                <IconButton\n                                  variant=\"outlined\"\n                                  color=\"secondary\"\n                                  className={classes.B2}\n                                  onClick={() => {\n                                    removeFile(el.lab.id_lab);\n                                  }}\n                                  disabled={progress}\n                                >\n                                  {progress && progressId === el.lab.id_lab ? (\n                                    <CircularProgress\n                                      color=\"primary\"\n                                      size={20}\n                                    />\n                                  ) : (\n                                    <Tooltip\n                                      title=\"Удалить\"\n                                      placement=\"top\"\n                                      arrow\n                                    >\n                                      <Delete />\n                                    </Tooltip>\n                                  )}\n                                </IconButton>\n                              </div>,\n                            ]);\n                          }\n                        return newData;\n                      })()\n                }\n              />\n            </Grid>\n          </Grid>\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n            <CreateLabModal\n              appendDataCallback={getData}\n              group={id_group}\n            />\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default DisciplineLabs;\n","C:\\OdinFront\\src\\pages\\student\\DisciplineExam\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Groups\\AddStudentModal.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\Groups\\CreateInvitationModal.jsx",[],"C:\\OdinFront\\src\\components\\FileButtons\\styles.js",[],"C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\components\\Dot.js",[],"C:\\OdinFront\\src\\layout\\admin\\AdminLayout\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineGroupsConfig\\AddGroupModal.jsx",["759","760","761","762"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Tooltip,\n  MenuItem,\n  Fab,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport API from \"../../../../services/API\";\nimport HiddenValue from \"../../../../components/HiddenValue\";\nimport SecondsToRusTime from \"../../../../components/SecondsToRusTime\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport { TextField } from '@material-ui/core';\n\nconst convertData = (data, classes, addToGroup, progress) => {\n  let newData = [];\n  if (data !== null)\n    for (let index = 0; index < data.length; index++) {\n      const el = data[index];\n      var last_login =\n        -(new Date(el.last_login) - new Date()) / 1000 - 60 * 60 * 3;\n      newData.push([\n        el.s_name + \" \" + el.f_name + (el.fth_name ? \" \" + el.fth_name : \"\"),\n        <HiddenValue label=\"Email\" text={el.email} />,\n        !el.last_login ? (\n          \"Никогда\"\n        ) : last_login < 60 ? (\n          <span style={{ color: \"green\" }}>\n            <FiberManualRecordIcon style={{ height: 12 }} />\n            Онлайн\n          </span>\n        ) : (\n          <>\n            <SecondsToRusTime time={last_login} />\n            {\" назад\"}\n          </>\n        ),\n        progress ? (\n          <CircularProgress color=\"primary\" size={20} />\n        ) : (\n          <IconButton\n            variant=\"outlined\"\n            color=\"secondary\"\n            className={classes.B2}\n          >\n            <Tooltip title=\"Включить в группу\" placement=\"top\" arrow>\n              <Add\n                onClick={() => {\n                  addToGroup(el.id_user);\n                }}\n              />\n            </Tooltip>\n          </IconButton>\n        ),\n      ]);\n    }\n  return newData;\n};\n\nconst AddGroupModal = ({ appendDataCallback, discipline }) => {\n  const [open, setOpen] = useState(false);\n  const [addGroupId, setAddGroupId] = useState(false);\n  const [addGroupProgress, setAddGroupProgress] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n  let now = new Date();\n  const current_year = now.getMonth() < 8 ? now.getFullYear() - 1 : now.getFullYear();\n  const [semester, setSemester] = useState(now.getMonth() < 8 ? 2 : 1);\n  const [eduYear, setEduYear] = useState(current_year);\n  \n\n  const addGroup = async (group) => {\n    setAddGroupProgress(true);\n    setAddGroupId(group);\n    setError(false);\n    await API.call({\n      method: \"add_group_to_discipline\",\n      discipline,\n      group,\n      eduYear,\n      semester\n    }).then((result) => {\n      if (result.success) {\n        appendDataCallback([result.data]);\n        (async () => {\n          await loadData(false);\n        })();\n      } else {\n        setError(result.message);\n      }\n    });\n  };\n\n  const loadData = async (reload = true) => {\n    if (reload) setIsLoading(true);\n    await API.call({\n      method: \"get_groups_without_such_discipline\",\n      discipline,\n    }).then((result) => {\n      setIsLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n      } else {\n        setError(result.message);\n      }\n      setAddGroupId(false);\n      setAddGroupProgress(false);\n    });\n  };\n\n  useEffect(() => {\n    if (open) {\n      loadData(true);\n    }\n  }, [open]);\n\n  return (\n    <>\n      <Tooltip title=\"Добавить группы\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setOpen(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {open && (\n        <Dialog open={open} fullWidth={true} maxWidth={\"md\"}>\n          <DialogTitle disableTypography className={classes.modalTitle}>\n            <Typography variant=\"h6\">\n              {\"Включить в список групп, изучающих дисциплину\"}\n            </Typography>\n            <div className={classes.modalTitle} style={{marginRight: 50}}>\n              <TextField\n                select\n                label=\"Учебный год\"\n                variant=\"outlined\"\n                size=\"small\"\n                value={eduYear}\n                onChange={(e) => setEduYear(e.target.value)}\n              >\n                <MenuItem value={current_year - 4}>{ current_year - 4 }-{ current_year - 3}</MenuItem>\n                <MenuItem value={current_year - 3}>{ current_year - 3 }-{ current_year - 2}</MenuItem>\n                <MenuItem value={current_year - 2}>{ current_year - 2 }-{ current_year - 1}</MenuItem>\n                <MenuItem value={current_year - 1}>{ current_year - 1 }-{ current_year - 0}</MenuItem>\n                <MenuItem value={current_year}>{ current_year}-{ current_year + 1 }</MenuItem>\n\n              </TextField>\n              <TextField\n                select\n                size=\"small\"\n                label=\"Семестр\"\n                variant=\"outlined\"\n                value={semester}\n                onChange={(e) => setSemester(e.target.value)}\n                style={{\n                  marginLeft: 15,\n                }}\n              >\n                <MenuItem value={1}>1 семестр</MenuItem>\n                <MenuItem value={2}>2 семестр</MenuItem>\n              </TextField>\n            </div>\n            {!isLoading && !addGroupProgress && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setOpen(false);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {isLoading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : (\n            <MuiTable\n                title={\n                  <div disableTypography className={classes.modalTitle}>\n                    \n                  </div>\n                }\n                viewColumns={false}\n                columns={[\n                  \"Группа\",\n                  \"Год поступления\",\n                  \"Студентов\",\n                  \"Добавить\",\n                ]}\n                data={\n                  !data\n                    ? []\n                    : (() => {\n                        let newData = [];\n                        if (data !== null)\n                          for (\n                            let index = 0;\n                            index < data.length;\n                            index++\n                          ) {\n                            const el = data[index];\n                            newData.push([\n                              el.id_group,\n                              el.admission_year,\n                              el.students_count,\n                              <div style={{ display: \"flex\" }}>\n                                <IconButton\n                                  variant=\"outlined\"\n                                  className={classes.B5}\n                                  style={{ marginLeft: 10 }}\n                                  disabled={addGroupProgress}\n                                  onClick={() => {\n                                    addGroup(el.id_group);\n                                  }}\n                                >\n                                  <Tooltip\n                                    title=\"Включить в дисциплину\"\n                                    placement=\"top\"\n                                    arrow\n                                  >\n                                    {addGroupProgress &&\n                                    addGroupId === el.id_group ? (\n                                      <CircularProgress\n                                        color=\"primary\"\n                                        size={20}\n                                      />\n                                    ) : (\n                                      <Add />\n                                    )}\n                                  </Tooltip>\n                                </IconButton>\n                                \n                              </div>,\n                            ]);\n                          }\n                        return newData;\n                      })()\n                }\n              />\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default AddGroupModal;\n","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineTotal\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineMainConfigs\\styles.js",[],"C:\\OdinFront\\src\\pages\\student\\LabResultCard\\index.jsx",[],"C:\\OdinFront\\src\\components\\Timer\\index.jsx",["763","764","765"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport { Typography, CircularProgress } from \"@material-ui/core\";\nimport { Paper } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Centered from \"./../Centered/index\";\nimport useCountDown from \"react-countdown-hook\";\nimport { useEffect } from \"react\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst Timer = ({ time=60000, onTimeout, size = 150,fontSize=32,p100 }) => {\n  const now = new Date();\n  const [p100local, setp100local] = useState(p100);\n  // eslint-disable-next-line no-unused-vars\n  const [timeLeft, { start, pause, resume, reset }] = useCountDown(time);\n  const [hoursLeft, setHoursLeft] = useState(null);\n  const [minutesLeft, setMinutesLeft] = useState(null);\n  const [secondsLeft, setSecondsLeft] = useState(null);\n  const open = () => {\n    if (onTimeout !== undefined) {\n      if (time < 0) {\n        onTimeout(start);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (time < 0) {\n      open();\n      pause();\n    } else {\n      start(time);\n    }\n  }, [time]);\n\n  useEffect(() => {\n    let tempTime = timeLeft / 1000;\n    let tempDaysLeft = Math.floor(tempTime / 60 / 60 / 24);\n    let tempHoursLeft = Math.floor(tempTime / 60 / 60) - tempDaysLeft * 24;\n    let tempMinutesLeft =\n      Math.floor(tempTime / 60) - tempHoursLeft * 60 - tempDaysLeft * 24 * 60;\n    let tempSecondsLeft =\n      Math.floor(tempTime) -\n      (tempHoursLeft * 60 + tempDaysLeft * 24 * 60 + tempMinutesLeft) * 60;\n    setHoursLeft(tempHoursLeft);\n    setMinutesLeft(tempMinutesLeft);\n    setSecondsLeft(tempSecondsLeft);\n    if (timeLeft < 1) {\n      open()\n    }\n    return () => {\n      setHoursLeft(null);\n      setMinutesLeft(null);\n      setSecondsLeft(null);\n    };\n  }, [timeLeft]);\n\n  return (\n      <Centered>\n        <div style={{ position: \"relative\", width: size, height: size+15 }}>\n          <div style={{ position: \"absolute\", left: 1, top: 1 }}>\n            <CircularProgress\n              variant=\"determinate\"\n              value={100}\n              size={size}\n              aria-describedby=\"timerbg\"\n              thickness={1}\n              style={{ color: \"grey\" }}\n            />\n          </div>\n          <div\n            style={{ position: \"absolute\", left: 0, top: 0, color: \"grey\" }}\n          >\n            {timeLeft > 60000 ? (\n              <CircularProgress\n                variant=\"determinate\"\n                value={\n                  timeLeft === 0\n                    ? 100\n                    : Math.round((timeLeft / p100local) * 100) + 1\n                }\n                size={size+2}\n                aria-describedby=\"timer\"\n                thickness={2}\n            />\n            ) : (\n              <CircularProgress\n                variant={timeLeft === 0 ? 'indeterminate' : \"determinate\"}\n                value={\n                  timeLeft === 0\n                    ? 100\n                    : Math.round((secondsLeft / 60) * 100) + 1\n                }\n                size={size+2}\n                aria-describedby=\"timer\"\n                thickness={2}\n                style={timeLeft > 0 ? { color: \"red\" } : { color: \"green\" }}\n              />\n            )}\n          </div>\n          {timeLeft > 0 ? (\n            <div\n              style={{\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n              display: \"flex\",\n                flexDirection:'column',\n                justifyContent: \"center\",\n                alignItems: 'center',\n                width: size,\n                height: size+2,\n              }}\n            ><div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: 'center',\n            }}>\n            {hoursLeft > 0 && (<>\n              <Typography variant=\"h4\" style={{ fontSize:fontSize }}>{hoursLeft}</Typography>\n              <Typography variant=\"h4\" style={{ padding: \"0px 2px\", fontSize:fontSize }}>\n                :\n              </Typography>\n            </>)}\n              <Typography variant=\"h4\" style={{ fontSize:fontSize }}>\n                {minutesLeft < 10 && \"0\"}\n                {minutesLeft}\n              </Typography>\n              <Typography variant=\"h4\" style={{ padding: \"0px 2px\", fontSize:fontSize }}>\n                :\n              </Typography>\n              <Typography variant=\"h4\" style={{ fontSize:fontSize }}>\n                {secondsLeft < 10 && \"0\"}\n                {secondsLeft}\n              </Typography>\n              </div>\n            </div>\n          ) : (\n            <div\n              style={{\n                position: \"absolute\",\n                left: 1,\n                top: Math.floor((size-fontSize)/4),\n                display: \"flex\",\n                justifyContent: \"center\",\n                width: \"100%\",\n                color: \"green\",\n                fontSize: Math.floor((size-Math.floor((size-fontSize)/4)*2)),\n              }}\n            >\n              <CheckIcon fontSize=\"inherit\" />\n            </div>\n          )}\n        </div>\n      </Centered>\n  );\n};\n\nexport default Timer;\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineResources\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLabsConfig\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineCourse\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineMainConfigs\\AddTeacherModal.jsx",["766","767"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Tooltip,\n  Fab,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport API from \"../../../../services/API\";\nimport HiddenValue from \"../../../../components/HiddenValue\";\nimport SecondsToRusTime from \"../../../../components/SecondsToRusTime\";\nimport MuiTable from \"../../../../components/MuiTable\";\n\nconst convertData = (data, classes, addToGroup, progress) => {\n  let newData = [];\n  if (data !== null)\n    for (let index = 0; index < data.length; index++) {\n      const el = data[index];\n      var last_login =\n        -(new Date(el.last_login) - new Date()) / 1000 - 60 * 60 * 3;\n      newData.push([\n        el.s_name + \" \" + el.f_name + (el.fth_name ? \" \" + el.fth_name : \"\"),\n        <HiddenValue label=\"Email\" text={el.email} />,\n        !el.last_login ? (\n          \"Никогда\"\n        ) : last_login < 60 ? (\n          <span style={{ color: \"green\" }}>\n            <FiberManualRecordIcon style={{ height: 12 }} />\n            Онлайн\n          </span>\n        ) : (\n          <>\n            <SecondsToRusTime time={last_login} />\n            {\" назад\"}\n          </>\n        ),\n        progress ? (\n          <CircularProgress color=\"primary\" size={20} />\n        ) : (\n          <IconButton\n            variant=\"outlined\"\n            color=\"secondary\"\n            className={classes.B5}\n          >\n            <Tooltip title=\"Включить в группу\" placement=\"top\" arrow>\n              <Add\n                onClick={() => {\n                  addToGroup(el.id_user);\n                }}\n              />\n            </Tooltip>\n          </IconButton>\n        ),\n      ]);\n    }\n  return newData;\n};\n\nconst AddTeacherModal = ({ appendDataCallback, discipline }) => {\n  const [open, setOpen] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [progress, setProgress] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n\n  const addToGroup = async (teacher) => {\n    setProgress(true);\n    setError(false);\n    await API.call({\n      method: \"add_teacher_to_discipline\",\n      teacher,\n      discipline,\n    }).then((result) => {\n      if (result.success) {\n        appendDataCallback([result.data]);\n        loadData(false);\n      } else {\n        setProgress(false);\n        setError(result.message);\n      }\n    });\n  };\n\n  const loadData = async (reload = true) => {\n    if (reload) setIsLoading(true);\n    await API.call({\n      method: \"get_teachers_without_such_discipline\",\n      discipline,\n    }).then((result) => {\n      setIsLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        setProgress(false);\n      } else {\n        setError(result.message);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (open) {\n      loadData(true);\n    }\n  }, [open]);\n\n  return (\n    <>\n      <Tooltip title=\"Добавить преподавателей\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setOpen(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {open && (\n        <Dialog open={open} fullWidth={true} maxWidth={\"md\"}>\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">\n              {\"Включить в список преподавателей\"}\n            </Typography>\n            {!isLoading && !progress && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setOpen(false);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {isLoading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : (\n            <MuiTable\n              data={\n                data ? convertData(data, classes, addToGroup, progress) : []\n              }\n              columns={[\"ФИО\", \"Email\", \"Последняя активность\", \"Добавить\"]}\n              noMatch={error ? error : \"Других преподавателей нет\"}\n              viewColumns={false}\n            />\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default AddTeacherModal;\n","C:\\OdinFront\\src\\components\\FileButtons\\RequestButton.jsx",["768","769","770","771"],"/* eslint-disable array-callback-return */\nimport { Button, IconButton, Tooltip } from \"@material-ui/core\";\nimport React from \"react\";\nimport API from \"../../services/API\";\nimport { useState } from \"react\";\nimport clsx from \"clsx\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport GetAppRoundedIcon from \"@material-ui/icons/GetAppRounded\";\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CancelOutlinedIcon from '@material-ui/icons/CancelOutlined';\nimport Close from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\n\nexport default function RequestButton({\n  requestData,\n  onSuccess,\n  label,\n  buttonType,\n  icon,\n  debug = false,\n  ...props\n}) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorTooltip, setErrorTooltip] = useState(false);\n  const timer = React.useRef();\n\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success,\n    [classes.buttonError]: error,\n  });\n  const iconButtonClassname = clsx({\n    [classes.iconButtonSuccess]: success,\n    [classes.iconButtonError]: error,\n  });\n\n  const request = () => {\n    setSuccess(false);\n    setError(false);\n    setLoading(true);\n    API.call(requestData, null, debug).then((result) => {\n      if (debug) console.log(result);\n      if (result.success) {\n        if (onSuccess) onSuccess(result.data);\n        setSuccess(true);\n      } else {\n        setError(true);\n        setErrorTooltip(result.status);\n        if (debug) setErrorTooltip(result.status);\n      }\n      setLoading(false);\n      timer.current = window.setTimeout(() => {\n        setSuccess(false);\n        setError(false);\n        setErrorTooltip(false);\n      }, 2000);\n    });\n  };\n\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  return (\n    <>\n      <div className={classes.root}>\n        {buttonType !== \"IconButton\" ? (\n          <>\n            <div className={classes.wrapper}>\n              <Button\n                className={buttonClassname}\n                disabled={loading}\n                component=\"label\"\n                {...props}\n                onClick={() => {\n                  request();\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  {error && errorTooltip}\n                  {success && <>Успешно</>}\n                  {!success && !error && label}\n                </div>\n              </Button>\n\n              {loading && (\n                <CircularProgress\n                  size={24}\n                  className={classes.buttonProgress}\n                />\n              )}\n            </div>\n          </>\n        ) : (\n          <>\n            <div className={classes.iconButtonWrapper}>\n              <Tooltip\n                title={error ? errorTooltip : success ? \"Успешно\" : label}\n                placement=\"top\"\n                arrow\n              >\n                <IconButton\n                  aria-label=\"download\"\n                  disabled={loading}\n                  className={iconButtonClassname}\n                  onClick={() => {\n                    request();\n                  }}\n                  {...props}\n                >\n                  {error && <CancelOutlinedIcon />}\n                  {success && <CheckCircleOutlineIcon />}\n                  {!success && !error && icon}\n                </IconButton>\n              </Tooltip>\n              {loading && (\n                <CircularProgress\n                  size={53}\n                  className={classes.downloadIconButtonProgress}\n                />\n              )}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLabsConfig\\CreateLabModal.jsx",["772","773","774","775","776","777","778","779"],"/* eslint-disable array-callback-return */\n// import 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport {\n  KeyboardDateTimePicker,\n  DateTimePicker,\n  DatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  TextField,\n  Tooltip,\n  Fab,\n  Checkbox,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport { Add, Publish } from \"@material-ui/icons\";\nimport UploadFileButton from \"../../../../components/FileButtons/UploadFileButton\";\nimport API from \"../../../../services/API\";\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { FormControlLabel } from \"@material-ui/core\";\n\nconst getInvitations = async (\n  invitationsCount,\n  role,\n  group,\n  setData,\n  setIsLoading,\n  setError,\n) => {\n  setIsLoading(true);\n  setError(false);\n  await API.call({\n    method: \"create_students\",\n    invitationsCount,\n    group,\n  }).then((result) => {\n    setIsLoading(false);\n    if (result.success) {\n      console.log(result.data);\n      setData(result.data);\n    } else {\n      setError(result.message);\n    }\n  });\n};\n\nconst CreateLabModal = ({ appendDataCallback, discipline }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const [openLab, setOpenLab] = useState(false);\n  const [deadlineNeed, setDeadlineNeed] = useState(false);\n  const [deadline, setDeadline] = useState(null);\n\n  const [description, setDescription] = useState('');\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {\n    return (() => {\n      setComment('');\n      setDescription('');\n      setOpenLab(false);\n      setDeadlineNeed(false);\n      setDeadline(null);\n    })\n  }, [open]);\n\n  return (\n    <>\n      <Tooltip title=\"Создать лабораторную\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setOpen(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {open && (\n        <Dialog\n          open={open}\n          fullWidth={true}\n          maxWidth={\"xs\"}\n        >\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{\" Создание лабораторной работы \"}</Typography>\n            {!loading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setOpen(false);\n                  if (data) appendDataCallback(data);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {loading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : (\n            <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {error ? (\n                <Typography color=\"error\" className={classes.errorMessage}>\n                  {error}\n                </Typography>\n              ) : null}\n              <TextField\n                label=\"Название\"\n                type=\"text\"\n                variant=\"outlined\"\n                value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                  error={description.length>70}\n                  helperText={description.length>70&&\"Слишком длинное название\"}\n              />\n              <TextField\n                label=\"Комментарий\"\n                multiline\n                type=\"text\"\n                variant=\"outlined\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n                style={{ margin: \"15px 0px\" }}\n                />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={openLab}\n                    onChange={()=>setOpenLab(!openLab)}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n              style={{ margin: \"0px 5px\" }}\n              label=\"Сделать доступной для всех групп\"\n                />\n                {\n                  openLab && (<>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={deadlineNeed}\n                          onChange={()=>setDeadlineNeed(!deadlineNeed)}\n                          name=\"checkedB\"\n                          color=\"primary\"\n                        />\n                      }\n                    style={{ margin: \"0px 5px\" }}\n                    label=\"Установить дедлайн\"\n                    />\n                    {deadlineNeed && (\n                      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ ruLocale }>\n                        <DatePicker\n                          clearable\n                          ampm={false}\n                          disablePast\n                          margin=\"normal\"\n                          inputVariant=\"outlined\"\n                          value={deadline}\n                          onChange={setDeadline}\n                          format=\"dd MMMM yyyy\"\n                          label=\"Дата дедлайна (включительно)\"\n                        />\n                      </MuiPickersUtilsProvider>\n                    )}\n                  </>)\n                }\n              <UploadFileButton\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                style={{ margin: \"15px 0px\" }}\n                  data={{\n                    method: 'create_lab',\n                    description,\n                    comment,\n                    discipline,\n                    openLab: openLab,\n                    deadlineNeed: deadlineNeed,\n                    deadline: (deadline!==null? deadline.toISOString():null)\n                  }}\n                  label=\"Выбрать файл и создать\"\n                  buttonType={\"Button\"}\n                  successCallback={(data) => {\n                    setOpen(false);\n                    if (appendDataCallback!==undefined)\n                      appendDataCallback(data);\n                  }}\n                  errorCallback={(msg) => {\n                    setError(msg);\n                  }}\n              />\n            </DialogContent>\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default CreateLabModal;\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineCourse\\CreateThemeModal.jsx",["780","781","782","783"],"/* eslint-disable array-callback-return */\nimport React, { useState } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Fab,\n  Tooltip,\n  TextField,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport API from \"../../../../services/API\";\nimport MuiTable from \"../../../../components/MuiTable\";\n\nconst convertData = (data) => {\n  let newData = [];\n  if (data !== null)\n    // console.log(data);\n    for (let index = 0; index < data.length; index++) {\n      const el = data[index];\n      newData.push([\n        el.login,\n        el.role === 91\n          ? \"Студента \" + el.id_group\n          : el.role === 92\n          ? \"Преподавателя\"\n          : el.role === 93\n          ? \"Администратора\"\n          : \"Не определено\",\n      ]);\n    }\n  return newData;\n};\n\nconst CreateThemeModal = ({ setRerender, discipline }) => {\n  const [invitationModal, setInvitationModal] = useState(false);\n  const [invitationsCount, setInvitationsCount] = useState(0);\n  const [group, setGroup] = useState(\"\");\n  const [admissionYear, setAdmissionYear] = useState(new Date().getFullYear());\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n\n  const createGroup = async () => {\n    setIsLoading(true);\n    setError(false);\n    await API.call({\n      method: \"create_theme\",\n      description: group,\n      discipline\n    }).then((result) => {\n      setIsLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setGroup('');\n        // setData(result.data);\n        // if (invitationsCount === 0) {\n          setInvitationModal(false);\n          setRerender(true);\n          // setData(false);\n        // }\n      } else {\n        // setError(result.message);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Создать тему\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setInvitationModal(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {invitationModal && (\n        <Dialog\n          open={invitationModal}\n          fullWidth={true}\n          maxWidth={\"md\"}\n        >\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{\" Создание группы \"}</Typography>\n            {!isLoading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setInvitationModal(false);\n                  // setRerender(true);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {isLoading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : data ? (\n            <MuiTable\n              title={[\n                \"Пожалуйста распечатайте или при печати сохраните как PDF\",\n              ]}\n              data={convertData(data)}\n              columns={[\"Приглашение\", \"В качестве\"]}\n              filter={true}\n              print={true}\n              noMatch=\"Приглашений нет\"\n            />\n          ) : (\n            <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {error ? (\n                <Typography color=\"error\" className={classes.errorMessage}>\n                  {error}\n                </Typography>\n              ) : null}\n              <TextField\n                    label=\"Тема\"\n                    multiline\n                type=\"text\"\n                variant=\"outlined\"\n                value={group}\n                onChange={(e) => setGroup(e.target.value)}\n              />\n              <Button\n                onClick={() => createGroup()}\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                style={{ margin: \"15px 0px\" }}\n              >\n                Создать\n              </Button>\n            </DialogContent>\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default CreateThemeModal;\n","C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineLabs\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineGroupsConfig\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\Discipline\\DisciplineLabs\\CreateLabModal.jsx",["784","785","786","787","788","789","790","791","792","793","794","795","796"],"/* eslint-disable array-callback-return */\n// import 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport {\n  KeyboardDateTimePicker,\n  DateTimePicker,\n  DatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  TextField,\n  Tooltip,\n  Fab,\n  Checkbox,\n} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport { Add, Publish } from \"@material-ui/icons\";\nimport UploadFileButton from \"../../../../components/FileButtons/UploadFileButton\";\nimport API from \"../../../../services/API\";\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { FormControlLabel } from \"@material-ui/core\";\nimport RequestButton from '../../../../components/FileButtons/RequestButton';\n\nconst getInvitations = async (\n  discipline,\n  role,\n  group,\n  setData,\n  setIsLoading,\n  setError,\n) => {\n  setIsLoading(true);\n  setError(false);\n  await API.call({\n    method: \"get_config\",\n    discipline,\n    group,\n  }).then((result) => {\n    setIsLoading(false);\n    if (result.success) {\n      console.log(result.data);\n      setData(result.data);\n    } else {\n      setError(result.message);\n    }\n  });\n};\n\nconst CreateLabModal = ({ appendDataCallback, group }) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const [openLab, setOpenLab] = useState(false);\n  const [deadlineNeed, setDeadlineNeed] = useState(null);\n  const [deadline, setDeadline] = useState(null);\n\n  const [description, setDescription] = useState('');\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {\n    return (() => {\n      setComment('');\n      setDescription('');\n      setOpenLab(false);\n      setDeadlineNeed(null);\n      setDeadline(null);\n    })\n  }, [open]);\n\n  return (\n    <>\n      <Tooltip title=\"Создать лабораторную\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setOpen(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {open && (\n        <Dialog\n          open={open}\n          fullWidth={true}\n          maxWidth={\"xs\"}\n        >\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{\" Добавление лабораторной работы \"}</Typography>\n            {!loading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setOpen(false);\n                  if (data) appendDataCallback(data);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {loading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : (\n            <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {error ? (\n                <Typography color=\"error\" className={classes.errorMessage}>\n                  {error}\n                </Typography>\n              ) : null}\n              \n              <TextField\n                label=\"Номер лабы\"\n                multiline\n                type=\"text\"\n                variant=\"outlined\"\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n                style={{ margin: \"15px 0px\" }}\n                />\n              \n                \n                    <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ ruLocale }>\n                        <DatePicker\n                          clearable\n                          ampm={false}\n                          disablePast\n                          margin=\"normal\"\n                          inputVariant=\"outlined\"\n                          value={deadlineNeed}\n                          onChange={setDeadlineNeed}\n                          format=\"dd MMMM yyyy\"\n                          label=\"Доступно после\"\n                        />\n                      </MuiPickersUtilsProvider>\n                      <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ ruLocale }>\n                        <DatePicker\n                          clearable\n                          ampm={false}\n                          disablePast\n                          margin=\"normal\"\n                          inputVariant=\"outlined\"\n                          value={deadline}\n                          onChange={setDeadline}\n                          format=\"dd MMMM yyyy\"\n                          label=\"Дата дедлайна (включительно)\"\n                        />\n                      </MuiPickersUtilsProvider>\n              <RequestButton\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                style={{ margin: \"15px 0px\" }}\n                  requestData={{\n                    method: 'create_config',\n                    lab:comment,\n                    group:group,\n                    allowed_after: deadlineNeed,\n                    deadline: (deadline!==null? deadline.toISOString():null)\n                  }}\n                  label=\"Добавить\"\n                  buttonType={\"Button\"}\n                  successCallback={(data) => {\n                    setOpen(false);\n                    if (appendDataCallback!==undefined)\n                      appendDataCallback(data);\n                  }}\n                  errorCallback={(msg) => {\n                    setError(msg);\n                  }}\n              />\n            </DialogContent>\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default CreateLabModal;\n","C:\\OdinFront\\src\\pages\\student\\LabResultCard\\styles.js",[],"C:\\OdinFront\\src\\components\\AlertDialog\\index.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineCourse\\index.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineLabs\\index.jsx",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineCourse\\styles.js",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineLabs\\styles.js",[],"C:\\OdinFront\\src\\components\\ProgressCircle\\index.jsx",["797","798","799"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport { Typography, CircularProgress } from \"@material-ui/core\";\nimport { Paper } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Centered from \"../Centered/index\";\nimport useCountDown from \"react-countdown-hook\";\nimport { useEffect } from \"react\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst ProgressCircle = ({ size = 150, fontSize = 32, maxValue, value }) => {\n  \n  useEffect(() => {\n    \n  }, [value]);\n \n  return (\n      <Centered>\n        <div style={{ position: \"relative\", width: size+2, height: size+15 }}>\n          <div style={{ position: \"absolute\", left: 1, top: 1 }}>\n            <CircularProgress\n              variant=\"determinate\"\n              value={100}\n              size={size}\n              aria-describedby=\"progress-bg\"\n              thickness={1}\n              style={{ color: \"grey\" }}\n            />\n          </div>\n          <div\n            style={{ position: \"absolute\", left: 0, top: 0, color: \"grey\" }}\n          >\n              <CircularProgress\n                variant=\"determinate\"\n                value={\n                  value === 0\n                    ? 0\n                    : Math.round((value / maxValue) * 100) \n                }\n                size={size+2}\n                aria-describedby=\"progress-val\"\n                thickness={2}\n                style={//value > 0 ? { color: \"red\" } : \n                  { color: \"green\" }\n                }\n              />\n          </div>\n          {value !== maxValue ? (\n            <div\n              style={{\n                position: \"absolute\",\n                left: 0,\n                top: 0,\n              display: \"flex\",\n                flexDirection:'column',\n                justifyContent: \"center\",\n                alignItems: 'center',\n                width: size,\n                height: size+2,\n              }}\n            ><div style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: 'center',\n            }}>\n              <Typography variant=\"h4\" style={{ fontSize:fontSize }}>\n                {\n                  value === 0\n                    ? 0\n                    : Math.round((value / maxValue) * 100)\n                }%\n              </Typography>\n              </div>\n            </div>\n          ) : (\n            <div\n              style={{\n                position: \"absolute\",\n                left: 1,\n                top: Math.floor((size-fontSize)/4),\n                display: \"flex\",\n                justifyContent: \"center\",\n                width: \"100%\",\n                color: \"green\",\n                fontSize: Math.floor((size-Math.floor((size-fontSize)/4)*2)),\n              }}\n            >\n              <CheckIcon fontSize=\"inherit\" />\n            </div>\n          )}\n        </div>\n      </Centered>\n  );\n};\n\nexport default ProgressCircle;\n","C:\\OdinFront\\src\\pages\\student\\CoursesList\\CoursesList.js",["800","801","802","803"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Button,\n  CardActions,\n  CardContent,\n  Card,\n  CardActionArea,\n  Divider,\n} from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\"; \n\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport API from \"../../../services/API\";\nimport LoadingPage from '../../../components/Loading';\nimport Section from '../../../components/Section/index';\nimport ProgressCircle from '../../../components/ProgressCircle/index';\n\n\n\nconst getData = async (semester_num,setDisciplines,setLoading) => {\n  await API.call({\n    method: \"disciplines_by_semester\",\n    semester: semester_num,\n  }).then(result => {\n    if (result.success) {\n      console.log(result.data);\n      setDisciplines(result.data);\n    }\n    setLoading(false);\n  });\n}\n\nexport default function CoursesList(props) {\n  var classes = useStyles();\n  const [data, setData] = useState(null);\n  const [update, setUpdate] = useState(null);\n\n  return (<>\n    <PageTitle title=\"Курсы\"/>\n    <Section\n      setData={setData}\n      update={update}\n      setUpdate={setUpdate}\n      requestData={{\n        method: \"getCourses\",\n      }}\n      debug // ! Console log enabled\n    >\n      <Grid container spacing={4}>\n          {data ? data.map(item => (\n              <Grid item lg={4} md={4} sm={6} xs={12} key={item.id_course}>\n              <Card className={classes.root} style={{ height: \"100%\" }}>\n                <CardActionArea className={classes.CardActionAreaRoot} onClick={() => {\n                  props.history.push('/student/courses/'+item.id_course)\n                }}>\n                      <CardContent style={{width:'100%'}} className={classes.CardContent}>\n                        <div style={{width:'100%',paddingRight:15}}>\n                          <Typography color=\"textSecondary\" variant=\"h6\">\n                            {item.name}\n                          </Typography>\n                      <Divider style={{ marginBottom: 20 }} />\n                      <Button color=\"primary\" size=\"small\" className={classes.CardButton} fullWidth\n                        component={'div'} onClick={() => {\n                          props.history.push('/student/courses/'+item.id_course)\n                        }}>\n                              Перейти \n                        </Button>\n                        </div>\n                        <div>\n\n                        <ProgressCircle\n                            size={80}\n                            maxValue={100}\n                            value={item.progress}\n                            fontSize={22}\n                            />\n                        </div>\n                  </CardContent>\n                  </CardActionArea>\n                  \n              </Card>\n            </Grid>\n          )) : (\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h5\">\n            Ничего нет\n          </Typography>\n          )}\n            \n\n          </Grid>\n    </Section>\n  </>);\n\n  // return (\n  //   <>\n  //     {loading ? (<LoadingPage />) : (\n  //       <>\n  //         <PageTitle title=\"Дисциплины\"/>\n          // <Grid container spacing={4}>\n          // {disciplines ? disciplines.map(item => (\n          //     <Grid item lg={4} md={4} sm={6} xs={12} key={item.id_discipline}>\n          //     <Card className={classes.root} style={{ height: \"100%\" }}>\n          //       <CardActionArea className={classes.CardActionAreaRoot} onClick={() => {\n          //         props.history.push('/student/semester/'+semester+'/discipline/'+item.id_discipline+'/labs')\n          //       }}>\n          //             <CardContent style={{width:'100%'}} className={classes.CardContent}>\n          //               <div>\n          //                 <Typography color=\"textSecondary\" variant=\"h6\">\n          //                   {item.description}\n          //                 </Typography>\n          //                 <Divider style={{ marginBottom: 20 }} />\n          //               </div>\n          //               <div>\n          //                 <Typography className={classes.pos} color=\"textSecondary\" >\n          //                   Преподаватели\n          //                 </Typography>\n          //                 <Typography variant=\"caption\"  color=\"textSecondary\" component=\"p\" >\n          //                   {item.teachers.map(teacher => teacher.s_name+' '+teacher.s_name[0]+'.'+(teacher.fth_name!==null? teacher.fth_name[0]+'. ':' ')+' ')}\n          //                 </Typography>\n          //               </div>\n          //             </CardContent>\n          //             <CardActions >\n          //               <Button color=\"primary\" size=\"small\" component={'div'} onClick={() => {\n          //                 props.history.push('/student/semester/'+semester+'/discipline/'+item.id_discipline)\n          //               }}>\n          //                     Перейти \n          //               </Button>\n          //         </CardActions>\n          //         </CardActionArea>\n                  \n          //     </Card>\n          //   </Grid>\n          // )) : (\n          //   <Typography color=\"textSecondary\" gutterBottom variant=\"h5\">\n          //   Ничего нет\n          // </Typography>\n          // )}\n            \n\n          // </Grid>\n  //       </>\n  //     )}\n  //   </>\n  // );\n}\n","C:\\OdinFront\\src\\pages\\student\\CoursesList\\styles.js",[],"C:\\OdinFront\\src\\pages\\student\\CoursePage\\CoursesPage.js",["804","805","806","807","808"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Grid,\n  Button,\n  CardActions,\n  CardContent,\n  Card,\n  CardActionArea,\n  Divider,\n} from \"@material-ui/core\";\n\n// styles\nimport useStyles from \"./styles\"; \n\nimport PageTitle from \"../../../components/PageTitle/PageTitle\";\nimport { Typography } from \"../../../components/Wrappers/Wrappers\";\nimport API from \"../../../services/API\";\nimport LoadingPage from '../../../components/Loading';\nimport Section from '../../../components/Section/index';\nimport ProgressCircle from '../../../components/ProgressCircle/index';\n\n\n\nconst getData = async (semester_num,setDisciplines,setLoading) => {\n  await API.call({\n    method: \"disciplines_by_semester\",\n    semester: semester_num,\n  }).then(result => {\n    if (result.success) {\n      console.log(result.data);\n      setDisciplines(result.data);\n    }\n    setLoading(false);\n  });\n}\n\nexport default function CoursesPage(props) {\n  var classes = useStyles();\n  const [data, setData] = useState(null);\n  const [update, setUpdate] = useState(null);\n  const course_id = props.match.params.course_id;\n\n  return (<>\n    <Section\n      setData={setData}\n      update={update}\n      setUpdate={setUpdate}\n      requestData={{\n        method: \"getDisciplines\",\n        course: course_id,\n      }}\n      debug // ! Console log enabled\n    >\n      <PageTitle title=\"Курс: \"/>\n          <Grid container spacing={4}>\n          {data ? data.map(item => (\n              <Grid item lg={4} md={4} sm={6} xs={12} key={item.id_discipline}>\n              <Card className={classes.root} style={{ height: \"100%\" }}>\n                <CardActionArea className={classes.CardActionAreaRoot} onClick={() => {\n                  props.history.push('/student/courses/'+course_id+'/discipline/'+item.id_discipline+'/edu')\n                }}>\n                      <CardContent style={{width:'100%',height:'100%'}} className={classes.CardContent}>\n                        <div style={{width:'100%',paddingRight:15,height:\"100%\",display:'flex',flexDirection:'column',justifyContent:'space-between'}}>\n                          <div>\n                            <Typography color=\"textSecondary\" variant=\"h6\">\n                              {item.description}\n                            </Typography>\n                            {/* <Divider style={{ marginBottom: 20 }} /> */}\n                          </div>\n                          {/* <div>\n                            <Typography className={classes.pos} color=\"textSecondary\" >\n                              Преподаватели\n                            </Typography>\n                            <Typography variant=\"caption\"  color=\"textSecondary\" component=\"p\" >\n                              {item.teachers.map(teacher => teacher.s_name+' '+teacher.s_name[0]+'.'+(teacher.fth_name!==null? teacher.fth_name[0]+'. ':' ')+' ')}\n                            </Typography>\n                          </div> */}\n                        </div>\n                        <div>\n\n                        {/* <ProgressCircle\n                            size={80}\n                            maxValue={100}\n                            value={item.progress}\n                            fontSize={22}\n                            /> */}\n                        </div>\n                      </CardContent>\n                      <CardActions >\n                        <Button color=\"primary\" size=\"small\" component={'div'} onClick={() => {\n                          props.history.push('/student/courses/'+course_id+'/discipline/'+item.id_discipline+'/edu')\n                        }}>\n                              Перейти \n                        </Button>\n                  </CardActions>\n                  </CardActionArea>\n                  \n              </Card>\n            </Grid>\n          )) : (\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h5\">\n            Ничего нет\n          </Typography>\n          )}\n            \n\n          </Grid>\n    </Section>\n  </>);\n\n  // return (\n  //   <>\n  //     {loading ? (<LoadingPage />) : (\n  //       <>\n  //         <PageTitle title=\"Дисциплины\"/>\n          // <Grid container spacing={4}>\n          // {disciplines ? disciplines.map(item => (\n          //     <Grid item lg={4} md={4} sm={6} xs={12} key={item.id_discipline}>\n          //     <Card className={classes.root} style={{ height: \"100%\" }}>\n          //       <CardActionArea className={classes.CardActionAreaRoot} onClick={() => {\n          //         props.history.push('/student/semester/'+semester+'/discipline/'+item.id_discipline+'/labs')\n          //       }}>\n          //             <CardContent style={{width:'100%'}} className={classes.CardContent}>\n          //               <div>\n          //                 <Typography color=\"textSecondary\" variant=\"h6\">\n          //                   {item.description}\n          //                 </Typography>\n          //                 <Divider style={{ marginBottom: 20 }} />\n          //               </div>\n          //               <div>\n          //                 <Typography className={classes.pos} color=\"textSecondary\" >\n          //                   Преподаватели\n          //                 </Typography>\n          //                 <Typography variant=\"caption\"  color=\"textSecondary\" component=\"p\" >\n          //                   {item.teachers.map(teacher => teacher.s_name+' '+teacher.s_name[0]+'.'+(teacher.fth_name!==null? teacher.fth_name[0]+'. ':' ')+' ')}\n          //                 </Typography>\n          //               </div>\n          //             </CardContent>\n          //             <CardActions >\n          //               <Button color=\"primary\" size=\"small\" component={'div'} onClick={() => {\n          //                 props.history.push('/student/semester/'+semester+'/discipline/'+item.id_discipline)\n          //               }}>\n          //                     Перейти \n          //               </Button>\n          //         </CardActions>\n          //         </CardActionArea>\n                  \n          //     </Card>\n          //   </Grid>\n          // )) : (\n          //   <Typography color=\"textSecondary\" gutterBottom variant=\"h5\">\n          //   Ничего нет\n          // </Typography>\n          // )}\n            \n\n          // </Grid>\n  //       </>\n  //     )}\n  //   </>\n  // );\n}\n","C:\\OdinFront\\src\\pages\\student\\CoursePage\\styles.js",[],"C:\\OdinFront\\src\\pages\\student\\DisciplineEduProgram\\index.jsx",["809","810","811","812","813"],"import React, { useState } from \"react\";\nimport { Badge, Paper, Typography } from \"@material-ui/core\";\nimport UploadFileButton from \"../../../components/Buttons/UploadFileButton\";\nimport DownloadFileButton from \"../../../components/Buttons/DownloadFileButton\";\nimport Section from \"../../../components/Section\";\nimport MuiTable from \"../../../components/MuiTable\";\nimport DateToRusTime from \"../../../components/DateToRusTime/index\";\nimport SecondsToRusTime from \"../../../components/SecondsToRusTime\";\nimport classnames from \"classnames\";\nimport useStyles from \"./styles\";\nimport { Tooltip } from '@material-ui/core';\nimport { IconButton } from '@material-ui/core';\nimport ForwardIcon from '@material-ui/icons/Forward';\n\nconst Statuses = \"Проверка,Оценено,Повторная проверка\".split(\",\");\n\nexport default function DisciplineEduProgram(props) {\n  const classes = useStyles();\n  const [update, setUpdate] = useState(null);\n  const [data, setData] = useState(null);\n\n  const Mark = (mark) => {\n    return (\n      <Badge\n        badgeContent={mark}\n        color=\"primary\"\n        classes={{\n          colorPrimary: classnames({\n            [classes.greenDot]: mark === 5,\n            [classes.blueDot]: mark === 4,\n            [classes.orangeDot]: mark === 3,\n            [classes.redDot]: mark === 2,\n          }),\n        }}\n      />\n    );\n  };\n\n  return (\n    <>\n      <Section\n        setData={setData}\n        update={update}\n        setUpdate={setUpdate}\n        requestData={{\n          method: \"getEduProgram\",\n          discipline: props.match.params.id_discipline,\n        }}\n      >\n        {data && data.map((item) => {\n          return (\n            <Paper elevation={3} className={classes.paper}>\n              <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: 'space-between', }}>\n                <div style={{ display: \"flex\", alignItems: 'flex-start', flexDirection: 'column', paddingBottom: 5 }}>\n              \n                  <Typography variant=\"h6\" component=\"h1\" className={classes.date}>\n                    {item.edu_item.name}\n                  </Typography>\n                  <Typography style={{ paddingLeft: 5 }}>{item.description}</Typography>\n                  {item.comment &&\n                    <Typography style={{ paddingLeft: 5 }}>Комментарий: {item.comment}</Typography>\n                  }\n                </div>\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\n                  <DownloadFileButton\n                    buttonType=\"IconButton\"\n                    color=\"primary\"\n                    filename={data.file}\n                    data={{\n                      method: \"get_lab_file\",\n                      file: data.file,\n                      lab: data.id_lab,\n                    }}\n                    label=\"Скачать задание\"\n                  />\n                  <UploadFileButton\n                    className={classes.greenText}\n                    buttonType=\"IconButton\"\n                    color=\"primary\"\n                    label=\"Отправить ответ\"\n                    data={{\n                      method: 'upload_user_answer',\n                      lab: data.id_lab,\n                    }}\n                    successCallback={()=>{}}\n                  />\n                  <Tooltip title=\"На страницу предмета\" placement=\"top\" arrow>\n                    <IconButton aria-label=\"upload\" >\n                      <ForwardIcon />\n                    </IconButton>\n                  </Tooltip>\n                </div>\n              </div>\n            </Paper>);\n        })}\n        {/* <MuiTable\n          style={{ paddingTop: 10 }}\n          title=\"Список лабораторных работ\"\n          columns={[\n            \"Название\",\n            \"Приложение\",\n            \"Дедлайн\",\n            \"Статус\",\n            \"Сдано\",\n            \"Оценка\",\n            \"Проверил\",\n            \"Действия\",\n          ]}\n          noMatch=\"Извините, ничего не найдено\"\n          data={\n            !data\n              ? []\n              : (() => {\n                  let newData = [];\n                  for (let index = 0; index < data.length; index++) {\n                    const el = data[index];\n                    let temp = null;\n                    newData.push([\n                      // *Название\n                      <>\n                        {el.description}{\" \"}\n                        {el.comment && (\n                          <>\n                            <br />\n                            {\"(\" + el.comment + \")\"}\n                          </>\n                        )}\n                      </>,\n                      // *Приложение\n                      el.file && (\n                        <DownloadFileButton\n                          size=\"small\"\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          filename={el.file.split(\"/\").pop()}\n                          data={{\n                            method: \"get_lab_file\",\n                            lab: el.id_lab,\n                          }}\n                          label=\"Скачать\"\n                        />\n                      ),\n                      // *Дедлайн\n                      el.deadline && <DateToRusTime time={el.deadline} />,\n                      // el.comment,\n                      // *Статус\n                      el.answer ? (\n                        <div\n                          className={classnames({\n                            // [classes.greenText]: el.answer.mark > 2 && ,\n                            [classes.orangeText]: el.answer.status !== 2,\n                            [classes.redText]:\n                              el.answer.mark === 2 && el.answer.status === 2,\n                          })}\n                        >\n                          {Statuses[el.answer.status - 1]}\n                        </div>\n                      ) : (\n                        <div className={classes.completeCol}>\n                          <div>Нет ответа</div>\n                          {!el.deadline ||\n                          (temp = Math.floor(\n                            (new Date(el.deadline) - new Date()) / 1000,\n                          )) > 0 ? (\n                            <div className={classes.greenText}>\n                              {\"Осталось \"}\n                              {temp < 60 && temp + \" секунд\"}\n                              <br />\n                              <SecondsToRusTime time={temp} />\n                            </div>\n                          ) : (\n                            <div\n                              className={classes.redText}\n                              style={{ maxWidth: 155 }}\n                            >\n                              {\"Просрочено на \"}\n                              {-temp < 60 && \"несколько секунд\"}\n                              <br />\n                              <SecondsToRusTime time={-temp} />\n                            </div>\n                          )}\n                        </div>\n                      ),\n                      // * Сдано\n                      el.answer && el.answer.complete_date && (\n                        <div className={classes.completeCol}>\n                          <>\n                            <DateToRusTime time={el.answer.complete_date} />\n                          </>\n                          {!el.deadline ||\n                          (temp = Math.floor(\n                            (new Date(el.deadline) -\n                              new Date(el.answer.complete_date)) /\n                              1000,\n                          )) > 0 ? (\n                            <div className={classes.greenText}>Вовремя</div>\n                          ) : (\n                            <div\n                              className={classes.redText}\n                              // style={{ maxWidth: 155 }}\n                            >\n                              {\"C опозданием на \"}\n                              {-temp < 60 && -temp + \" секунд\"}\n                              <br />\n                              <SecondsToRusTime time={-temp} />\n                            </div>\n                          )}\n                        </div>\n                      ),\n                      // * Оценка\n                      el.answer && el.answer.mark && Mark(el.answer.mark),\n                      // * Препод что проверил\n                      el.answer &&\n                        el.answer.teacher &&\n                        el.answer.teacher.s_name +\n                          \" \" +\n                          (el.answer.teacher.f_name[0] + \".\") +\n                          (el.answer.teacher.fth_name &&\n                            el.answer.teacher.fth_name[0] + \".\"),\n                      // * Кнопка загрузки ответа\n                      ((el.answer && el.answer.mark < 5) || !el.answer) &&\n                        (new Date() - new Date(el.allowed_after) <\n                          15552000000 ||\n                          !el.allowed_after) && (\n                          // (new Date() - new Date(el.allowed_after)) < 1000*60*60*24*30*6\n                          <UploadFileButton\n                            key={index}\n                            size=\"small\"\n                            variant=\"contained\"\n                            color={\n                              (el.answer &&\n                                el.answer.mark === 2 &&\n                                el.answer.status === 2) ||\n                              !el.answer\n                                ? \"primary\"\n                                : \"default\"\n                            }\n                            label={\n                              (el.answer &&\n                                el.answer.mark === 2 &&\n                                el.answer.status === 2) ||\n                              !el.answer\n                                ? \"Загрузить ответ\"\n                                : \"Пересдать\"\n                            }\n                            data={{\n                              method: \"upload_user_answer\",\n                              lab: el.id_lab,\n                            }}\n                            // * Тихое обновление страницы успешной загрузки\n                            successCallback={() => {\n                              setUpdate(\"silent\");\n                            }}\n                          />\n                        ),\n                    ]);\n                  }\n                  return newData;\n                })()\n          }\n        /> */}\n      </Section>\n    </>\n  );\n}\n","C:\\OdinFront\\src\\pages\\student\\DisciplineEduProgram\\styles.js",[],"C:\\OdinFront\\src\\pages\\student\\LecturePage\\index.jsx",["814","815","816"],"import { Tooltip } from '@material-ui/core';\nimport { Typography, IconButton } from '@material-ui/core';\nimport { Avatar } from '@material-ui/core';\nimport { Edit, Email } from '@material-ui/icons';\nimport React, { useState, useEffect } from 'react';\nimport Centered from '../../../components/Centered';\nimport Section from '../../../components/Section/index';\nimport { Button } from '@material-ui/core';\n\nconst LecturePage = (props) => {\n  const [update, setUpdate] = useState(null);\n  const [data, setData] = useState(null);\n\n  return (\n    <>\n      <Section\n        requestData={{\n          method: 'get_lecture',\n          discipline: props.match.params.id_discipline,\n        }}\n        setData={setData}\n        update={update}\n        setUpdate={setUpdate}\n        debug\n      >\n        {data && (<>\n          <Centered style={{minHeight:400,alignItems:\"flex-start\",padding:50,flexDirection:\"row\", flexWrap:\"wrap\",justifyItems:'flex-start'}}>\n            {data.map((el) =>\n              <div style={{display:'flex',alignItems:'center',marginBottom:40,}}>\n                <Avatar src={el.photo} style={{ margin: 10, marginLeft:40, width: 150, height: 150 }} />\n                <div style={{display:'flex',flexDirection:\"column\",alignItems:'center', marginLeft:0, justifyItems:'center',minWidth: 350}}>\n                <Typography variant=\"h4\" style={{marginBottom: 20}}>\n                  {el.s_name +\n                  \" \" +\n                  (el.f_name + \" \") +\n                  (el.fth_name!==null ? el.fth_name:'')}\n                </Typography>\n                <Tooltip arrow position=\"top\" title=\"Написать по E-mail\">\n                  <Button\n                    color={\"primary\"}\n                    variant=\"contained\"\n                    startIcon={<Email />}\n                    onClick={() => {\n                      window.location.href = \"mailto:\"+el.email;\n                    }}\n                  >\n                  Отправить Email\n                </Button>\n                </Tooltip>\n                </div>\n              </div>\n            )}\n          </Centered>\n       </>)} \n      </Section>\n    </>\n  );\n};\n\nexport default LecturePage;\n","C:\\OdinFront\\src\\pages\\teacher\\AllCourses\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\AllCourses\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\AllCourses\\CreateModal.jsx",["817","818","819","820"],"/* eslint-disable array-callback-return */\nimport React, { useState } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Fab,\n  Tooltip,\n  TextField,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport API from \"../../../services/API\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport MuiTable from \"../../../components/MuiTable\";\n\nconst convertData = (data) => {\n  let newData = [];\n  if (data !== null)\n    // console.log(data);\n    for (let index = 0; index < data.length; index++) {\n      const el = data[index];\n      newData.push([\n        el.login,\n        el.role === 91\n          ? \"Студента \" + el.id_group\n          : el.role === 92\n          ? \"Преподавателя\"\n          : el.role === 93\n          ? \"Администратора\"\n          : \"Не определено\",\n      ]);\n    }\n  return newData;\n};\n\nconst CreateModal = ({ setRerender }) => {\n  const [invitationModal, setInvitationModal] = useState(false);\n  const [invitationsCount, setInvitationsCount] = useState(0);\n  const [group, setGroup] = useState(\"\");\n  const [admissionYear, setAdmissionYear] = useState(new Date().getFullYear());\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n\n  const createGroup = async () => {\n    setIsLoading(true);\n    setError(false);\n    await API.call({\n      method: \"createCourse\",\n      name: group,\n    }).then((result) => {\n      setIsLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        // if (invitationsCount === 0) {\n          setInvitationModal(false);\n          setRerender(true);\n          setData(false);\n        // }\n      } else {\n        setError(result.message);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Создать курс\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setInvitationModal(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {invitationModal && (\n        <Dialog\n          open={invitationModal}\n          fullWidth={true}\n          maxWidth={!data ? \"xs\" : \"sm\"}\n        >\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{\" Создание курса \"}</Typography>\n            {!isLoading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setInvitationModal(false);\n                  setRerender(true);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {isLoading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : data ? (\n            <MuiTable\n              title={[\n                \"Пожалуйста распечатайте или при печати сохраните как PDF\",\n              ]}\n              data={convertData(data)}\n              columns={[\"Приглашение\", \"В качестве\"]}\n              filter={true}\n              print={true}\n              noMatch=\"Приглашений нет\"\n            />\n          ) : (\n            <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {error ? (\n                <Typography color=\"error\" className={classes.errorMessage}>\n                  {error}\n                </Typography>\n              ) : null}\n              <TextField\n                label=\"Название курса\"\n                type=\"text\"\n                variant=\"outlined\"\n                value={group}\n                onChange={(e) => setGroup(e.target.value)}\n              />\n              <Button\n                onClick={() => createGroup()}\n                color=\"primary\"\n                variant=\"contained\"\n                fullWidth\n                style={{ margin: \"15px 0px\" }}\n              >\n                Создать\n              </Button>\n            </DialogContent>\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default CreateModal;\n","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseConfigLayout.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\AddDisciplineModal.jsx",["821","822","823"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Tooltip,\n  Fab,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport API from \"../../../../services/API\";\nimport HiddenValue from \"../../../../components/HiddenValue\";\nimport SecondsToRusTime from \"../../../../components/SecondsToRusTime\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport CreateDisciplineModal from './CreateDisciplineModal';\n\nconst convertData = (data, classes, addToGroup, progress) => {\n  let newData = [];\n  if (data !== null)\n    for (let index = 0; index < data.length; index++) {\n      const el = data[index];\n      var last_login =\n        -(new Date(el.last_login) - new Date()) / 1000 - 60 * 60 * 3;\n      newData.push([\n        el.s_name + \" \" + el.f_name + (el.fth_name ? \" \" + el.fth_name : \"\"),\n        <HiddenValue label=\"Email\" text={el.email} />,\n        !el.last_login ? (\n          \"Никогда\"\n        ) : last_login < 60 ? (\n          <span style={{ color: \"green\" }}>\n            <FiberManualRecordIcon style={{ height: 12 }} />\n            Онлайн\n          </span>\n        ) : (\n          <>\n            <SecondsToRusTime time={last_login} />\n            {\" назад\"}\n          </>\n        ),\n        \n      ]);\n    }\n  return newData;\n};\n\nconst AddDisciplineModal = ({ appendDataCallback, course }) => {\n  const [open, setOpen] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  // const [progress, setProgress] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n  const [disciplineProgressId, setDisciplineProgressId] = useState(false);\n\n  const addToCourse = async (discipline) => {\n    setDisciplineProgressId(discipline);\n    // setProgress(true);\n    setError(false);\n    await API.call({\n      method: \"addDisciplineToCourse\",\n      course,\n      discipline,\n    }).then((result) => {\n      console.log(result);\n      if (result.success) {\n        appendDataCallback([result.data]);\n        \n      } else {\n        // setProgress(false);\n        setError(result.message);\n      }\n    });\n    await loadData(false);\n    setDisciplineProgressId(false);\n  };\n\n  const loadData = async (reload = true) => {\n    if (reload) setIsLoading(true);\n    await API.call({\n      method: \"getDisciplines\",\n      excludeFilter: {\n        course\n      }\n    }).then((result) => {\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        // setProgress(false);\n      } else {\n        setError(result.message);\n      }\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (open) {\n      loadData(true);\n    }\n  }, [open]);\n\n  return (\n    <>\n      <Tooltip title=\"Добавить дисциплины\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setOpen(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {open && (\n        <Dialog open={open} fullWidth={true} maxWidth={\"md\"}>\n          <DialogTitle disableTypography className={classes.modalTitle}>\n            <Typography variant=\"h6\">\n              {\"Включить в список дисциплин\"}\n            </Typography>\n            <div className={classes.modalTitle}>\n              <CreateDisciplineModal course={course} callback={appendDataCallback}/>\n            </div>\n            {!isLoading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setOpen(false);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {isLoading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : (\n            <MuiTable\n              columns={[\"Дисциплина\", \"Добавить\"]}\n              noMatch={error ? error : \"Других дисциплин нет\"}\n              viewColumns={false}\n              data={!data ? [] : (() => {\n                let tableData = [];\n                data.forEach(el => {\n                  tableData.push([\n                    el.description,\n                    <IconButton\n                      disabled={disciplineProgressId}  \n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      className={classes.B5}\n                      >\n                      {disciplineProgressId === el.id_discipline ? (\n                        <CircularProgress color=\"primary\" size={20} />\n                      ) : (\n                        <Tooltip title=\"Включить в группу\" placement=\"top\" arrow>\n                          <Add\n                            onClick={() => {\n                              addToCourse(el.id_discipline);\n                            }}\n                          />\n                        </Tooltip>)}\n                    </IconButton>\n                  ]);\n                });\n                return tableData;\n              })()}\n            />\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default AddDisciplineModal;\n","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseDisciplinesConfig\\CreateDisciplineModal.jsx",["824","825","826","827"],"/* eslint-disable array-callback-return */\nimport React, { useState } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Fab,\n  Tooltip,\n  TextField,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport API from \"../../../../services/API\";\nimport MuiTable from './../../../../components/MuiTable/index';\n\nconst CreateDisciplineModal = ({ course, callback }) => {\n  const [invitationModal, setInvitationModal] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n\n  const [description, setDescription] = useState(\"\");\n\n  const createGroup = async () => {\n    setIsLoading(true);\n    setError(false);\n    await API.call({\n      method: \"create_discipline\",\n      description: description,\n      appendToCourse: course,\n    }).then((result) => {\n      setIsLoading(false);\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        // if (invitationsCount === 0) {\n          setInvitationModal(false);\n          setData(false);\n        callback(result.data);\n        setDescription(\"\");\n        // }\n      } else {\n        setError(result.message);\n      }\n    });\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Создать группу\" placement=\"top\" arrow>\n        <Button\n          color=\"primary\"\n          variant=\"outlined\"\n          onClick={() => setInvitationModal(true)}>\n          Создать новую\n        </Button>\n      </Tooltip>\n      {invitationModal && (\n        <Dialog\n          open={invitationModal}\n          fullWidth={true}\n          maxWidth={!data ? \"xs\" : \"sm\"}\n        >\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{\" Создание дисциплины \"}</Typography>\n            {!isLoading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setInvitationModal(false);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {error ? (\n              <Typography color=\"error\" className={classes.errorMessage}>\n                {error}\n              </Typography>\n            ) : null}\n            <TextField\n              label=\"Название дисциплины\"\n              type=\"text\"\n              focused\n              variant=\"outlined\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n            />\n            <Button\n              onClick={() => createGroup()}\n              color=\"primary\"\n              variant=\"contained\"\n              fullWidth\n              style={{ margin: \"15px 0px\" }}\n            >\n              Создать\n            </Button>\n          </DialogContent>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default CreateDisciplineModal;\n","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseStudentsConfig\\index.jsx",["828"],"import {\n  CircularProgress,\n  IconButton,\n  Tooltip,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport API from \"../../../../services/API\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport useStyles from \"./styles\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport Section from '../../../../components/Section/index';\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport HiddenValue from './../../../../components/HiddenValue/index';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport SecondsToRusTime from './../../../../components/SecondsToRusTime/index';\nimport AddStudentModal from './AddStudentModal';\n\nconst CourseStudentsConfig = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const [update, setUpdate] = useState(null);\n  \n  const id_course = props.match.params.id_course;\n  const [userProgressId, setUserProgressId] = useState(false);\n\n  const removeFromCourse = async (user) => {\n    setUserProgressId(user);\n    await API.call({\n      method: \"removeStudentFromCourse\",\n      user,\n      course: id_course,\n    }).then((result) => {\n      if (result.success) {\n        (async () => {\n          setUpdate('silent');\n        })();\n      } else {\n      }\n    });\n  };\n\n\n  return (\n    <Section\n      requestData={{\n        method: 'courseStudents',\n        course: id_course,\n      }}\n      setData={(data) => {\n        setData(data);\n        setUserProgressId(false);\n      }}\n      update={update}\n      setUpdate={setUpdate}\n      debug\n      noDataAllowed\n    >\n      <MuiTable\n        className={classes.tableToolbarRoot}\n        title={\n          <div disableTypography className={classes.modalTitle}>\n            <Typography variant=\"h6\">\n              {\"Список студентов курса\"}\n            </Typography>\n          </div>\n        }\n        viewColumns={false}\n        search={false}\n        columns={[\"ФИО\", \"Email\", \"Блокировка\", \"Последняя активность\", \"Действия\"]}\n        noMatch={\"На курс никто не записан\"}\n        data={\n          !data\n            ? []\n            : (() => {\n              let newData = [];\n              data.forEach(el => {\n                var last_login =\n                  -(new Date(el.last_login) - new Date()) / 1000 - 60 * 60 * 3;\n                newData.push([\n                  el.s_name + \" \" + el.f_name + (el.fth_name ? \" \" + el.fth_name : \"\"),\n                  <HiddenValue label=\"Email\" text={el.email} />,\n                  el.banned ? (\n                    <span style={{ color: \"red\" }}>\n                      <FiberManualRecordIcon style={{ height: 12 }} />\n                      Заблокирован\n                    </span>\n                  ) : (\n                    <span style={{ color: \"green\" }}>\n                      <FiberManualRecordIcon style={{ height: 12 }} />\n                      Нет\n                    </span>\n                  ),\n                  !el.last_login ? (\n                    \"Никогда\"\n                  ) : last_login < 60 ? (\n                    <span style={{ color: \"green\" }}>\n                      <FiberManualRecordIcon style={{ height: 12 }} />\n                      Онлайн\n                    </span>\n                  ) : (\n                    <>\n                      <SecondsToRusTime time={last_login} />\n                      {\" назад\"}\n                    </>\n                  ),\n                  <IconButton\n                  disabled={userProgressId}\n                    variant=\"outlined\"\n                    className={classes.B2}\n                  color=\"secondary\"\n                  onClick={() => {\n                    removeFromCourse(el.id_user);\n                  }}\n                >\n                  {userProgressId === el.id_user ? (\n                    <CircularProgress\n                      color=\"primary\"\n                      size={20}\n                    />\n                  ) : (\n                    <Tooltip\n                      title=\"Исключить из курса\"\n                      placement=\"top\"\n                      arrow\n                    >\n                      <RemoveCircleIcon />\n                    </Tooltip>\n                  )}\n                </IconButton>\n                ]);\n              });\n\n              return newData;\n            })()\n        }\n      />\n      <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n        <AddStudentModal\n          course={id_course}\n          appendDataCallback={() => {\n            setUpdate('silent'); \n          }}\n        />\n      </div>\n    </Section>\n  );\n};\n\nexport default CourseStudentsConfig;\n","C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseStudentsConfig\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\CourseConfig\\CourseStudentsConfig\\AddStudentModal.jsx",["829","830"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport {\n  IconButton,\n  Button,\n  Dialog,\n  DialogContent,\n  Tooltip,\n  Fab,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport API from \"../../../../services/API\";\nimport HiddenValue from \"../../../../components/HiddenValue\";\nimport SecondsToRusTime from \"../../../../components/SecondsToRusTime\";\nimport MuiTable from \"../../../../components/MuiTable\";\n\nconst AddStudentModal = ({ appendDataCallback, course }) => {\n  const [open, setOpen] = useState(false);\n\n  const [isLoading, setIsLoading] = useState(false);\n  // const [progress, setProgress] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState(false);\n  const classes = useStyles();\n  const [userProgressId, setUserProgressId] = useState(false);\n\n  const addToCourse = async (user) => {\n    setUserProgressId(user);\n    // setProgress(true);\n    setError(false);\n    await API.call({\n      method: \"addStudentToCourse\",\n      course,\n      user,\n    }).then((result) => {\n      console.log(result);\n      if (result.success) {\n        appendDataCallback([result.data]);\n        \n      } else {\n        // setProgress(false);\n        setError(result.message);\n      }\n    });\n    await loadData(false);\n    setUserProgressId(false);\n  };\n\n  const loadData = async (reload = true) => {\n    if (reload) setIsLoading(true);\n    await API.call({\n      method: \"getStudentsWithoutSuchCourse\",\n      course,\n    }).then((result) => {\n      if (result.success) {\n        console.log(result.data);\n        setData(result.data);\n        // setProgress(false);\n      } else {\n        setError(result.message);\n      }\n      setIsLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    if (open) {\n      loadData(true);\n    }\n  }, [open]);\n\n  return (\n    <>\n      <Tooltip title=\"Записать студента\" placement=\"top\" arrow>\n        <Fab color=\"primary\" onClick={() => setOpen(true)}>\n          <Add />\n        </Fab>\n      </Tooltip>\n      {open && (\n        <Dialog open={open} fullWidth={true} maxWidth={\"md\"}>\n          <DialogTitle disableTypography className={classes.modalTitle}>\n            <Typography variant=\"h6\">\n              {\"Записать студентов на курс\"}\n            </Typography>\n            {!isLoading && (\n              <IconButton\n                className={classes.closeButton}\n                onClick={() => {\n                  setOpen(false);\n                  setData(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            )}\n          </DialogTitle>\n          {isLoading ? (\n            <DialogContent>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  height: 200,\n                  alignItems: \"center\",\n                }}\n              >\n                <CircularProgress color=\"primary\" size={40} />\n              </div>\n            </DialogContent>\n          ) : (\n            <MuiTable\n              columns={[\"ФИО\", \"Email\", \"Блокировка\", \"Последняя активность\", \"Действия\"]}\n              noMatch={error ? error : \"Других студентов нет\"}\n              viewColumns={false}\n              data={!data ? [] : (() => {\n                let tableData = [];\n                data.forEach(el => {\n                  var last_login =\n                    -(new Date(el.last_login) - new Date()) / 1000 - 60 * 60 * 3;\n                  tableData.push([\n                    el.s_name + \" \" + el.f_name + (el.fth_name ? \" \" + el.fth_name : \"\"),\n                    <HiddenValue label=\"Email\" text={el.email} />,\n                    el.banned ? (\n                      <span style={{ color: \"red\" }}>\n                        <FiberManualRecordIcon style={{ height: 12 }} />\n                        Заблокирован\n                      </span>\n                    ) : (\n                      <span style={{ color: \"green\" }}>\n                        <FiberManualRecordIcon style={{ height: 12 }} />\n                        Нет\n                      </span>\n                    ),\n                    !el.last_login ? (\n                      \"Никогда\"\n                    ) : last_login < 60 ? (\n                      <span style={{ color: \"green\" }}>\n                        <FiberManualRecordIcon style={{ height: 12 }} />\n                        Онлайн\n                      </span>\n                    ) : (\n                      <>\n                        <SecondsToRusTime time={last_login} />\n                        {\" назад\"}\n                      </>\n                    ),\n                    <IconButton\n                      disabled={userProgressId}  \n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      className={classes.B5}\n                      >\n                      {userProgressId === el.id_user ? (\n                        <CircularProgress color=\"primary\" size={20} />\n                      ) : (\n                        <Tooltip title=\"Включить в курс\" placement=\"top\" arrow>\n                          <Add\n                            onClick={() => {\n                              addToCourse(el.id_user);\n                            }}\n                          />\n                        </Tooltip>)}\n                    </IconButton>\n                  ]);\n                });\n                return tableData;\n              })()}\n            />\n          )}\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default AddStudentModal;\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineEduConfig\\index.jsx",["831","832","833","834","835","836","837","838","839","840"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, IconButton, Tooltip } from \"@material-ui/core\";\nimport MUIDataTable from \"mui-datatables\";\nimport API from \"../../../../services/API\";\nimport LoadingPage from \"../../../../components/Loading\";\nimport { Add, Archive, Delete, Description, GetApp } from \"@material-ui/icons\";\nimport useStyles from \"./styles\";\nimport UploadFileButton from \"../../../../components/FileButtons/UploadFileButton\";\nimport MuiTable from \"../../../../components/MuiTable\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport AlertDialog from \"../../../../components/AlertDialog\";\nimport { Typography } from \"@material-ui/core\";\nimport CreateLabModal from \"./CreateLabModal\";\nimport Section from \"../../../../components/Section\";\n\nconst monthA = \" января , февраля , марта , апреля , мая , июня , июля , августа , сентября , октября , ноября , декабря \".split(\n  \",\",\n);\n\nconst DisciplineEduConfig = (props) => {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n  const [update, setUpdate] = useState(null);\n  \n  \n  const id_discipline = props.match.params.id_discipline;\n  const [progress, setProgress] = useState(false);\n  const [progressId, setProgressId] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [alertDescription, setAlertDescription] = useState(null);\n\n  const removeFile = async (id_lab) => {\n    setProgress(true);\n    setProgressId(id_lab);\n    await API.call({\n      method: \"check_lab_data\",\n      lab: id_lab,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        if (result.status === \"DATA_EXISTS\") {\n          let message = <>{result.data.map(el => \n            <Typography>{el}</Typography>\n          )}</>;\n          // console.log(message);\n          setAlertDescription(message);\n          setOpen(true);\n        } else if (result.status === \"DATA_NOT_EXISTS\") {\n          agreedRemoving();\n        }\n      } else {\n        setProgress(false);\n        setProgressId(false);\n      }\n    });\n  };\n\n  const agreedRemoving = async () => {\n    await API.call({\n      method: \"delete_lab\",\n      lab: progressId,\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        getData();\n      } else {\n        setProgress(false);\n        setProgressId(false);\n      }\n    });\n  };\n\n  const getFile = async (lab, filename) => {\n    await API.filecall(\n      {\n        method: \"get_lab_file\",\n        lab: lab,\n      },\n      filename,\n    ).then((result) => {\n      if (!result.success) {\n        alert(\"Ошибка загрузки! Откройте консоль!\");\n      }\n    });\n  };\n\n  const getData = async () => {\n    await API.call({\n      method: \"get_discipline_labs\",\n      discipline: id_discipline,\n    }).then((result) => {\n      if (result.success) {\n        setData(result.data);\n      }\n      setProgress(false);\n      setProgressId(false);\n    });\n  };\n\n  useEffect(() => {\n    getData();\n    return () => {\n      setData(null);\n    };\n  }, []);\n\n\n  return (\n    <>\n      <AlertDialog\n        open={open}\n        setOpen={setOpen}\n        question={\"Удалить лабораторную вместе со всеми данными?\"}\n        description={alertDescription}\n        successCallback={agreedRemoving}\n        failCallback={() => {\n          setProgress(false);\n          setProgressId(false);\n        }}\n      />\n      {/* <Section update={update} setUpdate={setUpdate} debug noDataAllowed\n        setData={setData}\n        requestData={{\n          method: 'getEduList',\n          id_discipline,\n        }}\n      >\n        </Section> */}\n        <MuiTable\n            title=\"Список ресурсов\"\n            columns={[\n              \"№,ID (и активность)\",\n              \"Тип\",\n              \"Название\",\n              \"Порядок\",\n              \"Изменен\",\n              \"Действия (Toggle active, edit, exclude, delete)\",\n            ]}\n            noMatch={\"Нет ресурсов\"}\n            data={\n              !data\n                ? []\n                : (() => {\n                    let newData = [];\n                    if (data !== null)\n                      for (let index = 0; index < data.length; index++) {\n                        const el = data[index];\n                        if (el.updated_at === null)\n                          el.updated_at = el.created_at;\n                        el.updated_at = new Date(el.updated_at);\n\n                        newData.push([\n                          index + 1 + \" (ID\" + el.id_lab + \")\",\n                          <>\n                            {el.description}\n                            {el.comment && (\n                              <>\n                                <br />\n                                {\"(\" + el.comment + \")\"}\n                              </>\n                            )}\n                          </>,\n                          el.updated_at.getDate() +\n                            monthA[el.updated_at.getMonth()] +\n                            el.updated_at.getFullYear() +\n                            \" \" +\n                            el.updated_at.getHours() +\n                            \":\" +\n                            el.updated_at.getMinutes(),\n                          <div style={{ display: \"flex\" }}>\n                            <UploadFileButton\n                              data={{\n                                method: \"upload_lab_file\",\n                                lab: el.id_lab,\n                              }}\n                              label={\n                                (el.file === null\n                                  ? \"Загрузить\"\n                                  : \"Обновить\") + \" файл задания\"\n                              }\n                              buttonType={\"IconButton\"}\n                              successCallback={getData}\n                              disabled={progress}\n                            />\n                            {el.file !== null && (\n                              <IconButton\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => {\n                                  getFile(\n                                    el.id_lab,\n                                    el.description +\n                                      \".\" +\n                                      el.file.split(\".\")[1],\n                                  );\n                                }}\n                                disabled={progress}\n                              >\n                                <GetApp />\n                              </IconButton>\n                            )}\n                          </div>,\n                          <div style={{ display: \"flex\" }}>\n                            <IconButton\n                              variant=\"outlined\"\n                              color=\"secondary\"\n                              className={classes.B2}\n                              onClick={() => {\n                                removeFile(el.id_lab);\n                              }}\n                              disabled={progress}\n                            >\n                              {progress && progressId === el.id_lab ? (\n                                <CircularProgress\n                                  color=\"primary\"\n                                  size={20}\n                                />\n                              ) : (\n                                <Tooltip\n                                  title=\"Удалить\"\n                                  placement=\"top\"\n                                  arrow\n                                >\n                                  <Delete />\n                                </Tooltip>\n                              )}\n                            </IconButton>\n                          </div>,\n                        ]);\n                      }\n                    return newData;\n                  })()\n            }\n          />\n          <div style={{ position: \"fixed\", right: 0, bottom: 0, margin: 30 }}>\n            <CreateLabModal\n              appendDataCallback={getData}\n              discipline={id_discipline}\n            />\n          </div>\n      \n      \n          \n\n    </>\n  );\n};\n\nexport default DisciplineEduConfig;\n","C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineEduConfig\\CreateLabModal.jsx",["841","842","843","844","845","846","847","848"],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineEduConfig\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLecturesConfig\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLecturesConfig\\styles.js",[],"C:\\OdinFront\\src\\components\\Modal\\SimpleModal.jsx",[],"C:\\OdinFront\\src\\components\\Modal\\styles.js",[],"C:\\OdinFront\\src\\components\\Editor\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineLecturesConfig\\EditModal.jsx",[],"C:\\OdinFront\\src\\components\\Modal\\ControlableModal.jsx",["849","850"],"/* eslint-disable array-callback-return */\nimport React, { useState } from \"react\";\nimport {\n  IconButton,\n  Dialog,\n  DialogContent,\n  Fab,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { Add } from \"@material-ui/icons\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport useStyles from \"./styles\";\nimport { useEffect } from 'react';\n\nconst ControlableModal = ({\n  onClose = ()=>{return true},\n  openButtonTitle = \"Открыть модальное окно\",\n  modalTitle = \"Модальное окно\",\n  width = \"xs\",\n  titleButtons= null,\n  prerendered = false,\n  open = false, // React.state varible\n  setOpen = (value) => { }, // React.state function\n  noOpenButton = false,\n  children\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      {!noOpenButton && (\n        <Tooltip title={openButtonTitle} placement=\"top\" arrow>\n          <Fab color=\"primary\" onClick={() => { setOpen(true);}}>\n            <Add />\n          </Fab>\n        </Tooltip>\n      )}\n      {(open || prerendered) && (\n        <Dialog\n          // style={(prerendered && (open? {display:'block'}: {display:'none'}))}\n          // open={(!prerendered ? open:true)}\n          open={open}\n          maxWidth={width}\n          fullWidth\n        >\n          <DialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{modalTitle}</Typography>\n            {titleButtons && (\n              <div className={classes.modalTitle}>\n                {titleButtons}\n              </div>\n            )}\n            <IconButton\n              className={classes.closeButton}\n              onClick={() => {\n                if (onClose() === true)\n                  setOpen(false);\n              }}\n            >\n              <CloseIcon />\n            </IconButton>\n          </DialogTitle>\n          <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n            {children}\n          </DialogContent>\n        </Dialog>\n      )}\n    </>\n  );\n};\n\nexport default ControlableModal;\n","C:\\OdinFront\\src\\components\\SecondsPicker\\index.jsx",[],"C:\\OdinFront\\src\\components\\Buttons\\RequestV2Button.jsx",["851","852","853","854"],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineTestsConfig\\index.jsx",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineTestsConfig\\styles.js",[],"C:\\OdinFront\\src\\pages\\teacher\\DisciplineConfig\\DisciplineTestsConfig\\EditModal.jsx",[],{"ruleId":"855","replacedBy":"856"},{"ruleId":"857","replacedBy":"858"},{"ruleId":"859","severity":1,"message":"860","line":3,"column":8,"nodeType":"861","messageId":"862","endLine":3,"endColumn":13},{"ruleId":"859","severity":1,"message":"863","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":24},{"ruleId":"859","severity":1,"message":"864","line":4,"column":26,"nodeType":"861","messageId":"862","endLine":4,"endColumn":31},{"ruleId":"859","severity":1,"message":"865","line":49,"column":8,"nodeType":"861","messageId":"862","endLine":49,"endColumn":17},{"ruleId":"859","severity":1,"message":"866","line":56,"column":8,"nodeType":"861","messageId":"862","endLine":56,"endColumn":20},{"ruleId":"859","severity":1,"message":"867","line":139,"column":9,"nodeType":"861","messageId":"862","endLine":139,"endColumn":14},{"ruleId":"859","severity":1,"message":"868","line":2,"column":26,"nodeType":"861","messageId":"862","endLine":2,"endColumn":36},{"ruleId":"859","severity":1,"message":"869","line":3,"column":41,"nodeType":"861","messageId":"862","endLine":3,"endColumn":46},{"ruleId":"859","severity":1,"message":"870","line":6,"column":24,"nodeType":"861","messageId":"862","endLine":6,"endColumn":41},{"ruleId":"859","severity":1,"message":"871","line":7,"column":17,"nodeType":"861","messageId":"862","endLine":7,"endColumn":31},{"ruleId":"859","severity":1,"message":"872","line":8,"column":17,"nodeType":"861","messageId":"862","endLine":8,"endColumn":31},{"ruleId":"859","severity":1,"message":"873","line":9,"column":16,"nodeType":"861","messageId":"862","endLine":9,"endColumn":25},{"ruleId":"859","severity":1,"message":"874","line":10,"column":14,"nodeType":"861","messageId":"862","endLine":10,"endColumn":27},{"ruleId":"859","severity":1,"message":"875","line":11,"column":14,"nodeType":"861","messageId":"862","endLine":11,"endColumn":27},{"ruleId":"859","severity":1,"message":"876","line":12,"column":14,"nodeType":"861","messageId":"862","endLine":12,"endColumn":27},{"ruleId":"859","severity":1,"message":"877","line":13,"column":14,"nodeType":"861","messageId":"862","endLine":13,"endColumn":27},{"ruleId":"859","severity":1,"message":"878","line":14,"column":14,"nodeType":"861","messageId":"862","endLine":14,"endColumn":27},{"ruleId":"859","severity":1,"message":"879","line":15,"column":14,"nodeType":"861","messageId":"862","endLine":15,"endColumn":27},{"ruleId":"859","severity":1,"message":"880","line":16,"column":14,"nodeType":"861","messageId":"862","endLine":16,"endColumn":27},{"ruleId":"859","severity":1,"message":"881","line":17,"column":14,"nodeType":"861","messageId":"862","endLine":17,"endColumn":27},{"ruleId":"859","severity":1,"message":"882","line":18,"column":14,"nodeType":"861","messageId":"862","endLine":18,"endColumn":27},{"ruleId":"859","severity":1,"message":"883","line":19,"column":18,"nodeType":"861","messageId":"862","endLine":19,"endColumn":35},{"ruleId":"859","severity":1,"message":"884","line":20,"column":3,"nodeType":"861","messageId":"862","endLine":20,"endColumn":12},{"ruleId":"859","severity":1,"message":"885","line":21,"column":3,"nodeType":"861","messageId":"862","endLine":21,"endColumn":16},{"ruleId":"859","severity":1,"message":"886","line":24,"column":3,"nodeType":"861","messageId":"862","endLine":24,"endColumn":9},{"ruleId":"859","severity":1,"message":"887","line":91,"column":7,"nodeType":"861","messageId":"862","endLine":91,"endColumn":21},{"ruleId":"859","severity":1,"message":"869","line":1,"column":26,"nodeType":"861","messageId":"862","endLine":1,"endColumn":31},{"ruleId":"859","severity":1,"message":"888","line":12,"column":8,"nodeType":"861","messageId":"862","endLine":12,"endColumn":24},{"ruleId":"859","severity":1,"message":"889","line":16,"column":7,"nodeType":"861","messageId":"862","endLine":16,"endColumn":13},{"ruleId":"859","severity":1,"message":"868","line":2,"column":22,"nodeType":"861","messageId":"862","endLine":2,"endColumn":32},{"ruleId":"859","severity":1,"message":"890","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":14},{"ruleId":"859","severity":1,"message":"891","line":5,"column":27,"nodeType":"861","messageId":"862","endLine":5,"endColumn":36},{"ruleId":"859","severity":1,"message":"892","line":2,"column":39,"nodeType":"861","messageId":"862","endLine":2,"endColumn":45},{"ruleId":"859","severity":1,"message":"891","line":1,"column":27,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"893","line":11,"column":10,"nodeType":"861","messageId":"862","endLine":11,"endColumn":13},{"ruleId":"859","severity":1,"message":"894","line":12,"column":8,"nodeType":"861","messageId":"862","endLine":12,"endColumn":20},{"ruleId":"859","severity":1,"message":"895","line":19,"column":8,"nodeType":"861","messageId":"862","endLine":19,"endColumn":16},{"ruleId":"859","severity":1,"message":"896","line":2,"column":3,"nodeType":"861","messageId":"862","endLine":2,"endColumn":9},{"ruleId":"859","severity":1,"message":"869","line":5,"column":3,"nodeType":"861","messageId":"862","endLine":5,"endColumn":8},{"ruleId":"859","severity":1,"message":"897","line":11,"column":8,"nodeType":"861","messageId":"862","endLine":11,"endColumn":17},{"ruleId":"859","severity":1,"message":"898","line":12,"column":8,"nodeType":"861","messageId":"862","endLine":12,"endColumn":19},{"ruleId":"859","severity":1,"message":"899","line":13,"column":8,"nodeType":"861","messageId":"862","endLine":13,"endColumn":17},{"ruleId":"859","severity":1,"message":"900","line":14,"column":8,"nodeType":"861","messageId":"862","endLine":14,"endColumn":24},{"ruleId":"859","severity":1,"message":"901","line":15,"column":8,"nodeType":"861","messageId":"862","endLine":15,"endColumn":22},{"ruleId":"859","severity":1,"message":"902","line":16,"column":8,"nodeType":"861","messageId":"862","endLine":16,"endColumn":14},{"ruleId":"859","severity":1,"message":"903","line":21,"column":10,"nodeType":"861","messageId":"862","endLine":21,"endColumn":16},{"ruleId":"904","severity":1,"message":"905","line":37,"column":43,"nodeType":"906","messageId":"907","endLine":37,"endColumn":45},{"ruleId":"859","severity":1,"message":"908","line":43,"column":9,"nodeType":"861","messageId":"862","endLine":43,"endColumn":22},{"ruleId":"904","severity":1,"message":"905","line":45,"column":48,"nodeType":"906","messageId":"907","endLine":45,"endColumn":50},{"ruleId":"909","severity":1,"message":"910","line":88,"column":6,"nodeType":"911","endLine":88,"endColumn":8,"suggestions":"912"},{"ruleId":"859","severity":1,"message":"913","line":2,"column":14,"nodeType":"861","messageId":"862","endLine":2,"endColumn":20},{"ruleId":"859","severity":1,"message":"914","line":43,"column":10,"nodeType":"861","messageId":"862","endLine":43,"endColumn":26},{"ruleId":"859","severity":1,"message":"915","line":43,"column":28,"nodeType":"861","messageId":"862","endLine":43,"endColumn":47},{"ruleId":"859","severity":1,"message":"916","line":45,"column":10,"nodeType":"861","messageId":"862","endLine":45,"endColumn":23},{"ruleId":"859","severity":1,"message":"917","line":45,"column":25,"nodeType":"861","messageId":"862","endLine":45,"endColumn":41},{"ruleId":"909","severity":1,"message":"918","line":42,"column":6,"nodeType":"911","endLine":42,"endColumn":16,"suggestions":"919"},{"ruleId":"859","severity":1,"message":"920","line":3,"column":8,"nodeType":"861","messageId":"862","endLine":3,"endColumn":20},{"ruleId":"859","severity":1,"message":"921","line":15,"column":7,"nodeType":"861","messageId":"862","endLine":15,"endColumn":18},{"ruleId":"909","severity":1,"message":"918","line":77,"column":6,"nodeType":"911","endLine":77,"endColumn":16,"suggestions":"922"},{"ruleId":"859","severity":1,"message":"920","line":4,"column":8,"nodeType":"861","messageId":"862","endLine":4,"endColumn":20},{"ruleId":"859","severity":1,"message":"893","line":7,"column":10,"nodeType":"861","messageId":"862","endLine":7,"endColumn":13},{"ruleId":"859","severity":1,"message":"923","line":7,"column":15,"nodeType":"861","messageId":"862","endLine":7,"endColumn":22},{"ruleId":"859","severity":1,"message":"924","line":7,"column":32,"nodeType":"861","messageId":"862","endLine":7,"endColumn":43},{"ruleId":"859","severity":1,"message":"921","line":19,"column":7,"nodeType":"861","messageId":"862","endLine":19,"endColumn":18},{"ruleId":"909","severity":1,"message":"918","line":106,"column":6,"nodeType":"911","endLine":106,"endColumn":8,"suggestions":"925"},{"ruleId":"859","severity":1,"message":"901","line":15,"column":8,"nodeType":"861","messageId":"862","endLine":15,"endColumn":22},{"ruleId":"904","severity":1,"message":"905","line":79,"column":48,"nodeType":"906","messageId":"907","endLine":79,"endColumn":50},{"ruleId":"909","severity":1,"message":"910","line":128,"column":6,"nodeType":"911","endLine":128,"endColumn":8,"suggestions":"926"},{"ruleId":"859","severity":1,"message":"927","line":14,"column":10,"nodeType":"861","messageId":"862","endLine":14,"endColumn":17},{"ruleId":"859","severity":1,"message":"928","line":15,"column":10,"nodeType":"861","messageId":"862","endLine":15,"endColumn":14},{"ruleId":"859","severity":1,"message":"929","line":16,"column":10,"nodeType":"861","messageId":"862","endLine":16,"endColumn":27},{"ruleId":"859","severity":1,"message":"930","line":16,"column":29,"nodeType":"861","messageId":"862","endLine":16,"endColumn":49},{"ruleId":"859","severity":1,"message":"931","line":17,"column":10,"nodeType":"861","messageId":"862","endLine":17,"endColumn":23},{"ruleId":"859","severity":1,"message":"932","line":17,"column":25,"nodeType":"861","messageId":"862","endLine":17,"endColumn":41},{"ruleId":"859","severity":1,"message":"933","line":8,"column":8,"nodeType":"861","messageId":"862","endLine":8,"endColumn":25},{"ruleId":"859","severity":1,"message":"934","line":10,"column":8,"nodeType":"861","messageId":"862","endLine":10,"endColumn":17},{"ruleId":"859","severity":1,"message":"935","line":11,"column":8,"nodeType":"861","messageId":"862","endLine":11,"endColumn":24},{"ruleId":"859","severity":1,"message":"936","line":13,"column":8,"nodeType":"861","messageId":"862","endLine":13,"endColumn":13},{"ruleId":"859","severity":1,"message":"893","line":5,"column":10,"nodeType":"861","messageId":"862","endLine":5,"endColumn":13},{"ruleId":"859","severity":1,"message":"923","line":5,"column":15,"nodeType":"861","messageId":"862","endLine":5,"endColumn":22},{"ruleId":"859","severity":1,"message":"924","line":5,"column":32,"nodeType":"861","messageId":"862","endLine":5,"endColumn":43},{"ruleId":"859","severity":1,"message":"937","line":5,"column":45,"nodeType":"861","messageId":"862","endLine":5,"endColumn":51},{"ruleId":"859","severity":1,"message":"938","line":8,"column":10,"nodeType":"861","messageId":"862","endLine":8,"endColumn":20},{"ruleId":"859","severity":1,"message":"889","line":14,"column":7,"nodeType":"861","messageId":"862","endLine":14,"endColumn":13},{"ruleId":"859","severity":1,"message":"939","line":25,"column":10,"nodeType":"861","messageId":"862","endLine":25,"endColumn":14},{"ruleId":"859","severity":1,"message":"940","line":25,"column":16,"nodeType":"861","messageId":"862","endLine":25,"endColumn":23},{"ruleId":"859","severity":1,"message":"941","line":26,"column":10,"nodeType":"861","messageId":"862","endLine":26,"endColumn":26},{"ruleId":"859","severity":1,"message":"942","line":26,"column":28,"nodeType":"861","messageId":"862","endLine":26,"endColumn":47},{"ruleId":"909","severity":1,"message":"918","line":71,"column":6,"nodeType":"911","endLine":71,"endColumn":8,"suggestions":"943"},{"ruleId":"859","severity":1,"message":"892","line":5,"column":3,"nodeType":"861","messageId":"862","endLine":5,"endColumn":9},{"ruleId":"859","severity":1,"message":"921","line":25,"column":7,"nodeType":"861","messageId":"862","endLine":25,"endColumn":18},{"ruleId":"859","severity":1,"message":"944","line":75,"column":10,"nodeType":"861","messageId":"862","endLine":75,"endColumn":15},{"ruleId":"909","severity":1,"message":"910","line":128,"column":6,"nodeType":"911","endLine":128,"endColumn":12,"suggestions":"945"},{"ruleId":"859","severity":1,"message":"869","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":15},{"ruleId":"859","severity":1,"message":"946","line":11,"column":9,"nodeType":"861","messageId":"862","endLine":11,"endColumn":12},{"ruleId":"859","severity":1,"message":"947","line":12,"column":21,"nodeType":"861","messageId":"862","endLine":12,"endColumn":33},{"ruleId":"859","severity":1,"message":"892","line":5,"column":3,"nodeType":"861","messageId":"862","endLine":5,"endColumn":9},{"ruleId":"909","severity":1,"message":"910","line":116,"column":6,"nodeType":"911","endLine":116,"endColumn":12,"suggestions":"948"},{"ruleId":"859","severity":1,"message":"933","line":8,"column":8,"nodeType":"861","messageId":"862","endLine":8,"endColumn":25},{"ruleId":"859","severity":1,"message":"934","line":10,"column":8,"nodeType":"861","messageId":"862","endLine":10,"endColumn":17},{"ruleId":"859","severity":1,"message":"935","line":11,"column":8,"nodeType":"861","messageId":"862","endLine":11,"endColumn":24},{"ruleId":"859","severity":1,"message":"936","line":13,"column":8,"nodeType":"861","messageId":"862","endLine":13,"endColumn":13},{"ruleId":"859","severity":1,"message":"949","line":6,"column":3,"nodeType":"861","messageId":"862","endLine":6,"endColumn":25},{"ruleId":"859","severity":1,"message":"950","line":7,"column":3,"nodeType":"861","messageId":"862","endLine":7,"endColumn":17},{"ruleId":"859","severity":1,"message":"892","line":14,"column":3,"nodeType":"861","messageId":"862","endLine":14,"endColumn":9},{"ruleId":"859","severity":1,"message":"951","line":27,"column":15,"nodeType":"861","messageId":"862","endLine":27,"endColumn":22},{"ruleId":"859","severity":1,"message":"952","line":30,"column":8,"nodeType":"861","messageId":"862","endLine":30,"endColumn":22},{"ruleId":"859","severity":1,"message":"953","line":31,"column":8,"nodeType":"861","messageId":"862","endLine":31,"endColumn":22},{"ruleId":"859","severity":1,"message":"954","line":34,"column":7,"nodeType":"861","messageId":"862","endLine":34,"endColumn":21},{"ruleId":"859","severity":1,"message":"955","line":62,"column":19,"nodeType":"861","messageId":"862","endLine":62,"endColumn":29},{"ruleId":"859","severity":1,"message":"914","line":43,"column":10,"nodeType":"861","messageId":"862","endLine":43,"endColumn":26},{"ruleId":"859","severity":1,"message":"915","line":43,"column":28,"nodeType":"861","messageId":"862","endLine":43,"endColumn":47},{"ruleId":"859","severity":1,"message":"916","line":45,"column":10,"nodeType":"861","messageId":"862","endLine":45,"endColumn":23},{"ruleId":"859","severity":1,"message":"917","line":45,"column":25,"nodeType":"861","messageId":"862","endLine":45,"endColumn":41},{"ruleId":"859","severity":1,"message":"949","line":6,"column":3,"nodeType":"861","messageId":"862","endLine":6,"endColumn":25},{"ruleId":"859","severity":1,"message":"950","line":7,"column":3,"nodeType":"861","messageId":"862","endLine":7,"endColumn":17},{"ruleId":"859","severity":1,"message":"892","line":14,"column":3,"nodeType":"861","messageId":"862","endLine":14,"endColumn":9},{"ruleId":"859","severity":1,"message":"956","line":20,"column":3,"nodeType":"861","messageId":"862","endLine":20,"endColumn":11},{"ruleId":"859","severity":1,"message":"951","line":27,"column":15,"nodeType":"861","messageId":"862","endLine":27,"endColumn":22},{"ruleId":"859","severity":1,"message":"957","line":28,"column":8,"nodeType":"861","messageId":"862","endLine":28,"endColumn":24},{"ruleId":"859","severity":1,"message":"952","line":30,"column":8,"nodeType":"861","messageId":"862","endLine":30,"endColumn":22},{"ruleId":"859","severity":1,"message":"953","line":31,"column":8,"nodeType":"861","messageId":"862","endLine":31,"endColumn":22},{"ruleId":"859","severity":1,"message":"900","line":32,"column":10,"nodeType":"861","messageId":"862","endLine":32,"endColumn":26},{"ruleId":"859","severity":1,"message":"954","line":35,"column":7,"nodeType":"861","messageId":"862","endLine":35,"endColumn":21},{"ruleId":"859","severity":1,"message":"955","line":63,"column":19,"nodeType":"861","messageId":"862","endLine":63,"endColumn":29},{"ruleId":"859","severity":1,"message":"958","line":66,"column":10,"nodeType":"861","messageId":"862","endLine":66,"endColumn":17},{"ruleId":"859","severity":1,"message":"959","line":70,"column":10,"nodeType":"861","messageId":"862","endLine":70,"endColumn":21},{"ruleId":"859","severity":1,"message":"869","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":15},{"ruleId":"859","severity":1,"message":"960","line":4,"column":17,"nodeType":"861","messageId":"862","endLine":4,"endColumn":25},{"ruleId":"859","severity":1,"message":"961","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":20},{"ruleId":"859","severity":1,"message":"891","line":1,"column":27,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"962","line":5,"column":3,"nodeType":"861","messageId":"862","endLine":5,"endColumn":14},{"ruleId":"859","severity":1,"message":"963","line":18,"column":8,"nodeType":"861","messageId":"862","endLine":18,"endColumn":19},{"ruleId":"859","severity":1,"message":"964","line":24,"column":7,"nodeType":"861","messageId":"862","endLine":24,"endColumn":14},{"ruleId":"859","severity":1,"message":"891","line":1,"column":27,"nodeType":"861","messageId":"862","endLine":1,"endColumn":36},{"ruleId":"859","severity":1,"message":"965","line":9,"column":3,"nodeType":"861","messageId":"862","endLine":9,"endColumn":10},{"ruleId":"859","severity":1,"message":"963","line":18,"column":8,"nodeType":"861","messageId":"862","endLine":18,"endColumn":19},{"ruleId":"859","severity":1,"message":"966","line":20,"column":8,"nodeType":"861","messageId":"862","endLine":20,"endColumn":22},{"ruleId":"859","severity":1,"message":"964","line":24,"column":7,"nodeType":"861","messageId":"862","endLine":24,"endColumn":14},{"ruleId":"859","severity":1,"message":"895","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":16},{"ruleId":"859","severity":1,"message":"967","line":7,"column":8,"nodeType":"861","messageId":"862","endLine":7,"endColumn":21},{"ruleId":"859","severity":1,"message":"968","line":8,"column":8,"nodeType":"861","messageId":"862","endLine":8,"endColumn":24},{"ruleId":"859","severity":1,"message":"969","line":15,"column":7,"nodeType":"861","messageId":"862","endLine":15,"endColumn":15},{"ruleId":"859","severity":1,"message":"970","line":22,"column":9,"nodeType":"861","messageId":"862","endLine":22,"endColumn":13},{"ruleId":"859","severity":1,"message":"868","line":2,"column":22,"nodeType":"861","messageId":"862","endLine":2,"endColumn":32},{"ruleId":"859","severity":1,"message":"890","line":4,"column":10,"nodeType":"861","messageId":"862","endLine":4,"endColumn":14},{"ruleId":"859","severity":1,"message":"891","line":5,"column":27,"nodeType":"861","messageId":"862","endLine":5,"endColumn":36},{"ruleId":"859","severity":1,"message":"914","line":43,"column":10,"nodeType":"861","messageId":"862","endLine":43,"endColumn":26},{"ruleId":"859","severity":1,"message":"915","line":43,"column":28,"nodeType":"861","messageId":"862","endLine":43,"endColumn":47},{"ruleId":"859","severity":1,"message":"916","line":45,"column":10,"nodeType":"861","messageId":"862","endLine":45,"endColumn":23},{"ruleId":"859","severity":1,"message":"917","line":45,"column":25,"nodeType":"861","messageId":"862","endLine":45,"endColumn":41},{"ruleId":"859","severity":1,"message":"892","line":5,"column":3,"nodeType":"861","messageId":"862","endLine":5,"endColumn":9},{"ruleId":"859","severity":1,"message":"921","line":24,"column":7,"nodeType":"861","messageId":"862","endLine":24,"endColumn":18},{"ruleId":"909","severity":1,"message":"910","line":108,"column":6,"nodeType":"911","endLine":108,"endColumn":12,"suggestions":"971"},{"ruleId":"859","severity":1,"message":"972","line":8,"column":3,"nodeType":"861","messageId":"862","endLine":8,"endColumn":6},{"ruleId":"859","severity":1,"message":"893","line":12,"column":10,"nodeType":"861","messageId":"862","endLine":12,"endColumn":13},{"ruleId":"859","severity":1,"message":"973","line":13,"column":8,"nodeType":"861","messageId":"862","endLine":13,"endColumn":24},{"ruleId":"859","severity":1,"message":"895","line":19,"column":8,"nodeType":"861","messageId":"862","endLine":19,"endColumn":16},{"ruleId":"859","severity":1,"message":"974","line":13,"column":8,"nodeType":"861","messageId":"862","endLine":13,"endColumn":20},{"ruleId":"859","severity":1,"message":"892","line":5,"column":3,"nodeType":"861","messageId":"862","endLine":5,"endColumn":9},{"ruleId":"909","severity":1,"message":"910","line":76,"column":6,"nodeType":"911","endLine":76,"endColumn":12,"suggestions":"975"},{"ruleId":"859","severity":1,"message":"976","line":3,"column":10,"nodeType":"861","messageId":"862","endLine":3,"endColumn":14},{"ruleId":"859","severity":1,"message":"920","line":4,"column":8,"nodeType":"861","messageId":"862","endLine":4,"endColumn":20},{"ruleId":"859","severity":1,"message":"963","line":6,"column":8,"nodeType":"861","messageId":"862","endLine":6,"endColumn":19},{"ruleId":"859","severity":1,"message":"893","line":7,"column":10,"nodeType":"861","messageId":"862","endLine":7,"endColumn":13},{"ruleId":"859","severity":1,"message":"923","line":7,"column":15,"nodeType":"861","messageId":"862","endLine":7,"endColumn":22},{"ruleId":"859","severity":1,"message":"924","line":7,"column":32,"nodeType":"861","messageId":"862","endLine":7,"endColumn":43},{"ruleId":"859","severity":1,"message":"977","line":15,"column":8,"nodeType":"861","messageId":"862","endLine":15,"endColumn":15},{"ruleId":"859","severity":1,"message":"978","line":24,"column":10,"nodeType":"861","messageId":"862","endLine":24,"endColumn":16},{"ruleId":"859","severity":1,"message":"979","line":24,"column":18,"nodeType":"861","messageId":"862","endLine":24,"endColumn":27},{"ruleId":"909","severity":1,"message":"918","line":106,"column":6,"nodeType":"911","endLine":106,"endColumn":8,"suggestions":"980"},{"ruleId":"859","severity":1,"message":"949","line":6,"column":3,"nodeType":"861","messageId":"862","endLine":6,"endColumn":25},{"ruleId":"859","severity":1,"message":"950","line":7,"column":3,"nodeType":"861","messageId":"862","endLine":7,"endColumn":17},{"ruleId":"859","severity":1,"message":"892","line":14,"column":3,"nodeType":"861","messageId":"862","endLine":14,"endColumn":9},{"ruleId":"859","severity":1,"message":"951","line":27,"column":15,"nodeType":"861","messageId":"862","endLine":27,"endColumn":22},{"ruleId":"859","severity":1,"message":"952","line":30,"column":8,"nodeType":"861","messageId":"862","endLine":30,"endColumn":22},{"ruleId":"859","severity":1,"message":"953","line":31,"column":8,"nodeType":"861","messageId":"862","endLine":31,"endColumn":22},{"ruleId":"859","severity":1,"message":"954","line":34,"column":7,"nodeType":"861","messageId":"862","endLine":34,"endColumn":21},{"ruleId":"859","severity":1,"message":"955","line":62,"column":19,"nodeType":"861","messageId":"862","endLine":62,"endColumn":29},{"ruleId":"859","severity":1,"message":"960","line":2,"column":17,"nodeType":"861","messageId":"862","endLine":2,"endColumn":25},{"ruleId":"859","severity":1,"message":"891","line":15,"column":10,"nodeType":"861","messageId":"862","endLine":15,"endColumn":19},{"ruleId":"859","severity":1,"message":"933","line":8,"column":8,"nodeType":"861","messageId":"862","endLine":8,"endColumn":25},{"ruleId":"859","severity":1,"message":"934","line":10,"column":8,"nodeType":"861","messageId":"862","endLine":10,"endColumn":17},{"ruleId":"859","severity":1,"message":"935","line":11,"column":8,"nodeType":"861","messageId":"862","endLine":11,"endColumn":24},{"ruleId":"859","severity":1,"message":"936","line":13,"column":8,"nodeType":"861","messageId":"862","endLine":13,"endColumn":13},"no-native-reassign",["981"],"no-negated-in-lhs",["982"],"no-unused-vars","'cross' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'CloseIcon' is defined but never used.","'Notification' is defined but never used.","'timer' is assigned a value but never used.","'IconButton' is defined but never used.","'Paper' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'Semester1Icon' is defined but never used.","'Semester2Icon' is defined but never used.","'Semester3Icon' is defined but never used.","'Semester4Icon' is defined but never used.","'Semester5Icon' is defined but never used.","'Semester6Icon' is defined but never used.","'Semester7Icon' is defined but never used.","'Semester8Icon' is defined but never used.","'Semester9Icon' is defined but never used.","'SemesterOtherIcon' is defined but never used.","'ExitToApp' is defined but never used.","'Notifications' is defined but never used.","'School' is defined but never used.","'layoutDispatch' is assigned a value but never used.","'DisciplineCourse' is defined but never used.","'monthA' is assigned a value but never used.","'Edit' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'Add' is defined but never used.","'Autocomplete' is defined but never used.","'MuiTable' is defined but never used.","'Avatar' is defined but never used.","'FormLabel' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormHelperText' is defined but never used.","'Switch' is defined but never used.","'Delete' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'appendTeacher' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["983"],"'common' is defined but never used.","'invitationsCount' is assigned a value but never used.","'setInvitationsCount' is assigned a value but never used.","'admissionYear' is assigned a value but never used.","'setAdmissionYear' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.",["984"],"'MUIDataTable' is defined but never used.","'convertData' is assigned a value but never used.",["985"],"'Archive' is defined but never used.","'Description' is defined but never used.",["986"],["987"],"'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'passwordForDelete' is assigned a value but never used.","'setPasswordForDelete' is assigned a value but never used.","'deleteAllowed' is assigned a value but never used.","'setDeleteAllowed' is assigned a value but never used.","'GetAppRoundedIcon' is defined but never used.","'CheckIcon' is defined but never used.","'HighlightOffIcon' is defined but never used.","'Close' is defined but never used.","'GetApp' is defined but never used.","'Typography' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'alertDescription' is assigned a value but never used.","'setAlertDescription' is assigned a value but never used.",["988"],"'error' is assigned a value but never used.",["989"],"'now' is assigned a value but never used.","'setp100local' is assigned a value but never used.",["990"],"'KeyboardDateTimePicker' is defined but never used.","'DateTimePicker' is defined but never used.","'Publish' is defined but never used.","'AttachmentIcon' is defined but never used.","'AttachFileIcon' is defined but never used.","'getInvitations' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'Checkbox' is defined but never used.","'UploadFileButton' is defined but never used.","'openLab' is assigned a value but never used.","'description' is assigned a value but never used.","'useState' is defined but never used.","'useCountDown' is defined but never used.","'CardActions' is defined but never used.","'LoadingPage' is defined but never used.","'getData' is assigned a value but never used.","'Divider' is defined but never used.","'ProgressCircle' is defined but never used.","'DateToRusTime' is defined but never used.","'SecondsToRusTime' is defined but never used.","'Statuses' is assigned a value but never used.","'Mark' is assigned a value but never used.",["991"],"'Fab' is defined but never used.","'CircularProgress' is defined but never used.","'SettingsIcon' is defined but never used.",["992"],"'Grid' is defined but never used.","'Section' is defined but never used.","'update' is assigned a value but never used.","'setUpdate' is assigned a value but never used.",["993"],"no-global-assign","no-unsafe-negation",{"desc":"994","fix":"995"},{"desc":"996","fix":"997"},{"desc":"996","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"994","fix":"1001"},{"desc":"999","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"1003","fix":"1005"},{"desc":"1003","fix":"1006"},{"desc":"1003","fix":"1007"},{"desc":"999","fix":"1008"},"Update the dependencies array to be: [loadData]",{"range":"1009","text":"1010"},"Update the dependencies array to be: [getData, rerender]",{"range":"1011","text":"1012"},{"range":"1013","text":"1012"},"Update the dependencies array to be: [getData]",{"range":"1014","text":"1015"},{"range":"1016","text":"1010"},{"range":"1017","text":"1015"},"Update the dependencies array to be: [loadData, open]",{"range":"1018","text":"1019"},{"range":"1020","text":"1019"},{"range":"1021","text":"1019"},{"range":"1022","text":"1019"},{"range":"1023","text":"1015"},[2638,2640],"[loadData]",[1480,1490],"[getData, rerender]",[2212,2222],[3124,3126],"[getData]",[3934,3936],[2064,2066],[3810,3816],"[loadData, open]",[3336,3342],[3132,3138],[2174,2180],[3064,3066]]